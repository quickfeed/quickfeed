// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file qf/types.proto (package qf, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { BuildInfo, Score } from "../kit/score/score_pb";
import { file_kit_score_score } from "../kit/score/score_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qf/types.proto.
 */
export const file_qf_types: GenFile = /*@__PURE__*/
  fileDesc("Cg5xZi90eXBlcy5wcm90bxICcWYiqgIKBFVzZXISCgoCSUQYASABKAQSDwoHSXNBZG1pbhgCIAEoCBIMCgROYW1lGAMgASgJEhEKCVN0dWRlbnRJRBgEIAEoCRINCgVFbWFpbBgFIAEoCRIRCglBdmF0YXJVUkwYBiABKAkSDQoFTG9naW4YByABKAkSEwoLVXBkYXRlVG9rZW4YCCABKAgSEwoLU2NtUmVtb3RlSUQYCSABKAQSFAoMUmVmcmVzaFRva2VuGAogASgJEiMKC0Vucm9sbG1lbnRzGAsgAygLMg4ucWYuRW5yb2xsbWVudBJOChBGZWVkYmFja1JlY2VpcHRzGAwgAygLMhMucWYuRmVlZGJhY2tSZWNlaXB0Qh/KtQMbogEYZ29ybToiZm9yZWlnbktleTpVc2VySUQiIiAKBVVzZXJzEhcKBXVzZXJzGAEgAygLMggucWYuVXNlciKqAgoFR3JvdXASCgoCSUQYASABKAQSLQoEbmFtZRgCIAEoCUIfyrUDG6IBGGdvcm06InVuaXF1ZUluZGV4Omdyb3VwIhIxCghjb3Vyc2VJRBgDIAEoBEIfyrUDG6IBGGdvcm06InVuaXF1ZUluZGV4Omdyb3VwIhIlCgZzdGF0dXMYBSABKA4yFS5xZi5Hcm91cC5Hcm91cFN0YXR1cxI9CgV1c2VycxgGIAMoCzIILnFmLlVzZXJCJMq1AyCiAR1nb3JtOiJtYW55Mm1hbnk6Z3JvdXBfdXNlcnM7IhIjCgtlbnJvbGxtZW50cxgHIAMoCzIOLnFmLkVucm9sbG1lbnQiKAoLR3JvdXBTdGF0dXMSCwoHUEVORElORxAAEgwKCEFQUFJPVkVEEAEiIwoGR3JvdXBzEhkKBmdyb3VwcxgBIAMoCzIJLnFmLkdyb3VwIq8DCgZDb3Vyc2USCgoCSUQYASABKAQSFwoPY291cnNlQ3JlYXRvcklEGAIgASgEEgwKBG5hbWUYAyABKAkSLgoEY29kZRgEIAEoCUIgyrUDHKIBGWdvcm06InVuaXF1ZUluZGV4OmNvdXJzZSISLgoEeWVhchgFIAEoDUIgyrUDHKIBGWdvcm06InVuaXF1ZUluZGV4OmNvdXJzZSISCwoDdGFnGAYgASgJEhkKEVNjbU9yZ2FuaXphdGlvbklEGAggASgEEhsKE1NjbU9yZ2FuaXphdGlvbk5hbWUYCSABKAkSEAoIc2xpcERheXMYCiABKA0SGAoQRG9ja2VyZmlsZURpZ2VzdBgLIAEoCRI8CghlbnJvbGxlZBgMIAEoDjIZLnFmLkVucm9sbG1lbnQuVXNlclN0YXR1c0IPyrUDC6IBCGdvcm06Ii0iEiMKC2Vucm9sbG1lbnRzGA0gAygLMg4ucWYuRW5yb2xsbWVudBIjCgthc3NpZ25tZW50cxgOIAMoCzIOLnFmLkFzc2lnbm1lbnQSGQoGZ3JvdXBzGA8gAygLMgkucWYuR3JvdXAiJgoHQ291cnNlcxIbCgdjb3Vyc2VzGAEgAygLMgoucWYuQ291cnNlIqUDCgpSZXBvc2l0b3J5EgoKAklEGAEgASgEEj8KEVNjbU9yZ2FuaXphdGlvbklEGAIgASgEQiTKtQMgogEdZ29ybToidW5pcXVlSW5kZXg6cmVwb3NpdG9yeSISFwoPU2NtUmVwb3NpdG9yeUlEGAMgASgEEjQKBnVzZXJJRBgEIAEoBEIkyrUDIKIBHWdvcm06InVuaXF1ZUluZGV4OnJlcG9zaXRvcnkiEjUKB2dyb3VwSUQYBSABKARCJMq1AyCiAR1nb3JtOiJ1bmlxdWVJbmRleDpyZXBvc2l0b3J5IhIPCgdIVE1MVVJMGAYgASgJEksKCHJlcG9UeXBlGAcgASgOMhMucWYuUmVwb3NpdG9yeS5UeXBlQiTKtQMgogEdZ29ybToidW5pcXVlSW5kZXg6cmVwb3NpdG9yeSISGQoGaXNzdWVzGAggAygLMgkucWYuSXNzdWUiSwoEVHlwZRIICgROT05FEAASCAoESU5GTxABEg8KC0FTU0lHTk1FTlRTEAISCQoFVEVTVFMQAxIICgRVU0VSEAQSCQoFR1JPVVAQBSKQBQoKRW5yb2xsbWVudBIKCgJJRBgBIAEoBBI2Cghjb3Vyc2VJRBgCIAEoBEIkyrUDIKIBHWdvcm06InVuaXF1ZUluZGV4OmVucm9sbG1lbnQiEjQKBnVzZXJJRBgDIAEoBEIkyrUDIKIBHWdvcm06InVuaXF1ZUluZGV4OmVucm9sbG1lbnQiEg8KB2dyb3VwSUQYBCABKAQSFgoEdXNlchgFIAEoCzIILnFmLlVzZXISGgoGY291cnNlGAYgASgLMgoucWYuQ291cnNlEhgKBWdyb3VwGAcgASgLMgkucWYuR3JvdXASKQoGc3RhdHVzGAggASgOMhkucWYuRW5yb2xsbWVudC5Vc2VyU3RhdHVzEioKBXN0YXRlGAkgASgOMhsucWYuRW5yb2xsbWVudC5EaXNwbGF5U3RhdGUSKgoRc2xpcERheXNSZW1haW5pbmcYCiABKA1CD8q1AwuiAQhnb3JtOiItIhJmChBsYXN0QWN0aXZpdHlEYXRlGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIwyrUDLKIBKWdvcm06InNlcmlhbGl6ZXI6dGltZXN0YW1wO3R5cGU6ZGF0ZXRpbWUiEhUKDXRvdGFsQXBwcm92ZWQYDCABKAQSJgoMdXNlZFNsaXBEYXlzGA0gAygLMhAucWYuVXNlZFNsaXBEYXlzIj0KClVzZXJTdGF0dXMSCAoETk9ORRAAEgsKB1BFTkRJTkcQARILCgdTVFVERU5UEAISCwoHVEVBQ0hFUhADIkAKDERpc3BsYXlTdGF0ZRIJCgVVTlNFVBAAEgoKBkhJRERFThABEgsKB1ZJU0lCTEUQAhIMCghGQVZPUklURRADIlgKDFVzZWRTbGlwRGF5cxIKCgJJRBgBIAEoBBIUCgxlbnJvbGxtZW50SUQYAiABKAQSFAoMYXNzaWdubWVudElEGAMgASgEEhAKCHVzZWREYXlzGAQgASgNIjIKC0Vucm9sbG1lbnRzEiMKC2Vucm9sbG1lbnRzGAEgAygLMg4ucWYuRW5yb2xsbWVudCKlAwoKQXNzaWdubWVudBIKCgJJRBgBIAEoBBIQCghDb3Vyc2VJRBgCIAEoBBIMCgRuYW1lGAMgASgJEl4KCGRlYWRsaW5lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIwyrUDLKIBKWdvcm06InNlcmlhbGl6ZXI6dGltZXN0YW1wO3R5cGU6ZGF0ZXRpbWUiEhMKC2F1dG9BcHByb3ZlGAUgASgIEg0KBW9yZGVyGAYgASgNEhIKCmlzR3JvdXBMYWIYByABKAgSEgoKc2NvcmVMaW1pdBgIIAEoDRIRCglyZXZpZXdlcnMYCSABKA0SGAoQY29udGFpbmVyVGltZW91dBgKIAEoDRIjCgtzdWJtaXNzaW9ucxgLIAMoCzIOLnFmLlN1Ym1pc3Npb24SFwoFdGFza3MYDCADKAsyCC5xZi5UYXNrEi8KEWdyYWRpbmdCZW5jaG1hcmtzGA0gAygLMhQucWYuR3JhZGluZ0JlbmNobWFyaxIjCg1FeHBlY3RlZFRlc3RzGA4gAygLMgwucWYuVGVzdEluZm8iuQEKCFRlc3RJbmZvEgoKAklEGAEgASgEEjgKDEFzc2lnbm1lbnRJRBgCIAEoBEIiyrUDHqIBG2dvcm06InVuaXF1ZUluZGV4OnRlc3RpbmZvIhI0CghUZXN0TmFtZRgDIAEoCUIiyrUDHqIBG2dvcm06InVuaXF1ZUluZGV4OnRlc3RpbmZvIhIQCghNYXhTY29yZRgEIAEoBRIOCgZXZWlnaHQYBSABKAUSDwoHRGV0YWlscxgGIAEoCSKHAQoEVGFzaxIKCgJJRBgBIAEoBBIUCgxhc3NpZ25tZW50SUQYAiABKAQSFwoPYXNzaWdubWVudE9yZGVyGAMgASgNEg0KBXRpdGxlGAQgASgJEgwKBGJvZHkYBSABKAkSDAoEbmFtZRgGIAEoCRIZCgZpc3N1ZXMYByADKAsyCS5xZi5Jc3N1ZSJRCgVJc3N1ZRIKCgJJRBgBIAEoBBIUCgxyZXBvc2l0b3J5SUQYAiABKAQSDgoGdGFza0lEGAMgASgEEhYKDlNjbUlzc3VlTnVtYmVyGAQgASgEIv0BCgtQdWxsUmVxdWVzdBIKCgJJRBgBIAEoBBIXCg9TY21SZXBvc2l0b3J5SUQYAiABKAQSDgoGdGFza0lEGAMgASgEEg8KB2lzc3VlSUQYBCABKAQSDgoGdXNlcklEGAUgASgEEhQKDFNjbUNvbW1lbnRJRBgGIAEoBBIUCgxzb3VyY2VCcmFuY2gYByABKAkSDgoGbnVtYmVyGAggASgEEiQKBXN0YWdlGAkgASgOMhUucWYuUHVsbFJlcXVlc3QuU3RhZ2UiNgoFU3RhZ2USCAoETk9ORRAAEgkKBURSQUZUEAESCgoGUkVWSUVXEAISDAoIQVBQUk9WRUQQAyIyCgtBc3NpZ25tZW50cxIjCgthc3NpZ25tZW50cxgBIAMoCzIOLnFmLkFzc2lnbm1lbnQioQMKClN1Ym1pc3Npb24SCgoCSUQYASABKAQSFAoMQXNzaWdubWVudElEGAIgASgEEg4KBnVzZXJJRBgDIAEoBBIPCgdncm91cElEGAQgASgEEg0KBXNjb3JlGAUgASgNEhIKCmNvbW1pdEhhc2gYBiABKAkSEAoIcmVsZWFzZWQYByABKAgSGQoGR3JhZGVzGAggAygLMgkucWYuR3JhZGUSYgoMYXBwcm92ZWREYXRlGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIwyrUDLKIBKWdvcm06InNlcmlhbGl6ZXI6dGltZXN0YW1wO3R5cGU6ZGF0ZXRpbWUiEhsKB3Jldmlld3MYCiADKAsyCi5xZi5SZXZpZXcSIwoJQnVpbGRJbmZvGAsgASgLMhAuc2NvcmUuQnVpbGRJbmZvEhwKBlNjb3JlcxgMIAMoCzIMLnNjb3JlLlNjb3JlIjwKBlN0YXR1cxIICgROT05FEAASDAoIQVBQUk9WRUQQARIMCghSRUpFQ1RFRBACEgwKCFJFVklTSU9OEAMiMgoLU3VibWlzc2lvbnMSIwoLc3VibWlzc2lvbnMYASADKAsyDi5xZi5TdWJtaXNzaW9uIpYBCgVHcmFkZRI1CgxTdWJtaXNzaW9uSUQYASABKARCH8q1AxuiARhnb3JtOiJ1bmlxdWVJbmRleDpncmFkZSISLwoGVXNlcklEGAIgASgEQh/KtQMbogEYZ29ybToidW5pcXVlSW5kZXg6Z3JhZGUiEiUKBlN0YXR1cxgDIAEoDjIVLnFmLlN1Ym1pc3Npb24uU3RhdHVzIsgBChBHcmFkaW5nQmVuY2htYXJrEgoKAklEGAEgASgEEhAKCENvdXJzZUlEGAIgASgEEhQKDEFzc2lnbm1lbnRJRBgDIAEoBBIQCghSZXZpZXdJRBgEIAEoBBIPCgdoZWFkaW5nGAUgASgJEg8KB2NvbW1lbnQYBiABKAkSTAoIY3JpdGVyaWEYByADKAsyFC5xZi5HcmFkaW5nQ3JpdGVyaW9uQiTKtQMgogEdZ29ybToiZm9yZWlnbktleTpCZW5jaG1hcmtJRCIiNgoKQmVuY2htYXJrcxIoCgpiZW5jaG1hcmtzGAEgAygLMhQucWYuR3JhZGluZ0JlbmNobWFyayLRAQoQR3JhZGluZ0NyaXRlcmlvbhIKCgJJRBgBIAEoBBITCgtCZW5jaG1hcmtJRBgCIAEoBBIQCghDb3Vyc2VJRBgDIAEoBBIOCgZwb2ludHMYBCABKAQSEwoLZGVzY3JpcHRpb24YBSABKAkSKQoFZ3JhZGUYBiABKA4yGi5xZi5HcmFkaW5nQ3JpdGVyaW9uLkdyYWRlEg8KB2NvbW1lbnQYByABKAkiKQoFR3JhZGUSCAoETk9ORRAAEgoKBkZBSUxFRBABEgoKBlBBU1NFRBACIqACCgZSZXZpZXcSCgoCSUQYASABKAQSFAoMU3VibWlzc2lvbklEGAIgASgEEhIKClJldmlld2VySUQYAyABKAQSEAoIZmVlZGJhY2sYBCABKAkSDQoFcmVhZHkYBSABKAgSDQoFc2NvcmUYBiABKA0SUgoRZ3JhZGluZ0JlbmNobWFya3MYByADKAsyFC5xZi5HcmFkaW5nQmVuY2htYXJrQiHKtQMdogEaZ29ybToiZm9yZWlnbktleTpSZXZpZXdJRCISXAoGZWRpdGVkGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIwyrUDLKIBKWdvcm06InNlcmlhbGl6ZXI6dGltZXN0YW1wO3R5cGU6ZGF0ZXRpbWUiIvIBChJBc3NpZ25tZW50RmVlZGJhY2sSCgoCSUQYASABKAQSEAoIQ291cnNlSUQYAiABKAQSFAoMQXNzaWdubWVudElEGAMgASgEEhQKDExpa2VkQ29udGVudBgEIAEoCRIeChZJbXByb3ZlbWVudFN1Z2dlc3Rpb25zGAUgASgJEhEKCVRpbWVTcGVudBgGIAEoDRJfCglDcmVhdGVkQXQYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQjDKtQMsogEpZ29ybToic2VyaWFsaXplcjp0aW1lc3RhbXA7dHlwZTpkYXRldGltZSIikwEKD0ZlZWRiYWNrUmVjZWlwdBJCCgxBc3NpZ25tZW50SUQYASABKARCLMq1AyiiASVnb3JtOiJwcmltYXJ5S2V5O2F1dG9JbmNyZW1lbnQ6ZmFsc2UiEjwKBlVzZXJJRBgCIAEoBEIsyrUDKKIBJWdvcm06InByaW1hcnlLZXk7YXV0b0luY3JlbWVudDpmYWxzZSIiQAoTQXNzaWdubWVudEZlZWRiYWNrcxIpCglmZWVkYmFja3MYASADKAsyFi5xZi5Bc3NpZ25tZW50RmVlZGJhY2tCJlohZ2l0aHViLmNvbS9xdWlja2ZlZWQvcXVpY2tmZWVkL3FmugIAYgZwcm90bzM", [file_google_protobuf_timestamp, file_kit_score_score]);

/**
 * @generated from message qf.User
 */
export type User = Message<"qf.User"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: bool IsAdmin = 2;
   */
  IsAdmin: boolean;

  /**
   * @generated from field: string Name = 3;
   */
  Name: string;

  /**
   * @generated from field: string StudentID = 4;
   */
  StudentID: string;

  /**
   * @generated from field: string Email = 5;
   */
  Email: string;

  /**
   * @generated from field: string AvatarURL = 6;
   */
  AvatarURL: string;

  /**
   * @generated from field: string Login = 7;
   */
  Login: string;

  /**
   * Filter; True if user's JWT token needs to be updated.
   *
   * @generated from field: bool UpdateToken = 8;
   */
  UpdateToken: boolean;

  /**
   * Filter; The user's ID on the remote provider.
   *
   * @generated from field: uint64 ScmRemoteID = 9;
   */
  ScmRemoteID: bigint;

  /**
   * Filter; The user's refresh token that may be exchanged for an access token.
   *
   * @generated from field: string RefreshToken = 10;
   */
  RefreshToken: string;

  /**
   * @generated from field: repeated qf.Enrollment Enrollments = 11;
   */
  Enrollments: Enrollment[];

  /**
   * @generated from field: repeated qf.FeedbackReceipt FeedbackReceipts = 12;
   */
  FeedbackReceipts: FeedbackReceipt[];
};

/**
 * Describes the message qf.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_qf_types, 0);

/**
 * @generated from message qf.Users
 */
export type Users = Message<"qf.Users"> & {
  /**
   * @generated from field: repeated qf.User users = 1;
   */
  users: User[];
};

/**
 * Describes the message qf.Users.
 * Use `create(UsersSchema)` to create a new message.
 */
export const UsersSchema: GenMessage<Users> = /*@__PURE__*/
  messageDesc(file_qf_types, 1);

/**
 * @generated from message qf.Group
 */
export type Group = Message<"qf.Group"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint64 courseID = 3;
   */
  courseID: bigint;

  /**
   * @generated from field: qf.Group.GroupStatus status = 5;
   */
  status: Group_GroupStatus;

  /**
   * @generated from field: repeated qf.User users = 6;
   */
  users: User[];

  /**
   * @generated from field: repeated qf.Enrollment enrollments = 7;
   */
  enrollments: Enrollment[];
};

/**
 * Describes the message qf.Group.
 * Use `create(GroupSchema)` to create a new message.
 */
export const GroupSchema: GenMessage<Group> = /*@__PURE__*/
  messageDesc(file_qf_types, 2);

/**
 * @generated from enum qf.Group.GroupStatus
 */
export enum Group_GroupStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: APPROVED = 1;
   */
  APPROVED = 1,
}

/**
 * Describes the enum qf.Group.GroupStatus.
 */
export const Group_GroupStatusSchema: GenEnum<Group_GroupStatus> = /*@__PURE__*/
  enumDesc(file_qf_types, 2, 0);

/**
 * @generated from message qf.Groups
 */
export type Groups = Message<"qf.Groups"> & {
  /**
   * @generated from field: repeated qf.Group groups = 1;
   */
  groups: Group[];
};

/**
 * Describes the message qf.Groups.
 * Use `create(GroupsSchema)` to create a new message.
 */
export const GroupsSchema: GenMessage<Groups> = /*@__PURE__*/
  messageDesc(file_qf_types, 3);

/**
 * @generated from message qf.Course
 */
export type Course = Message<"qf.Course"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: uint64 courseCreatorID = 2;
   */
  courseCreatorID: bigint;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string code = 4;
   */
  code: string;

  /**
   * @generated from field: uint32 year = 5;
   */
  year: number;

  /**
   * @generated from field: string tag = 6;
   */
  tag: string;

  /**
   * @generated from field: uint64 ScmOrganizationID = 8;
   */
  ScmOrganizationID: bigint;

  /**
   * The organization's SCM name, e.g., dat520-2020.
   *
   * @generated from field: string ScmOrganizationName = 9;
   */
  ScmOrganizationName: string;

  /**
   * @generated from field: uint32 slipDays = 10;
   */
  slipDays: number;

  /**
   * Digest of the dockerfile used to build the course's docker image.
   *
   * @generated from field: string DockerfileDigest = 11;
   */
  DockerfileDigest: string;

  /**
   * @generated from field: qf.Enrollment.UserStatus enrolled = 12;
   */
  enrolled: Enrollment_UserStatus;

  /**
   * @generated from field: repeated qf.Enrollment enrollments = 13;
   */
  enrollments: Enrollment[];

  /**
   * @generated from field: repeated qf.Assignment assignments = 14;
   */
  assignments: Assignment[];

  /**
   * @generated from field: repeated qf.Group groups = 15;
   */
  groups: Group[];
};

/**
 * Describes the message qf.Course.
 * Use `create(CourseSchema)` to create a new message.
 */
export const CourseSchema: GenMessage<Course> = /*@__PURE__*/
  messageDesc(file_qf_types, 4);

/**
 * @generated from message qf.Courses
 */
export type Courses = Message<"qf.Courses"> & {
  /**
   * @generated from field: repeated qf.Course courses = 1;
   */
  courses: Course[];
};

/**
 * Describes the message qf.Courses.
 * Use `create(CoursesSchema)` to create a new message.
 */
export const CoursesSchema: GenMessage<Courses> = /*@__PURE__*/
  messageDesc(file_qf_types, 5);

/**
 * @generated from message qf.Repository
 */
export type Repository = Message<"qf.Repository"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: uint64 ScmOrganizationID = 2;
   */
  ScmOrganizationID: bigint;

  /**
   * ID of a github repository
   *
   * @generated from field: uint64 ScmRepositoryID = 3;
   */
  ScmRepositoryID: bigint;

  /**
   * @generated from field: uint64 userID = 4;
   */
  userID: bigint;

  /**
   * @generated from field: uint64 groupID = 5;
   */
  groupID: bigint;

  /**
   * @generated from field: string HTMLURL = 6;
   */
  HTMLURL: string;

  /**
   * @generated from field: qf.Repository.Type repoType = 7;
   */
  repoType: Repository_Type;

  /**
   * Issues associated with this repository
   *
   * @generated from field: repeated qf.Issue issues = 8;
   */
  issues: Issue[];
};

/**
 * Describes the message qf.Repository.
 * Use `create(RepositorySchema)` to create a new message.
 */
export const RepositorySchema: GenMessage<Repository> = /*@__PURE__*/
  messageDesc(file_qf_types, 6);

/**
 * @generated from enum qf.Repository.Type
 */
export enum Repository_Type {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: INFO = 1;
   */
  INFO = 1,

  /**
   * @generated from enum value: ASSIGNMENTS = 2;
   */
  ASSIGNMENTS = 2,

  /**
   * @generated from enum value: TESTS = 3;
   */
  TESTS = 3,

  /**
   * @generated from enum value: USER = 4;
   */
  USER = 4,

  /**
   * @generated from enum value: GROUP = 5;
   */
  GROUP = 5,
}

/**
 * Describes the enum qf.Repository.Type.
 */
export const Repository_TypeSchema: GenEnum<Repository_Type> = /*@__PURE__*/
  enumDesc(file_qf_types, 6, 0);

/**
 * @generated from message qf.Enrollment
 */
export type Enrollment = Message<"qf.Enrollment"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: uint64 courseID = 2;
   */
  courseID: bigint;

  /**
   * @generated from field: uint64 userID = 3;
   */
  userID: bigint;

  /**
   * @generated from field: uint64 groupID = 4;
   */
  groupID: bigint;

  /**
   * @generated from field: qf.User user = 5;
   */
  user?: User;

  /**
   * @generated from field: qf.Course course = 6;
   */
  course?: Course;

  /**
   * @generated from field: qf.Group group = 7;
   */
  group?: Group;

  /**
   * @generated from field: qf.Enrollment.UserStatus status = 8;
   */
  status: Enrollment_UserStatus;

  /**
   * @generated from field: qf.Enrollment.DisplayState state = 9;
   */
  state: Enrollment_DisplayState;

  /**
   * @generated from field: uint32 slipDaysRemaining = 10;
   */
  slipDaysRemaining: number;

  /**
   * @generated from field: google.protobuf.Timestamp lastActivityDate = 11;
   */
  lastActivityDate?: Timestamp;

  /**
   * @generated from field: uint64 totalApproved = 12;
   */
  totalApproved: bigint;

  /**
   * @generated from field: repeated qf.UsedSlipDays usedSlipDays = 13;
   */
  usedSlipDays: UsedSlipDays[];
};

/**
 * Describes the message qf.Enrollment.
 * Use `create(EnrollmentSchema)` to create a new message.
 */
export const EnrollmentSchema: GenMessage<Enrollment> = /*@__PURE__*/
  messageDesc(file_qf_types, 7);

/**
 * @generated from enum qf.Enrollment.UserStatus
 */
export enum Enrollment_UserStatus {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: STUDENT = 2;
   */
  STUDENT = 2,

  /**
   * @generated from enum value: TEACHER = 3;
   */
  TEACHER = 3,
}

/**
 * Describes the enum qf.Enrollment.UserStatus.
 */
export const Enrollment_UserStatusSchema: GenEnum<Enrollment_UserStatus> = /*@__PURE__*/
  enumDesc(file_qf_types, 7, 0);

/**
 * @generated from enum qf.Enrollment.DisplayState
 */
export enum Enrollment_DisplayState {
  /**
   * @generated from enum value: UNSET = 0;
   */
  UNSET = 0,

  /**
   * @generated from enum value: HIDDEN = 1;
   */
  HIDDEN = 1,

  /**
   * @generated from enum value: VISIBLE = 2;
   */
  VISIBLE = 2,

  /**
   * @generated from enum value: FAVORITE = 3;
   */
  FAVORITE = 3,
}

/**
 * Describes the enum qf.Enrollment.DisplayState.
 */
export const Enrollment_DisplayStateSchema: GenEnum<Enrollment_DisplayState> = /*@__PURE__*/
  enumDesc(file_qf_types, 7, 1);

/**
 * @generated from message qf.UsedSlipDays
 */
export type UsedSlipDays = Message<"qf.UsedSlipDays"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * @generated from field: uint64 enrollmentID = 2;
   */
  enrollmentID: bigint;

  /**
   * @generated from field: uint64 assignmentID = 3;
   */
  assignmentID: bigint;

  /**
   * @generated from field: uint32 usedDays = 4;
   */
  usedDays: number;
};

/**
 * Describes the message qf.UsedSlipDays.
 * Use `create(UsedSlipDaysSchema)` to create a new message.
 */
export const UsedSlipDaysSchema: GenMessage<UsedSlipDays> = /*@__PURE__*/
  messageDesc(file_qf_types, 8);

/**
 * @generated from message qf.Enrollments
 */
export type Enrollments = Message<"qf.Enrollments"> & {
  /**
   * @generated from field: repeated qf.Enrollment enrollments = 1;
   */
  enrollments: Enrollment[];
};

/**
 * Describes the message qf.Enrollments.
 * Use `create(EnrollmentsSchema)` to create a new message.
 */
export const EnrollmentsSchema: GenMessage<Enrollments> = /*@__PURE__*/
  messageDesc(file_qf_types, 9);

/**
 * @generated from message qf.Assignment
 */
export type Assignment = Message<"qf.Assignment"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 CourseID = 2;
   */
  CourseID: bigint;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 4;
   */
  deadline?: Timestamp;

  /**
   * @generated from field: bool autoApprove = 5;
   */
  autoApprove: boolean;

  /**
   * @generated from field: uint32 order = 6;
   */
  order: number;

  /**
   * @generated from field: bool isGroupLab = 7;
   */
  isGroupLab: boolean;

  /**
   * minimal score limit for auto approval
   *
   * @generated from field: uint32 scoreLimit = 8;
   */
  scoreLimit: number;

  /**
   * number of reviewers that will review submissions for this assignment
   *
   * @generated from field: uint32 reviewers = 9;
   */
  reviewers: number;

  /**
   * container timeout for this assignment
   *
   * @generated from field: uint32 containerTimeout = 10;
   */
  containerTimeout: number;

  /**
   * submissions produced for this assignment
   *
   * @generated from field: repeated qf.Submission submissions = 11;
   */
  submissions: Submission[];

  /**
   * tasks associated with this assignment
   *
   * @generated from field: repeated qf.Task tasks = 12;
   */
  tasks: Task[];

  /**
   * grading benchmarks for this assignment
   *
   * @generated from field: repeated qf.GradingBenchmark gradingBenchmarks = 13;
   */
  gradingBenchmarks: GradingBenchmark[];

  /**
   * list of expected tests for this assignment
   *
   * @generated from field: repeated qf.TestInfo ExpectedTests = 14;
   */
  ExpectedTests: TestInfo[];
};

/**
 * Describes the message qf.Assignment.
 * Use `create(AssignmentSchema)` to create a new message.
 */
export const AssignmentSchema: GenMessage<Assignment> = /*@__PURE__*/
  messageDesc(file_qf_types, 10);

/**
 * @generated from message qf.TestInfo
 */
export type TestInfo = Message<"qf.TestInfo"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 AssignmentID = 2;
   */
  AssignmentID: bigint;

  /**
   * name of the test
   *
   * @generated from field: string TestName = 3;
   */
  TestName: string;

  /**
   * max score possible to get on this test
   *
   * @generated from field: int32 MaxScore = 4;
   */
  MaxScore: number;

  /**
   * the weight of this test; used to compute final grade
   *
   * @generated from field: int32 Weight = 5;
   */
  Weight: number;

  /**
   * if populated, the frontend may display these details
   *
   * @generated from field: string Details = 6;
   */
  Details: string;
};

/**
 * Describes the message qf.TestInfo.
 * Use `create(TestInfoSchema)` to create a new message.
 */
export const TestInfoSchema: GenMessage<TestInfo> = /*@__PURE__*/
  messageDesc(file_qf_types, 11);

/**
 * @generated from message qf.Task
 */
export type Task = Message<"qf.Task"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 assignmentID = 2;
   */
  assignmentID: bigint;

  /**
   * @generated from field: uint32 assignmentOrder = 3;
   */
  assignmentOrder: number;

  /**
   * @generated from field: string title = 4;
   */
  title: string;

  /**
   * @generated from field: string body = 5;
   */
  body: string;

  /**
   * @generated from field: string name = 6;
   */
  name: string;

  /**
   * Issues that use this task as a benchmark
   *
   * @generated from field: repeated qf.Issue issues = 7;
   */
  issues: Issue[];
};

/**
 * Describes the message qf.Task.
 * Use `create(TaskSchema)` to create a new message.
 */
export const TaskSchema: GenMessage<Task> = /*@__PURE__*/
  messageDesc(file_qf_types, 12);

/**
 * @generated from message qf.Issue
 */
export type Issue = Message<"qf.Issue"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * Represents the internal ID of a repository
   *
   * @generated from field: uint64 repositoryID = 2;
   */
  repositoryID: bigint;

  /**
   * Task that this issue draws its content from
   *
   * @generated from field: uint64 taskID = 3;
   */
  taskID: bigint;

  /**
   * Issue number on scm. Needed for associating db issue with scm issue
   *
   * @generated from field: uint64 ScmIssueNumber = 4;
   */
  ScmIssueNumber: bigint;
};

/**
 * Describes the message qf.Issue.
 * Use `create(IssueSchema)` to create a new message.
 */
export const IssueSchema: GenMessage<Issue> = /*@__PURE__*/
  messageDesc(file_qf_types, 13);

/**
 * @generated from message qf.PullRequest
 */
export type PullRequest = Message<"qf.PullRequest"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * Represents the scm repository ID
   *
   * @generated from field: uint64 ScmRepositoryID = 2;
   */
  ScmRepositoryID: bigint;

  /**
   * Foreign key
   *
   * @generated from field: uint64 taskID = 3;
   */
  taskID: bigint;

  /**
   * Foreign key
   *
   * @generated from field: uint64 issueID = 4;
   */
  issueID: bigint;

  /**
   * The user who owns this PR
   *
   * @generated from field: uint64 userID = 5;
   */
  userID: bigint;

  /**
   * Scm ID of the comment used for automatic feedback
   *
   * @generated from field: uint64 ScmCommentID = 6;
   */
  ScmCommentID: bigint;

  /**
   * The source branch for this pull request
   *
   * @generated from field: string sourceBranch = 7;
   */
  sourceBranch: string;

  /**
   * Pull request number
   *
   * @generated from field: uint64 number = 8;
   */
  number: bigint;

  /**
   * @generated from field: qf.PullRequest.Stage stage = 9;
   */
  stage: PullRequest_Stage;
};

/**
 * Describes the message qf.PullRequest.
 * Use `create(PullRequestSchema)` to create a new message.
 */
export const PullRequestSchema: GenMessage<PullRequest> = /*@__PURE__*/
  messageDesc(file_qf_types, 14);

/**
 * @generated from enum qf.PullRequest.Stage
 */
export enum PullRequest_Stage {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: REVIEW = 2;
   */
  REVIEW = 2,

  /**
   * @generated from enum value: APPROVED = 3;
   */
  APPROVED = 3,
}

/**
 * Describes the enum qf.PullRequest.Stage.
 */
export const PullRequest_StageSchema: GenEnum<PullRequest_Stage> = /*@__PURE__*/
  enumDesc(file_qf_types, 14, 0);

/**
 * @generated from message qf.Assignments
 */
export type Assignments = Message<"qf.Assignments"> & {
  /**
   * @generated from field: repeated qf.Assignment assignments = 1;
   */
  assignments: Assignment[];
};

/**
 * Describes the message qf.Assignments.
 * Use `create(AssignmentsSchema)` to create a new message.
 */
export const AssignmentsSchema: GenMessage<Assignments> = /*@__PURE__*/
  messageDesc(file_qf_types, 15);

/**
 * @generated from message qf.Submission
 */
export type Submission = Message<"qf.Submission"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 AssignmentID = 2;
   */
  AssignmentID: bigint;

  /**
   * @generated from field: uint64 userID = 3;
   */
  userID: bigint;

  /**
   * @generated from field: uint64 groupID = 4;
   */
  groupID: bigint;

  /**
   * @generated from field: uint32 score = 5;
   */
  score: number;

  /**
   * @generated from field: string commitHash = 6;
   */
  commitHash: string;

  /**
   * true => feedback is visible to the student or group members
   *
   * @generated from field: bool released = 7;
   */
  released: boolean;

  /**
   * @generated from field: repeated qf.Grade Grades = 8;
   */
  Grades: Grade[];

  /**
   * @generated from field: google.protobuf.Timestamp approvedDate = 9;
   */
  approvedDate?: Timestamp;

  /**
   * reviews produced for this submission
   *
   * @generated from field: repeated qf.Review reviews = 10;
   */
  reviews: Review[];

  /**
   * build info for tests
   *
   * @generated from field: score.BuildInfo BuildInfo = 11;
   */
  BuildInfo?: BuildInfo;

  /**
   * list of scores for different tests
   *
   * @generated from field: repeated score.Score Scores = 12;
   */
  Scores: Score[];
};

/**
 * Describes the message qf.Submission.
 * Use `create(SubmissionSchema)` to create a new message.
 */
export const SubmissionSchema: GenMessage<Submission> = /*@__PURE__*/
  messageDesc(file_qf_types, 16);

/**
 * @generated from enum qf.Submission.Status
 */
export enum Submission_Status {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: APPROVED = 1;
   */
  APPROVED = 1,

  /**
   * @generated from enum value: REJECTED = 2;
   */
  REJECTED = 2,

  /**
   * @generated from enum value: REVISION = 3;
   */
  REVISION = 3,
}

/**
 * Describes the enum qf.Submission.Status.
 */
export const Submission_StatusSchema: GenEnum<Submission_Status> = /*@__PURE__*/
  enumDesc(file_qf_types, 16, 0);

/**
 * @generated from message qf.Submissions
 */
export type Submissions = Message<"qf.Submissions"> & {
  /**
   * @generated from field: repeated qf.Submission submissions = 1;
   */
  submissions: Submission[];
};

/**
 * Describes the message qf.Submissions.
 * Use `create(SubmissionsSchema)` to create a new message.
 */
export const SubmissionsSchema: GenMessage<Submissions> = /*@__PURE__*/
  messageDesc(file_qf_types, 17);

/**
 * @generated from message qf.Grade
 */
export type Grade = Message<"qf.Grade"> & {
  /**
   * @generated from field: uint64 SubmissionID = 1;
   */
  SubmissionID: bigint;

  /**
   * @generated from field: uint64 UserID = 2;
   */
  UserID: bigint;

  /**
   * @generated from field: qf.Submission.Status Status = 3;
   */
  Status: Submission_Status;
};

/**
 * Describes the message qf.Grade.
 * Use `create(GradeSchema)` to create a new message.
 */
export const GradeSchema: GenMessage<Grade> = /*@__PURE__*/
  messageDesc(file_qf_types, 18);

/**
 * @generated from message qf.GradingBenchmark
 */
export type GradingBenchmark = Message<"qf.GradingBenchmark"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 CourseID = 2;
   */
  CourseID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 AssignmentID = 3;
   */
  AssignmentID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 ReviewID = 4;
   */
  ReviewID: bigint;

  /**
   * @generated from field: string heading = 5;
   */
  heading: string;

  /**
   * @generated from field: string comment = 6;
   */
  comment: string;

  /**
   * @generated from field: repeated qf.GradingCriterion criteria = 7;
   */
  criteria: GradingCriterion[];
};

/**
 * Describes the message qf.GradingBenchmark.
 * Use `create(GradingBenchmarkSchema)` to create a new message.
 */
export const GradingBenchmarkSchema: GenMessage<GradingBenchmark> = /*@__PURE__*/
  messageDesc(file_qf_types, 19);

/**
 * @generated from message qf.Benchmarks
 */
export type Benchmarks = Message<"qf.Benchmarks"> & {
  /**
   * @generated from field: repeated qf.GradingBenchmark benchmarks = 1;
   */
  benchmarks: GradingBenchmark[];
};

/**
 * Describes the message qf.Benchmarks.
 * Use `create(BenchmarksSchema)` to create a new message.
 */
export const BenchmarksSchema: GenMessage<Benchmarks> = /*@__PURE__*/
  messageDesc(file_qf_types, 20);

/**
 * @generated from message qf.GradingCriterion
 */
export type GradingCriterion = Message<"qf.GradingCriterion"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 BenchmarkID = 2;
   */
  BenchmarkID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 CourseID = 3;
   */
  CourseID: bigint;

  /**
   * @generated from field: uint64 points = 4;
   */
  points: bigint;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: qf.GradingCriterion.Grade grade = 6;
   */
  grade: GradingCriterion_Grade;

  /**
   * @generated from field: string comment = 7;
   */
  comment: string;
};

/**
 * Describes the message qf.GradingCriterion.
 * Use `create(GradingCriterionSchema)` to create a new message.
 */
export const GradingCriterionSchema: GenMessage<GradingCriterion> = /*@__PURE__*/
  messageDesc(file_qf_types, 21);

/**
 * @generated from enum qf.GradingCriterion.Grade
 */
export enum GradingCriterion_Grade {
  /**
   * @generated from enum value: NONE = 0;
   */
  NONE = 0,

  /**
   * @generated from enum value: FAILED = 1;
   */
  FAILED = 1,

  /**
   * @generated from enum value: PASSED = 2;
   */
  PASSED = 2,
}

/**
 * Describes the enum qf.GradingCriterion.Grade.
 */
export const GradingCriterion_GradeSchema: GenEnum<GradingCriterion_Grade> = /*@__PURE__*/
  enumDesc(file_qf_types, 21, 0);

/**
 * @generated from message qf.Review
 */
export type Review = Message<"qf.Review"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key
   *
   * @generated from field: uint64 SubmissionID = 2;
   */
  SubmissionID: bigint;

  /**
   * UserID of the reviewer
   *
   * @generated from field: uint64 ReviewerID = 3;
   */
  ReviewerID: bigint;

  /**
   * @generated from field: string feedback = 4;
   */
  feedback: string;

  /**
   * @generated from field: bool ready = 5;
   */
  ready: boolean;

  /**
   * @generated from field: uint32 score = 6;
   */
  score: number;

  /**
   * @generated from field: repeated qf.GradingBenchmark gradingBenchmarks = 7;
   */
  gradingBenchmarks: GradingBenchmark[];

  /**
   * @generated from field: google.protobuf.Timestamp edited = 8;
   */
  edited?: Timestamp;
};

/**
 * Describes the message qf.Review.
 * Use `create(ReviewSchema)` to create a new message.
 */
export const ReviewSchema: GenMessage<Review> = /*@__PURE__*/
  messageDesc(file_qf_types, 22);

/**
 * @generated from message qf.AssignmentFeedback
 */
export type AssignmentFeedback = Message<"qf.AssignmentFeedback"> & {
  /**
   * @generated from field: uint64 ID = 1;
   */
  ID: bigint;

  /**
   * foreign key - required
   *
   * @generated from field: uint64 CourseID = 2;
   */
  CourseID: bigint;

  /**
   * foreign key - required
   *
   * @generated from field: uint64 AssignmentID = 3;
   */
  AssignmentID: bigint;

  /**
   * What did you like about this assignment?
   *
   * @generated from field: string LikedContent = 4;
   */
  LikedContent: string;

  /**
   * What would make it better?
   *
   * @generated from field: string ImprovementSuggestions = 5;
   */
  ImprovementSuggestions: string;

  /**
   * Time used to complete the assignment
   *
   * @generated from field: uint32 TimeSpent = 6;
   */
  TimeSpent: number;

  /**
   * @generated from field: google.protobuf.Timestamp CreatedAt = 7;
   */
  CreatedAt?: Timestamp;
};

/**
 * Describes the message qf.AssignmentFeedback.
 * Use `create(AssignmentFeedbackSchema)` to create a new message.
 */
export const AssignmentFeedbackSchema: GenMessage<AssignmentFeedback> = /*@__PURE__*/
  messageDesc(file_qf_types, 23);

/**
 * @generated from message qf.FeedbackReceipt
 */
export type FeedbackReceipt = Message<"qf.FeedbackReceipt"> & {
  /**
   * @generated from field: uint64 AssignmentID = 1;
   */
  AssignmentID: bigint;

  /**
   * @generated from field: uint64 UserID = 2;
   */
  UserID: bigint;
};

/**
 * Describes the message qf.FeedbackReceipt.
 * Use `create(FeedbackReceiptSchema)` to create a new message.
 */
export const FeedbackReceiptSchema: GenMessage<FeedbackReceipt> = /*@__PURE__*/
  messageDesc(file_qf_types, 24);

/**
 * @generated from message qf.AssignmentFeedbacks
 */
export type AssignmentFeedbacks = Message<"qf.AssignmentFeedbacks"> & {
  /**
   * @generated from field: repeated qf.AssignmentFeedback feedbacks = 1;
   */
  feedbacks: AssignmentFeedback[];
};

/**
 * Describes the message qf.AssignmentFeedbacks.
 * Use `create(AssignmentFeedbacksSchema)` to create a new message.
 */
export const AssignmentFeedbacksSchema: GenMessage<AssignmentFeedbacks> = /*@__PURE__*/
  messageDesc(file_qf_types, 25);

