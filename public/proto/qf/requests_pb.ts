// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file qf/requests.proto (package qf, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Enrollment_UserStatus, Grade, Review, Submissions } from "./types_pb";
import { file_qf_types } from "./types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file qf/requests.proto.
 */
export const file_qf_requests: GenFile = /*@__PURE__*/
  fileDesc("ChFxZi9yZXF1ZXN0cy5wcm90bxICcWYilQEKEUNvdXJzZVN1Ym1pc3Npb25zEjsKC3N1Ym1pc3Npb25zGAEgAygLMiYucWYuQ291cnNlU3VibWlzc2lvbnMuU3VibWlzc2lvbnNFbnRyeRpDChBTdWJtaXNzaW9uc0VudHJ5EgsKA2tleRgBIAEoBBIeCgV2YWx1ZRgCIAEoCzIPLnFmLlN1Ym1pc3Npb25zOgI4ASI9Cg1SZXZpZXdSZXF1ZXN0EhAKCGNvdXJzZUlEGAEgASgEEhoKBnJldmlldxgCIAEoCzIKLnFmLlJldmlldyIhCg1Db3Vyc2VSZXF1ZXN0EhAKCGNvdXJzZUlEGAEgASgEIkEKDEdyb3VwUmVxdWVzdBIQCghjb3Vyc2VJRBgBIAEoBBIOCgZ1c2VySUQYAiABKAQSDwoHZ3JvdXBJRBgDIAEoBCJGCgxPcmdhbml6YXRpb24SGQoRU2NtT3JnYW5pemF0aW9uSUQYASABKAQSGwoTU2NtT3JnYW5pemF0aW9uTmFtZRgCIAEoCSJzChFFbnJvbGxtZW50UmVxdWVzdBISCghjb3Vyc2VJRBgBIAEoBEgAEhAKBnVzZXJJRBgCIAEoBEgAEisKCHN0YXR1c2VzGAMgAygOMhkucWYuRW5yb2xsbWVudC5Vc2VyU3RhdHVzQgsKCUZldGNoTW9kZSLrAQoRU3VibWlzc2lvblJlcXVlc3QSEAoIQ291cnNlSUQYASABKAQSFAoMQXNzaWdubWVudElEGAIgASgEEhAKBlVzZXJJRBgDIAEoBEgAEhEKB0dyb3VwSUQYBCABKARIABIWCgxTdWJtaXNzaW9uSUQYBSABKARIABI0CgRUeXBlGAYgASgOMiQucWYuU3VibWlzc2lvblJlcXVlc3QuU3VibWlzc2lvblR5cGVIACIuCg5TdWJtaXNzaW9uVHlwZRIHCgNBTEwQABIICgRVU0VSEAESCQoFR1JPVVAQAkILCglGZXRjaE1vZGUifQoXVXBkYXRlU3VibWlzc2lvblJlcXVlc3QSFAoMc3VibWlzc2lvbklEGAEgASgEEhAKCGNvdXJzZUlEGAIgASgEEg0KBXNjb3JlGAMgASgNEhAKCHJlbGVhc2VkGAQgASgIEhkKBmdyYWRlcxgFIAMoCzIJLnFmLkdyYWRlIngKGFVwZGF0ZVN1Ym1pc3Npb25zUmVxdWVzdBIQCghjb3Vyc2VJRBgBIAEoBBIUCgxhc3NpZ25tZW50SUQYAiABKAQSEgoKc2NvcmVMaW1pdBgDIAEoDRIPCgdyZWxlYXNlGAQgASgIEg8KB2FwcHJvdmUYBSABKAgiRgoRUmVwb3NpdG9yeVJlcXVlc3QSDgoGdXNlcklEGAEgASgEEg8KB2dyb3VwSUQYAiABKAQSEAoIY291cnNlSUQYAyABKAQiZQoMUmVwb3NpdG9yaWVzEigKBFVSTHMYASADKAsyGi5xZi5SZXBvc2l0b3JpZXMuVVJMc0VudHJ5GisKCVVSTHNFbnRyeRILCgNrZXkYASABKA0SDQoFdmFsdWUYAiABKAk6AjgBIk4KDlJlYnVpbGRSZXF1ZXN0EhAKCGNvdXJzZUlEGAEgASgEEhQKDGFzc2lnbm1lbnRJRBgCIAEoBBIUCgxzdWJtaXNzaW9uSUQYAyABKAQiBgoEVm9pZEImWiFnaXRodWIuY29tL3F1aWNrZmVlZC9xdWlja2ZlZWQvcWa6AgBiBnByb3RvMw", [file_qf_types]);

/**
 * @generated from message qf.CourseSubmissions
 */
export type CourseSubmissions = Message<"qf.CourseSubmissions"> & {
  /**
   * @generated from field: map<uint64, qf.Submissions> submissions = 1;
   */
  submissions: { [key: string]: Submissions };
};

/**
 * Describes the message qf.CourseSubmissions.
 * Use `create(CourseSubmissionsSchema)` to create a new message.
 */
export const CourseSubmissionsSchema: GenMessage<CourseSubmissions> = /*@__PURE__*/
  messageDesc(file_qf_requests, 0);

/**
 * @generated from message qf.ReviewRequest
 */
export type ReviewRequest = Message<"qf.ReviewRequest"> & {
  /**
   * @generated from field: uint64 courseID = 1;
   */
  courseID: bigint;

  /**
   * @generated from field: qf.Review review = 2;
   */
  review?: Review;
};

/**
 * Describes the message qf.ReviewRequest.
 * Use `create(ReviewRequestSchema)` to create a new message.
 */
export const ReviewRequestSchema: GenMessage<ReviewRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 1);

/**
 * @generated from message qf.CourseRequest
 */
export type CourseRequest = Message<"qf.CourseRequest"> & {
  /**
   * @generated from field: uint64 courseID = 1;
   */
  courseID: bigint;
};

/**
 * Describes the message qf.CourseRequest.
 * Use `create(CourseRequestSchema)` to create a new message.
 */
export const CourseRequestSchema: GenMessage<CourseRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 2);

/**
 * @generated from message qf.GroupRequest
 */
export type GroupRequest = Message<"qf.GroupRequest"> & {
  /**
   * @generated from field: uint64 courseID = 1;
   */
  courseID: bigint;

  /**
   * @generated from field: uint64 userID = 2;
   */
  userID: bigint;

  /**
   * @generated from field: uint64 groupID = 3;
   */
  groupID: bigint;
};

/**
 * Describes the message qf.GroupRequest.
 * Use `create(GroupRequestSchema)` to create a new message.
 */
export const GroupRequestSchema: GenMessage<GroupRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 3);

/**
 * @generated from message qf.Organization
 */
export type Organization = Message<"qf.Organization"> & {
  /**
   * @generated from field: uint64 ScmOrganizationID = 1;
   */
  ScmOrganizationID: bigint;

  /**
   * @generated from field: string ScmOrganizationName = 2;
   */
  ScmOrganizationName: string;
};

/**
 * Describes the message qf.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export const OrganizationSchema: GenMessage<Organization> = /*@__PURE__*/
  messageDesc(file_qf_requests, 4);

/**
 * @generated from message qf.EnrollmentRequest
 */
export type EnrollmentRequest = Message<"qf.EnrollmentRequest"> & {
  /**
   * @generated from oneof qf.EnrollmentRequest.FetchMode
   */
  FetchMode: {
    /**
     * @generated from field: uint64 courseID = 1;
     */
    value: bigint;
    case: "courseID";
  } | {
    /**
     * @generated from field: uint64 userID = 2;
     */
    value: bigint;
    case: "userID";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated qf.Enrollment.UserStatus statuses = 3;
   */
  statuses: Enrollment_UserStatus[];
};

/**
 * Describes the message qf.EnrollmentRequest.
 * Use `create(EnrollmentRequestSchema)` to create a new message.
 */
export const EnrollmentRequestSchema: GenMessage<EnrollmentRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 5);

/**
 * @generated from message qf.SubmissionRequest
 */
export type SubmissionRequest = Message<"qf.SubmissionRequest"> & {
  /**
   * @generated from field: uint64 CourseID = 1;
   */
  CourseID: bigint;

  /**
   * only used for user and group submissions
   *
   * @generated from field: uint64 AssignmentID = 2;
   */
  AssignmentID: bigint;

  /**
   * @generated from oneof qf.SubmissionRequest.FetchMode
   */
  FetchMode: {
    /**
     * fetch single user's submissions with build info
     *
     * @generated from field: uint64 UserID = 3;
     */
    value: bigint;
    case: "UserID";
  } | {
    /**
     * fetch single group's submissions with build info
     *
     * @generated from field: uint64 GroupID = 4;
     */
    value: bigint;
    case: "GroupID";
  } | {
    /**
     * fetch single specific submission with build info
     *
     * @generated from field: uint64 SubmissionID = 5;
     */
    value: bigint;
    case: "SubmissionID";
  } | {
    /**
     * fetch all submissions of given type without build info
     *
     * @generated from field: qf.SubmissionRequest.SubmissionType Type = 6;
     */
    value: SubmissionRequest_SubmissionType;
    case: "Type";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message qf.SubmissionRequest.
 * Use `create(SubmissionRequestSchema)` to create a new message.
 */
export const SubmissionRequestSchema: GenMessage<SubmissionRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 6);

/**
 * @generated from enum qf.SubmissionRequest.SubmissionType
 */
export enum SubmissionRequest_SubmissionType {
  /**
   * fetch all submissions
   *
   * @generated from enum value: ALL = 0;
   */
  ALL = 0,

  /**
   * fetch all user submissions
   *
   * @generated from enum value: USER = 1;
   */
  USER = 1,

  /**
   * fetch all group submissions
   *
   * @generated from enum value: GROUP = 2;
   */
  GROUP = 2,
}

/**
 * Describes the enum qf.SubmissionRequest.SubmissionType.
 */
export const SubmissionRequest_SubmissionTypeSchema: GenEnum<SubmissionRequest_SubmissionType> = /*@__PURE__*/
  enumDesc(file_qf_requests, 6, 0);

/**
 * @generated from message qf.UpdateSubmissionRequest
 */
export type UpdateSubmissionRequest = Message<"qf.UpdateSubmissionRequest"> & {
  /**
   * @generated from field: uint64 submissionID = 1;
   */
  submissionID: bigint;

  /**
   * @generated from field: uint64 courseID = 2;
   */
  courseID: bigint;

  /**
   * @generated from field: uint32 score = 3;
   */
  score: number;

  /**
   * @generated from field: bool released = 4;
   */
  released: boolean;

  /**
   * @generated from field: repeated qf.Grade grades = 5;
   */
  grades: Grade[];
};

/**
 * Describes the message qf.UpdateSubmissionRequest.
 * Use `create(UpdateSubmissionRequestSchema)` to create a new message.
 */
export const UpdateSubmissionRequestSchema: GenMessage<UpdateSubmissionRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 7);

/**
 * @generated from message qf.UpdateSubmissionsRequest
 */
export type UpdateSubmissionsRequest = Message<"qf.UpdateSubmissionsRequest"> & {
  /**
   * @generated from field: uint64 courseID = 1;
   */
  courseID: bigint;

  /**
   * @generated from field: uint64 assignmentID = 2;
   */
  assignmentID: bigint;

  /**
   * @generated from field: uint32 scoreLimit = 3;
   */
  scoreLimit: number;

  /**
   * @generated from field: bool release = 4;
   */
  release: boolean;

  /**
   * @generated from field: bool approve = 5;
   */
  approve: boolean;
};

/**
 * Describes the message qf.UpdateSubmissionsRequest.
 * Use `create(UpdateSubmissionsRequestSchema)` to create a new message.
 */
export const UpdateSubmissionsRequestSchema: GenMessage<UpdateSubmissionsRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 8);

/**
 * used to check whether student/group submission repo is empty
 *
 * @generated from message qf.RepositoryRequest
 */
export type RepositoryRequest = Message<"qf.RepositoryRequest"> & {
  /**
   * @generated from field: uint64 userID = 1;
   */
  userID: bigint;

  /**
   * @generated from field: uint64 groupID = 2;
   */
  groupID: bigint;

  /**
   * @generated from field: uint64 courseID = 3;
   */
  courseID: bigint;
};

/**
 * Describes the message qf.RepositoryRequest.
 * Use `create(RepositoryRequestSchema)` to create a new message.
 */
export const RepositoryRequestSchema: GenMessage<RepositoryRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 9);

/**
 * @generated from message qf.Repositories
 */
export type Repositories = Message<"qf.Repositories"> & {
  /**
   * Map key is the Repository.Type
   *
   * @generated from field: map<uint32, string> URLs = 1;
   */
  URLs: { [key: number]: string };
};

/**
 * Describes the message qf.Repositories.
 * Use `create(RepositoriesSchema)` to create a new message.
 */
export const RepositoriesSchema: GenMessage<Repositories> = /*@__PURE__*/
  messageDesc(file_qf_requests, 10);

/**
 * @generated from message qf.RebuildRequest
 */
export type RebuildRequest = Message<"qf.RebuildRequest"> & {
  /**
   * @generated from field: uint64 courseID = 1;
   */
  courseID: bigint;

  /**
   * @generated from field: uint64 assignmentID = 2;
   */
  assignmentID: bigint;

  /**
   * @generated from field: uint64 submissionID = 3;
   */
  submissionID: bigint;
};

/**
 * Describes the message qf.RebuildRequest.
 * Use `create(RebuildRequestSchema)` to create a new message.
 */
export const RebuildRequestSchema: GenMessage<RebuildRequest> = /*@__PURE__*/
  messageDesc(file_qf_requests, 11);

/**
 * @generated from message qf.Void
 */
export type Void = Message<"qf.Void"> & {
};

/**
 * Describes the message qf.Void.
 * Use `create(VoidSchema)` to create a new message.
 */
export const VoidSchema: GenMessage<Void> = /*@__PURE__*/
  messageDesc(file_qf_requests, 12);

