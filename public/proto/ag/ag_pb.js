// source: ag/ag.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var kit_score_score_pb = require('../kit/score/score_pb.js');
goog.object.extend(proto, kit_score_score_pb);
goog.exportSymbol('proto.ag.Assignment', null, global);
goog.exportSymbol('proto.ag.AssignmentRequest', null, global);
goog.exportSymbol('proto.ag.Assignments', null, global);
goog.exportSymbol('proto.ag.AuthorizationResponse', null, global);
goog.exportSymbol('proto.ag.Benchmarks', null, global);
goog.exportSymbol('proto.ag.Course', null, global);
goog.exportSymbol('proto.ag.CourseRequest', null, global);
goog.exportSymbol('proto.ag.CourseSubmissions', null, global);
goog.exportSymbol('proto.ag.CourseUserRequest', null, global);
goog.exportSymbol('proto.ag.Courses', null, global);
goog.exportSymbol('proto.ag.Enrollment', null, global);
goog.exportSymbol('proto.ag.Enrollment.DisplayState', null, global);
goog.exportSymbol('proto.ag.Enrollment.UserStatus', null, global);
goog.exportSymbol('proto.ag.EnrollmentLink', null, global);
goog.exportSymbol('proto.ag.EnrollmentRequest', null, global);
goog.exportSymbol('proto.ag.EnrollmentStatusRequest', null, global);
goog.exportSymbol('proto.ag.Enrollments', null, global);
goog.exportSymbol('proto.ag.GetGroupRequest', null, global);
goog.exportSymbol('proto.ag.GradingBenchmark', null, global);
goog.exportSymbol('proto.ag.GradingCriterion', null, global);
goog.exportSymbol('proto.ag.GradingCriterion.Grade', null, global);
goog.exportSymbol('proto.ag.Group', null, global);
goog.exportSymbol('proto.ag.Group.GroupStatus', null, global);
goog.exportSymbol('proto.ag.GroupRequest', null, global);
goog.exportSymbol('proto.ag.Groups', null, global);
goog.exportSymbol('proto.ag.OrgRequest', null, global);
goog.exportSymbol('proto.ag.Organization', null, global);
goog.exportSymbol('proto.ag.Organizations', null, global);
goog.exportSymbol('proto.ag.Provider', null, global);
goog.exportSymbol('proto.ag.Providers', null, global);
goog.exportSymbol('proto.ag.RebuildRequest', null, global);
goog.exportSymbol('proto.ag.RemoteIdentity', null, global);
goog.exportSymbol('proto.ag.Repositories', null, global);
goog.exportSymbol('proto.ag.Repository', null, global);
goog.exportSymbol('proto.ag.Repository.Type', null, global);
goog.exportSymbol('proto.ag.RepositoryRequest', null, global);
goog.exportSymbol('proto.ag.Review', null, global);
goog.exportSymbol('proto.ag.ReviewRequest', null, global);
goog.exportSymbol('proto.ag.Reviewers', null, global);
goog.exportSymbol('proto.ag.Status', null, global);
goog.exportSymbol('proto.ag.Submission', null, global);
goog.exportSymbol('proto.ag.Submission.Status', null, global);
goog.exportSymbol('proto.ag.SubmissionLink', null, global);
goog.exportSymbol('proto.ag.SubmissionRequest', null, global);
goog.exportSymbol('proto.ag.SubmissionReviewersRequest', null, global);
goog.exportSymbol('proto.ag.Submissions', null, global);
goog.exportSymbol('proto.ag.SubmissionsForCourseRequest', null, global);
goog.exportSymbol('proto.ag.SubmissionsForCourseRequest.Type', null, global);
goog.exportSymbol('proto.ag.URLRequest', null, global);
goog.exportSymbol('proto.ag.UpdateSubmissionRequest', null, global);
goog.exportSymbol('proto.ag.UpdateSubmissionsRequest', null, global);
goog.exportSymbol('proto.ag.UsedSlipDays', null, global);
goog.exportSymbol('proto.ag.User', null, global);
goog.exportSymbol('proto.ag.UserRequest', null, global);
goog.exportSymbol('proto.ag.Users', null, global);
goog.exportSymbol('proto.ag.Void', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.User.repeatedFields_, null);
};
goog.inherits(proto.ag.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.User.displayName = 'proto.ag.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Users = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Users.repeatedFields_, null);
};
goog.inherits(proto.ag.Users, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Users.displayName = 'proto.ag.Users';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.RemoteIdentity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.RemoteIdentity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.RemoteIdentity.displayName = 'proto.ag.RemoteIdentity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Group.repeatedFields_, null);
};
goog.inherits(proto.ag.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Group.displayName = 'proto.ag.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Groups = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Groups.repeatedFields_, null);
};
goog.inherits(proto.ag.Groups, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Groups.displayName = 'proto.ag.Groups';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Course = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Course.repeatedFields_, null);
};
goog.inherits(proto.ag.Course, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Course.displayName = 'proto.ag.Course';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Courses = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Courses.repeatedFields_, null);
};
goog.inherits(proto.ag.Courses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Courses.displayName = 'proto.ag.Courses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Repository = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Repository, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Repository.displayName = 'proto.ag.Repository';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Enrollment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Enrollment.repeatedFields_, null);
};
goog.inherits(proto.ag.Enrollment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Enrollment.displayName = 'proto.ag.Enrollment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.UsedSlipDays = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.UsedSlipDays, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.UsedSlipDays.displayName = 'proto.ag.UsedSlipDays';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Enrollments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Enrollments.repeatedFields_, null);
};
goog.inherits(proto.ag.Enrollments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Enrollments.displayName = 'proto.ag.Enrollments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.SubmissionLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.SubmissionLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.SubmissionLink.displayName = 'proto.ag.SubmissionLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.EnrollmentLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.EnrollmentLink.repeatedFields_, null);
};
goog.inherits(proto.ag.EnrollmentLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.EnrollmentLink.displayName = 'proto.ag.EnrollmentLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.CourseSubmissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.CourseSubmissions.repeatedFields_, null);
};
goog.inherits(proto.ag.CourseSubmissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.CourseSubmissions.displayName = 'proto.ag.CourseSubmissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Assignment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Assignment.repeatedFields_, null);
};
goog.inherits(proto.ag.Assignment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Assignment.displayName = 'proto.ag.Assignment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Assignments = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Assignments.repeatedFields_, null);
};
goog.inherits(proto.ag.Assignments, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Assignments.displayName = 'proto.ag.Assignments';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Submission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Submission.repeatedFields_, null);
};
goog.inherits(proto.ag.Submission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Submission.displayName = 'proto.ag.Submission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Submissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Submissions.repeatedFields_, null);
};
goog.inherits(proto.ag.Submissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Submissions.displayName = 'proto.ag.Submissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.GradingBenchmark = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.GradingBenchmark.repeatedFields_, null);
};
goog.inherits(proto.ag.GradingBenchmark, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.GradingBenchmark.displayName = 'proto.ag.GradingBenchmark';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Benchmarks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Benchmarks.repeatedFields_, null);
};
goog.inherits(proto.ag.Benchmarks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Benchmarks.displayName = 'proto.ag.Benchmarks';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.GradingCriterion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.GradingCriterion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.GradingCriterion.displayName = 'proto.ag.GradingCriterion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Review = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Review.repeatedFields_, null);
};
goog.inherits(proto.ag.Review, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Review.displayName = 'proto.ag.Review';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Reviewers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Reviewers.repeatedFields_, null);
};
goog.inherits(proto.ag.Reviewers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Reviewers.displayName = 'proto.ag.Reviewers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.ReviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.ReviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.ReviewRequest.displayName = 'proto.ag.ReviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.CourseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.CourseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.CourseRequest.displayName = 'proto.ag.CourseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.UserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.UserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.UserRequest.displayName = 'proto.ag.UserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.GetGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.GetGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.GetGroupRequest.displayName = 'proto.ag.GetGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.GroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.GroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.GroupRequest.displayName = 'proto.ag.GroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Provider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Provider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Provider.displayName = 'proto.ag.Provider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.OrgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.OrgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.OrgRequest.displayName = 'proto.ag.OrgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Organization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Organization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Organization.displayName = 'proto.ag.Organization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Organizations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Organizations.repeatedFields_, null);
};
goog.inherits(proto.ag.Organizations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Organizations.displayName = 'proto.ag.Organizations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.EnrollmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.EnrollmentRequest.repeatedFields_, null);
};
goog.inherits(proto.ag.EnrollmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.EnrollmentRequest.displayName = 'proto.ag.EnrollmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.EnrollmentStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.EnrollmentStatusRequest.repeatedFields_, null);
};
goog.inherits(proto.ag.EnrollmentStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.EnrollmentStatusRequest.displayName = 'proto.ag.EnrollmentStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.SubmissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.SubmissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.SubmissionRequest.displayName = 'proto.ag.SubmissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.UpdateSubmissionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.UpdateSubmissionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.UpdateSubmissionRequest.displayName = 'proto.ag.UpdateSubmissionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.UpdateSubmissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.UpdateSubmissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.UpdateSubmissionsRequest.displayName = 'proto.ag.UpdateSubmissionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.SubmissionReviewersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.SubmissionReviewersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.SubmissionReviewersRequest.displayName = 'proto.ag.SubmissionReviewersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Providers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.Providers.repeatedFields_, null);
};
goog.inherits(proto.ag.Providers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Providers.displayName = 'proto.ag.Providers';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.URLRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ag.URLRequest.repeatedFields_, null);
};
goog.inherits(proto.ag.URLRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.URLRequest.displayName = 'proto.ag.URLRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.RepositoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.RepositoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.RepositoryRequest.displayName = 'proto.ag.RepositoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Repositories = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Repositories, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Repositories.displayName = 'proto.ag.Repositories';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.AuthorizationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.AuthorizationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.AuthorizationResponse.displayName = 'proto.ag.AuthorizationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Status = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Status.displayName = 'proto.ag.Status';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.SubmissionsForCourseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.SubmissionsForCourseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.SubmissionsForCourseRequest.displayName = 'proto.ag.SubmissionsForCourseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.RebuildRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.RebuildRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.RebuildRequest.displayName = 'proto.ag.RebuildRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.CourseUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.CourseUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.CourseUserRequest.displayName = 'proto.ag.CourseUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.AssignmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.AssignmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.AssignmentRequest.displayName = 'proto.ag.AssignmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ag.Void = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ag.Void, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ag.Void.displayName = 'proto.ag.Void';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.User.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.User.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    isadmin: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    studentid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    avatarurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    login: jspb.Message.getFieldWithDefault(msg, 7, ""),
    remoteidentitiesList: jspb.Message.toObjectList(msg.getRemoteidentitiesList(),
    proto.ag.RemoteIdentity.toObject, includeInstance),
    enrollmentsList: jspb.Message.toObjectList(msg.getEnrollmentsList(),
    proto.ag.Enrollment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.User}
 */
proto.ag.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.User;
  return proto.ag.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.User}
 */
proto.ag.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsadmin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudentid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarurl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 8:
      var value = new proto.ag.RemoteIdentity;
      reader.readMessage(value,proto.ag.RemoteIdentity.deserializeBinaryFromReader);
      msg.addRemoteidentities(value);
      break;
    case 9:
      var value = new proto.ag.Enrollment;
      reader.readMessage(value,proto.ag.Enrollment.deserializeBinaryFromReader);
      msg.addEnrollments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIsadmin();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStudentid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAvatarurl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRemoteidentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.ag.RemoteIdentity.serializeBinaryToWriter
    );
  }
  f = message.getEnrollmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.ag.Enrollment.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool isAdmin = 2;
 * @return {boolean}
 */
proto.ag.User.prototype.getIsadmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setIsadmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ag.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string studentID = 4;
 * @return {string}
 */
proto.ag.User.prototype.getStudentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setStudentid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.ag.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string avatarURL = 6;
 * @return {string}
 */
proto.ag.User.prototype.getAvatarurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setAvatarurl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string login = 7;
 * @return {string}
 */
proto.ag.User.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated RemoteIdentity remoteIdentities = 8;
 * @return {!Array<!proto.ag.RemoteIdentity>}
 */
proto.ag.User.prototype.getRemoteidentitiesList = function() {
  return /** @type{!Array<!proto.ag.RemoteIdentity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.RemoteIdentity, 8));
};


/**
 * @param {!Array<!proto.ag.RemoteIdentity>} value
 * @return {!proto.ag.User} returns this
*/
proto.ag.User.prototype.setRemoteidentitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ag.RemoteIdentity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.RemoteIdentity}
 */
proto.ag.User.prototype.addRemoteidentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ag.RemoteIdentity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.clearRemoteidentitiesList = function() {
  return this.setRemoteidentitiesList([]);
};


/**
 * repeated Enrollment enrollments = 9;
 * @return {!Array<!proto.ag.Enrollment>}
 */
proto.ag.User.prototype.getEnrollmentsList = function() {
  return /** @type{!Array<!proto.ag.Enrollment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Enrollment, 9));
};


/**
 * @param {!Array<!proto.ag.Enrollment>} value
 * @return {!proto.ag.User} returns this
*/
proto.ag.User.prototype.setEnrollmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ag.Enrollment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Enrollment}
 */
proto.ag.User.prototype.addEnrollments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ag.Enrollment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.User} returns this
 */
proto.ag.User.prototype.clearEnrollmentsList = function() {
  return this.setEnrollmentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Users.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Users.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Users.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Users} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Users.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.ag.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Users}
 */
proto.ag.Users.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Users;
  return proto.ag.Users.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Users} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Users}
 */
proto.ag.Users.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.User;
      reader.readMessage(value,proto.ag.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Users.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Users.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Users} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Users.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.ag.User>}
 */
proto.ag.Users.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.ag.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.User, 1));
};


/**
 * @param {!Array<!proto.ag.User>} value
 * @return {!proto.ag.Users} returns this
*/
proto.ag.Users.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.User}
 */
proto.ag.Users.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Users} returns this
 */
proto.ag.Users.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.RemoteIdentity.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.RemoteIdentity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.RemoteIdentity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RemoteIdentity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    provider: jspb.Message.getFieldWithDefault(msg, 2, ""),
    remoteid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    accesstoken: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.RemoteIdentity}
 */
proto.ag.RemoteIdentity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.RemoteIdentity;
  return proto.ag.RemoteIdentity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.RemoteIdentity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.RemoteIdentity}
 */
proto.ag.RemoteIdentity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRemoteid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.RemoteIdentity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.RemoteIdentity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.RemoteIdentity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RemoteIdentity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRemoteid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.RemoteIdentity.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RemoteIdentity} returns this
 */
proto.ag.RemoteIdentity.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string provider = 2;
 * @return {string}
 */
proto.ag.RemoteIdentity.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.RemoteIdentity} returns this
 */
proto.ag.RemoteIdentity.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 remoteID = 3;
 * @return {number}
 */
proto.ag.RemoteIdentity.prototype.getRemoteid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RemoteIdentity} returns this
 */
proto.ag.RemoteIdentity.prototype.setRemoteid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string accessToken = 4;
 * @return {string}
 */
proto.ag.RemoteIdentity.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.RemoteIdentity} returns this
 */
proto.ag.RemoteIdentity.prototype.setAccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 userID = 5;
 * @return {number}
 */
proto.ag.RemoteIdentity.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RemoteIdentity} returns this
 */
proto.ag.RemoteIdentity.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Group.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    courseid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    teamid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.ag.User.toObject, includeInstance),
    enrollmentsList: jspb.Message.toObjectList(msg.getEnrollmentsList(),
    proto.ag.Enrollment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Group}
 */
proto.ag.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Group;
  return proto.ag.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Group}
 */
proto.ag.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 5:
      var value = /** @type {!proto.ag.Group.GroupStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = new proto.ag.User;
      reader.readMessage(value,proto.ag.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 7:
      var value = new proto.ag.Enrollment;
      reader.readMessage(value,proto.ag.Enrollment.deserializeBinaryFromReader);
      msg.addEnrollments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTeamid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ag.User.serializeBinaryToWriter
    );
  }
  f = message.getEnrollmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ag.Enrollment.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.Group.GroupStatus = {
  PENDING: 0,
  APPROVED: 1
};

/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Group.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.ag.Group.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 courseID = 3;
 * @return {number}
 */
proto.ag.Group.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 teamID = 4;
 * @return {number}
 */
proto.ag.Group.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.setTeamid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional GroupStatus status = 5;
 * @return {!proto.ag.Group.GroupStatus}
 */
proto.ag.Group.prototype.getStatus = function() {
  return /** @type {!proto.ag.Group.GroupStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ag.Group.GroupStatus} value
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated User users = 6;
 * @return {!Array<!proto.ag.User>}
 */
proto.ag.Group.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.ag.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.User, 6));
};


/**
 * @param {!Array<!proto.ag.User>} value
 * @return {!proto.ag.Group} returns this
*/
proto.ag.Group.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ag.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.User}
 */
proto.ag.Group.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ag.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated Enrollment enrollments = 7;
 * @return {!Array<!proto.ag.Enrollment>}
 */
proto.ag.Group.prototype.getEnrollmentsList = function() {
  return /** @type{!Array<!proto.ag.Enrollment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Enrollment, 7));
};


/**
 * @param {!Array<!proto.ag.Enrollment>} value
 * @return {!proto.ag.Group} returns this
*/
proto.ag.Group.prototype.setEnrollmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ag.Enrollment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Enrollment}
 */
proto.ag.Group.prototype.addEnrollments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ag.Enrollment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Group} returns this
 */
proto.ag.Group.prototype.clearEnrollmentsList = function() {
  return this.setEnrollmentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Groups.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Groups.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Groups.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Groups} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Groups.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.ag.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Groups}
 */
proto.ag.Groups.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Groups;
  return proto.ag.Groups.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Groups} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Groups}
 */
proto.ag.Groups.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Group;
      reader.readMessage(value,proto.ag.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Groups.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Groups.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Groups} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Groups.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Group groups = 1;
 * @return {!Array<!proto.ag.Group>}
 */
proto.ag.Groups.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.ag.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Group, 1));
};


/**
 * @param {!Array<!proto.ag.Group>} value
 * @return {!proto.ag.Groups} returns this
*/
proto.ag.Groups.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Group}
 */
proto.ag.Groups.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Groups} returns this
 */
proto.ag.Groups.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Course.repeatedFields_ = [13,14,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Course.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Course.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Course} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Course.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    coursecreatorid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    code: jspb.Message.getFieldWithDefault(msg, 4, ""),
    year: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tag: jspb.Message.getFieldWithDefault(msg, 6, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 7, ""),
    organizationid: jspb.Message.getFieldWithDefault(msg, 8, 0),
    organizationpath: jspb.Message.getFieldWithDefault(msg, 9, ""),
    slipdays: jspb.Message.getFieldWithDefault(msg, 10, 0),
    dockerfile: jspb.Message.getFieldWithDefault(msg, 11, ""),
    enrolled: jspb.Message.getFieldWithDefault(msg, 12, 0),
    enrollmentsList: jspb.Message.toObjectList(msg.getEnrollmentsList(),
    proto.ag.Enrollment.toObject, includeInstance),
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.ag.Assignment.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.ag.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Course}
 */
proto.ag.Course.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Course;
  return proto.ag.Course.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Course} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Course}
 */
proto.ag.Course.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoursecreatorid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setYear(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrganizationid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationpath(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlipdays(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDockerfile(value);
      break;
    case 12:
      var value = /** @type {!proto.ag.Enrollment.UserStatus} */ (reader.readEnum());
      msg.setEnrolled(value);
      break;
    case 13:
      var value = new proto.ag.Enrollment;
      reader.readMessage(value,proto.ag.Enrollment.deserializeBinaryFromReader);
      msg.addEnrollments(value);
      break;
    case 14:
      var value = new proto.ag.Assignment;
      reader.readMessage(value,proto.ag.Assignment.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    case 15:
      var value = new proto.ag.Group;
      reader.readMessage(value,proto.ag.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Course.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Course.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Course} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Course.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCoursecreatorid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getYear();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getTag();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOrganizationid();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getOrganizationpath();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSlipdays();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getDockerfile();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getEnrolled();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getEnrollmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.ag.Enrollment.serializeBinaryToWriter
    );
  }
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.ag.Assignment.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.ag.Group.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Course.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 courseCreatorID = 2;
 * @return {number}
 */
proto.ag.Course.prototype.getCoursecreatorid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setCoursecreatorid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ag.Course.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string code = 4;
 * @return {string}
 */
proto.ag.Course.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 year = 5;
 * @return {number}
 */
proto.ag.Course.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string tag = 6;
 * @return {string}
 */
proto.ag.Course.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setTag = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string provider = 7;
 * @return {string}
 */
proto.ag.Course.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 organizationID = 8;
 * @return {number}
 */
proto.ag.Course.prototype.getOrganizationid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setOrganizationid = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string organizationPath = 9;
 * @return {string}
 */
proto.ag.Course.prototype.getOrganizationpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setOrganizationpath = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 slipDays = 10;
 * @return {number}
 */
proto.ag.Course.prototype.getSlipdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setSlipdays = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string dockerfile = 11;
 * @return {string}
 */
proto.ag.Course.prototype.getDockerfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setDockerfile = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional Enrollment.UserStatus enrolled = 12;
 * @return {!proto.ag.Enrollment.UserStatus}
 */
proto.ag.Course.prototype.getEnrolled = function() {
  return /** @type {!proto.ag.Enrollment.UserStatus} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.ag.Enrollment.UserStatus} value
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.setEnrolled = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * repeated Enrollment enrollments = 13;
 * @return {!Array<!proto.ag.Enrollment>}
 */
proto.ag.Course.prototype.getEnrollmentsList = function() {
  return /** @type{!Array<!proto.ag.Enrollment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Enrollment, 13));
};


/**
 * @param {!Array<!proto.ag.Enrollment>} value
 * @return {!proto.ag.Course} returns this
*/
proto.ag.Course.prototype.setEnrollmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ag.Enrollment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Enrollment}
 */
proto.ag.Course.prototype.addEnrollments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ag.Enrollment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.clearEnrollmentsList = function() {
  return this.setEnrollmentsList([]);
};


/**
 * repeated Assignment assignments = 14;
 * @return {!Array<!proto.ag.Assignment>}
 */
proto.ag.Course.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.ag.Assignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Assignment, 14));
};


/**
 * @param {!Array<!proto.ag.Assignment>} value
 * @return {!proto.ag.Course} returns this
*/
proto.ag.Course.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.ag.Assignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Assignment}
 */
proto.ag.Course.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.ag.Assignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};


/**
 * repeated Group groups = 15;
 * @return {!Array<!proto.ag.Group>}
 */
proto.ag.Course.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.ag.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Group, 15));
};


/**
 * @param {!Array<!proto.ag.Group>} value
 * @return {!proto.ag.Course} returns this
*/
proto.ag.Course.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ag.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Group}
 */
proto.ag.Course.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ag.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Course} returns this
 */
proto.ag.Course.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Courses.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Courses.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Courses.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Courses} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Courses.toObject = function(includeInstance, msg) {
  var f, obj = {
    coursesList: jspb.Message.toObjectList(msg.getCoursesList(),
    proto.ag.Course.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Courses}
 */
proto.ag.Courses.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Courses;
  return proto.ag.Courses.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Courses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Courses}
 */
proto.ag.Courses.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Course;
      reader.readMessage(value,proto.ag.Course.deserializeBinaryFromReader);
      msg.addCourses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Courses.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Courses.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Courses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Courses.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoursesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Course.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Course courses = 1;
 * @return {!Array<!proto.ag.Course>}
 */
proto.ag.Courses.prototype.getCoursesList = function() {
  return /** @type{!Array<!proto.ag.Course>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Course, 1));
};


/**
 * @param {!Array<!proto.ag.Course>} value
 * @return {!proto.ag.Courses} returns this
*/
proto.ag.Courses.prototype.setCoursesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Course=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Course}
 */
proto.ag.Courses.prototype.addCourses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Course, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Courses} returns this
 */
proto.ag.Courses.prototype.clearCoursesList = function() {
  return this.setCoursesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Repository.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Repository.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Repository} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Repository.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organizationid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    repositoryid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    htmlurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    repotype: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Repository}
 */
proto.ag.Repository.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Repository;
  return proto.ag.Repository.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Repository} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Repository}
 */
proto.ag.Repository.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOrganizationid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRepositoryid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHtmlurl(value);
      break;
    case 7:
      var value = /** @type {!proto.ag.Repository.Type} */ (reader.readEnum());
      msg.setRepotype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Repository.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Repository.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Repository} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Repository.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getOrganizationid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRepositoryid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getHtmlurl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRepotype();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.Repository.Type = {
  NONE: 0,
  COURSEINFO: 1,
  ASSIGNMENTS: 2,
  TESTS: 3,
  USER: 4,
  GROUP: 5
};

/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Repository.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 organizationID = 2;
 * @return {number}
 */
proto.ag.Repository.prototype.getOrganizationid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setOrganizationid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 repositoryID = 3;
 * @return {number}
 */
proto.ag.Repository.prototype.getRepositoryid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setRepositoryid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 userID = 4;
 * @return {number}
 */
proto.ag.Repository.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 groupID = 5;
 * @return {number}
 */
proto.ag.Repository.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string HTMLURL = 6;
 * @return {string}
 */
proto.ag.Repository.prototype.getHtmlurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setHtmlurl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Type repoType = 7;
 * @return {!proto.ag.Repository.Type}
 */
proto.ag.Repository.prototype.getRepotype = function() {
  return /** @type {!proto.ag.Repository.Type} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.ag.Repository.Type} value
 * @return {!proto.ag.Repository} returns this
 */
proto.ag.Repository.prototype.setRepotype = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Enrollment.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Enrollment.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Enrollment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Enrollment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Enrollment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hasteacherscopes: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    user: (f = msg.getUser()) && proto.ag.User.toObject(includeInstance, f),
    course: (f = msg.getCourse()) && proto.ag.Course.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.ag.Group.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    state: jspb.Message.getFieldWithDefault(msg, 10, 0),
    slipdaysremaining: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lastactivitydate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    totalapproved: jspb.Message.getFieldWithDefault(msg, 13, 0),
    usedslipdaysList: jspb.Message.toObjectList(msg.getUsedslipdaysList(),
    proto.ag.UsedSlipDays.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Enrollment}
 */
proto.ag.Enrollment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Enrollment;
  return proto.ag.Enrollment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Enrollment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Enrollment}
 */
proto.ag.Enrollment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasteacherscopes(value);
      break;
    case 6:
      var value = new proto.ag.User;
      reader.readMessage(value,proto.ag.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 7:
      var value = new proto.ag.Course;
      reader.readMessage(value,proto.ag.Course.deserializeBinaryFromReader);
      msg.setCourse(value);
      break;
    case 8:
      var value = new proto.ag.Group;
      reader.readMessage(value,proto.ag.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 9:
      var value = /** @type {!proto.ag.Enrollment.UserStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {!proto.ag.Enrollment.DisplayState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlipdaysremaining(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastactivitydate(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalapproved(value);
      break;
    case 14:
      var value = new proto.ag.UsedSlipDays;
      reader.readMessage(value,proto.ag.UsedSlipDays.deserializeBinaryFromReader);
      msg.addUsedslipdays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Enrollment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Enrollment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Enrollment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Enrollment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getHasteacherscopes();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.ag.User.serializeBinaryToWriter
    );
  }
  f = message.getCourse();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.ag.Course.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.ag.Group.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getSlipdaysremaining();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getLastactivitydate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTotalapproved();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getUsedslipdaysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.ag.UsedSlipDays.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.Enrollment.UserStatus = {
  NONE: 0,
  PENDING: 1,
  STUDENT: 2,
  TEACHER: 3
};

/**
 * @enum {number}
 */
proto.ag.Enrollment.DisplayState = {
  UNSET: 0,
  HIDDEN: 1,
  VISIBLE: 2,
  FAVORITE: 3
};

/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 courseID = 2;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 userID = 3;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 groupID = 4;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool hasTeacherScopes = 5;
 * @return {boolean}
 */
proto.ag.Enrollment.prototype.getHasteacherscopes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setHasteacherscopes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional User user = 6;
 * @return {?proto.ag.User}
 */
proto.ag.Enrollment.prototype.getUser = function() {
  return /** @type{?proto.ag.User} */ (
    jspb.Message.getWrapperField(this, proto.ag.User, 6));
};


/**
 * @param {?proto.ag.User|undefined} value
 * @return {!proto.ag.Enrollment} returns this
*/
proto.ag.Enrollment.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.Enrollment.prototype.hasUser = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Course course = 7;
 * @return {?proto.ag.Course}
 */
proto.ag.Enrollment.prototype.getCourse = function() {
  return /** @type{?proto.ag.Course} */ (
    jspb.Message.getWrapperField(this, proto.ag.Course, 7));
};


/**
 * @param {?proto.ag.Course|undefined} value
 * @return {!proto.ag.Enrollment} returns this
*/
proto.ag.Enrollment.prototype.setCourse = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.clearCourse = function() {
  return this.setCourse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.Enrollment.prototype.hasCourse = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Group group = 8;
 * @return {?proto.ag.Group}
 */
proto.ag.Enrollment.prototype.getGroup = function() {
  return /** @type{?proto.ag.Group} */ (
    jspb.Message.getWrapperField(this, proto.ag.Group, 8));
};


/**
 * @param {?proto.ag.Group|undefined} value
 * @return {!proto.ag.Enrollment} returns this
*/
proto.ag.Enrollment.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.Enrollment.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional UserStatus status = 9;
 * @return {!proto.ag.Enrollment.UserStatus}
 */
proto.ag.Enrollment.prototype.getStatus = function() {
  return /** @type {!proto.ag.Enrollment.UserStatus} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.ag.Enrollment.UserStatus} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional DisplayState state = 10;
 * @return {!proto.ag.Enrollment.DisplayState}
 */
proto.ag.Enrollment.prototype.getState = function() {
  return /** @type {!proto.ag.Enrollment.DisplayState} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.ag.Enrollment.DisplayState} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional uint32 slipDaysRemaining = 11;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getSlipdaysremaining = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setSlipdaysremaining = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string lastActivityDate = 12;
 * @return {string}
 */
proto.ag.Enrollment.prototype.getLastactivitydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setLastactivitydate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 totalApproved = 13;
 * @return {number}
 */
proto.ag.Enrollment.prototype.getTotalapproved = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.setTotalapproved = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * repeated UsedSlipDays usedSlipDays = 14;
 * @return {!Array<!proto.ag.UsedSlipDays>}
 */
proto.ag.Enrollment.prototype.getUsedslipdaysList = function() {
  return /** @type{!Array<!proto.ag.UsedSlipDays>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.UsedSlipDays, 14));
};


/**
 * @param {!Array<!proto.ag.UsedSlipDays>} value
 * @return {!proto.ag.Enrollment} returns this
*/
proto.ag.Enrollment.prototype.setUsedslipdaysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.ag.UsedSlipDays=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.UsedSlipDays}
 */
proto.ag.Enrollment.prototype.addUsedslipdays = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.ag.UsedSlipDays, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Enrollment} returns this
 */
proto.ag.Enrollment.prototype.clearUsedslipdaysList = function() {
  return this.setUsedslipdaysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.UsedSlipDays.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.UsedSlipDays.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.UsedSlipDays} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UsedSlipDays.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    enrollmentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    usedslipdays: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.UsedSlipDays}
 */
proto.ag.UsedSlipDays.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.UsedSlipDays;
  return proto.ag.UsedSlipDays.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.UsedSlipDays} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.UsedSlipDays}
 */
proto.ag.UsedSlipDays.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEnrollmentid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUsedslipdays(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.UsedSlipDays.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.UsedSlipDays.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.UsedSlipDays} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UsedSlipDays.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEnrollmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getUsedslipdays();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.UsedSlipDays.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UsedSlipDays} returns this
 */
proto.ag.UsedSlipDays.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 enrollmentID = 2;
 * @return {number}
 */
proto.ag.UsedSlipDays.prototype.getEnrollmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UsedSlipDays} returns this
 */
proto.ag.UsedSlipDays.prototype.setEnrollmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 assignmentID = 3;
 * @return {number}
 */
proto.ag.UsedSlipDays.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UsedSlipDays} returns this
 */
proto.ag.UsedSlipDays.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 usedSlipDays = 4;
 * @return {number}
 */
proto.ag.UsedSlipDays.prototype.getUsedslipdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UsedSlipDays} returns this
 */
proto.ag.UsedSlipDays.prototype.setUsedslipdays = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Enrollments.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Enrollments.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Enrollments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Enrollments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Enrollments.toObject = function(includeInstance, msg) {
  var f, obj = {
    enrollmentsList: jspb.Message.toObjectList(msg.getEnrollmentsList(),
    proto.ag.Enrollment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Enrollments}
 */
proto.ag.Enrollments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Enrollments;
  return proto.ag.Enrollments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Enrollments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Enrollments}
 */
proto.ag.Enrollments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Enrollment;
      reader.readMessage(value,proto.ag.Enrollment.deserializeBinaryFromReader);
      msg.addEnrollments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Enrollments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Enrollments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Enrollments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Enrollments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnrollmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Enrollment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Enrollment enrollments = 1;
 * @return {!Array<!proto.ag.Enrollment>}
 */
proto.ag.Enrollments.prototype.getEnrollmentsList = function() {
  return /** @type{!Array<!proto.ag.Enrollment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Enrollment, 1));
};


/**
 * @param {!Array<!proto.ag.Enrollment>} value
 * @return {!proto.ag.Enrollments} returns this
*/
proto.ag.Enrollments.prototype.setEnrollmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Enrollment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Enrollment}
 */
proto.ag.Enrollments.prototype.addEnrollments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Enrollment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Enrollments} returns this
 */
proto.ag.Enrollments.prototype.clearEnrollmentsList = function() {
  return this.setEnrollmentsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.SubmissionLink.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.SubmissionLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.SubmissionLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    assignment: (f = msg.getAssignment()) && proto.ag.Assignment.toObject(includeInstance, f),
    submission: (f = msg.getSubmission()) && proto.ag.Submission.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.SubmissionLink}
 */
proto.ag.SubmissionLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.SubmissionLink;
  return proto.ag.SubmissionLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.SubmissionLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.SubmissionLink}
 */
proto.ag.SubmissionLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Assignment;
      reader.readMessage(value,proto.ag.Assignment.deserializeBinaryFromReader);
      msg.setAssignment(value);
      break;
    case 2:
      var value = new proto.ag.Submission;
      reader.readMessage(value,proto.ag.Submission.deserializeBinaryFromReader);
      msg.setSubmission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.SubmissionLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.SubmissionLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.SubmissionLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssignment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ag.Assignment.serializeBinaryToWriter
    );
  }
  f = message.getSubmission();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ag.Submission.serializeBinaryToWriter
    );
  }
};


/**
 * optional Assignment assignment = 1;
 * @return {?proto.ag.Assignment}
 */
proto.ag.SubmissionLink.prototype.getAssignment = function() {
  return /** @type{?proto.ag.Assignment} */ (
    jspb.Message.getWrapperField(this, proto.ag.Assignment, 1));
};


/**
 * @param {?proto.ag.Assignment|undefined} value
 * @return {!proto.ag.SubmissionLink} returns this
*/
proto.ag.SubmissionLink.prototype.setAssignment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.SubmissionLink} returns this
 */
proto.ag.SubmissionLink.prototype.clearAssignment = function() {
  return this.setAssignment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.SubmissionLink.prototype.hasAssignment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Submission submission = 2;
 * @return {?proto.ag.Submission}
 */
proto.ag.SubmissionLink.prototype.getSubmission = function() {
  return /** @type{?proto.ag.Submission} */ (
    jspb.Message.getWrapperField(this, proto.ag.Submission, 2));
};


/**
 * @param {?proto.ag.Submission|undefined} value
 * @return {!proto.ag.SubmissionLink} returns this
*/
proto.ag.SubmissionLink.prototype.setSubmission = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.SubmissionLink} returns this
 */
proto.ag.SubmissionLink.prototype.clearSubmission = function() {
  return this.setSubmission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.SubmissionLink.prototype.hasSubmission = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.EnrollmentLink.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.EnrollmentLink.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.EnrollmentLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.EnrollmentLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    enrollment: (f = msg.getEnrollment()) && proto.ag.Enrollment.toObject(includeInstance, f),
    submissionsList: jspb.Message.toObjectList(msg.getSubmissionsList(),
    proto.ag.SubmissionLink.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.EnrollmentLink}
 */
proto.ag.EnrollmentLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.EnrollmentLink;
  return proto.ag.EnrollmentLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.EnrollmentLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.EnrollmentLink}
 */
proto.ag.EnrollmentLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.ag.Enrollment;
      reader.readMessage(value,proto.ag.Enrollment.deserializeBinaryFromReader);
      msg.setEnrollment(value);
      break;
    case 3:
      var value = new proto.ag.SubmissionLink;
      reader.readMessage(value,proto.ag.SubmissionLink.deserializeBinaryFromReader);
      msg.addSubmissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.EnrollmentLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.EnrollmentLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.EnrollmentLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnrollment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ag.Enrollment.serializeBinaryToWriter
    );
  }
  f = message.getSubmissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ag.SubmissionLink.serializeBinaryToWriter
    );
  }
};


/**
 * optional Enrollment enrollment = 2;
 * @return {?proto.ag.Enrollment}
 */
proto.ag.EnrollmentLink.prototype.getEnrollment = function() {
  return /** @type{?proto.ag.Enrollment} */ (
    jspb.Message.getWrapperField(this, proto.ag.Enrollment, 2));
};


/**
 * @param {?proto.ag.Enrollment|undefined} value
 * @return {!proto.ag.EnrollmentLink} returns this
*/
proto.ag.EnrollmentLink.prototype.setEnrollment = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.EnrollmentLink} returns this
 */
proto.ag.EnrollmentLink.prototype.clearEnrollment = function() {
  return this.setEnrollment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.EnrollmentLink.prototype.hasEnrollment = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SubmissionLink submissions = 3;
 * @return {!Array<!proto.ag.SubmissionLink>}
 */
proto.ag.EnrollmentLink.prototype.getSubmissionsList = function() {
  return /** @type{!Array<!proto.ag.SubmissionLink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.SubmissionLink, 3));
};


/**
 * @param {!Array<!proto.ag.SubmissionLink>} value
 * @return {!proto.ag.EnrollmentLink} returns this
*/
proto.ag.EnrollmentLink.prototype.setSubmissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ag.SubmissionLink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.SubmissionLink}
 */
proto.ag.EnrollmentLink.prototype.addSubmissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ag.SubmissionLink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.EnrollmentLink} returns this
 */
proto.ag.EnrollmentLink.prototype.clearSubmissionsList = function() {
  return this.setSubmissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.CourseSubmissions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.CourseSubmissions.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.CourseSubmissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.CourseSubmissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseSubmissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    course: (f = msg.getCourse()) && proto.ag.Course.toObject(includeInstance, f),
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    proto.ag.EnrollmentLink.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.CourseSubmissions}
 */
proto.ag.CourseSubmissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.CourseSubmissions;
  return proto.ag.CourseSubmissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.CourseSubmissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.CourseSubmissions}
 */
proto.ag.CourseSubmissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Course;
      reader.readMessage(value,proto.ag.Course.deserializeBinaryFromReader);
      msg.setCourse(value);
      break;
    case 2:
      var value = new proto.ag.EnrollmentLink;
      reader.readMessage(value,proto.ag.EnrollmentLink.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.CourseSubmissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.CourseSubmissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.CourseSubmissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseSubmissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.ag.Course.serializeBinaryToWriter
    );
  }
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ag.EnrollmentLink.serializeBinaryToWriter
    );
  }
};


/**
 * optional Course course = 1;
 * @return {?proto.ag.Course}
 */
proto.ag.CourseSubmissions.prototype.getCourse = function() {
  return /** @type{?proto.ag.Course} */ (
    jspb.Message.getWrapperField(this, proto.ag.Course, 1));
};


/**
 * @param {?proto.ag.Course|undefined} value
 * @return {!proto.ag.CourseSubmissions} returns this
*/
proto.ag.CourseSubmissions.prototype.setCourse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.CourseSubmissions} returns this
 */
proto.ag.CourseSubmissions.prototype.clearCourse = function() {
  return this.setCourse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.CourseSubmissions.prototype.hasCourse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated EnrollmentLink links = 2;
 * @return {!Array<!proto.ag.EnrollmentLink>}
 */
proto.ag.CourseSubmissions.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.ag.EnrollmentLink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.EnrollmentLink, 2));
};


/**
 * @param {!Array<!proto.ag.EnrollmentLink>} value
 * @return {!proto.ag.CourseSubmissions} returns this
*/
proto.ag.CourseSubmissions.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ag.EnrollmentLink=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.EnrollmentLink}
 */
proto.ag.CourseSubmissions.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ag.EnrollmentLink, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.CourseSubmissions} returns this
 */
proto.ag.CourseSubmissions.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Assignment.repeatedFields_ = [11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Assignment.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Assignment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Assignment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Assignment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scriptfile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deadline: jspb.Message.getFieldWithDefault(msg, 5, ""),
    autoapprove: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    order: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isgrouplab: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    scorelimit: jspb.Message.getFieldWithDefault(msg, 9, 0),
    reviewers: jspb.Message.getFieldWithDefault(msg, 10, 0),
    submissionsList: jspb.Message.toObjectList(msg.getSubmissionsList(),
    proto.ag.Submission.toObject, includeInstance),
    gradingbenchmarksList: jspb.Message.toObjectList(msg.getGradingbenchmarksList(),
    proto.ag.GradingBenchmark.toObject, includeInstance),
    containertimeout: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Assignment}
 */
proto.ag.Assignment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Assignment;
  return proto.ag.Assignment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Assignment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Assignment}
 */
proto.ag.Assignment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScriptfile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeadline(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoapprove(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrder(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsgrouplab(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScorelimit(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReviewers(value);
      break;
    case 11:
      var value = new proto.ag.Submission;
      reader.readMessage(value,proto.ag.Submission.deserializeBinaryFromReader);
      msg.addSubmissions(value);
      break;
    case 12:
      var value = new proto.ag.GradingBenchmark;
      reader.readMessage(value,proto.ag.GradingBenchmark.deserializeBinaryFromReader);
      msg.addGradingbenchmarks(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setContainertimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Assignment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Assignment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Assignment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Assignment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScriptfile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeadline();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAutoapprove();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getIsgrouplab();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getScorelimit();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getReviewers();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getSubmissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.ag.Submission.serializeBinaryToWriter
    );
  }
  f = message.getGradingbenchmarksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.ag.GradingBenchmark.serializeBinaryToWriter
    );
  }
  f = message.getContainertimeout();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Assignment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 CourseID = 2;
 * @return {number}
 */
proto.ag.Assignment.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.ag.Assignment.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scriptFile = 4;
 * @return {string}
 */
proto.ag.Assignment.prototype.getScriptfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setScriptfile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string deadline = 5;
 * @return {string}
 */
proto.ag.Assignment.prototype.getDeadline = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setDeadline = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool autoApprove = 6;
 * @return {boolean}
 */
proto.ag.Assignment.prototype.getAutoapprove = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setAutoapprove = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional uint32 order = 7;
 * @return {number}
 */
proto.ag.Assignment.prototype.getOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool isGroupLab = 8;
 * @return {boolean}
 */
proto.ag.Assignment.prototype.getIsgrouplab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setIsgrouplab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 scoreLimit = 9;
 * @return {number}
 */
proto.ag.Assignment.prototype.getScorelimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setScorelimit = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 reviewers = 10;
 * @return {number}
 */
proto.ag.Assignment.prototype.getReviewers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setReviewers = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated Submission submissions = 11;
 * @return {!Array<!proto.ag.Submission>}
 */
proto.ag.Assignment.prototype.getSubmissionsList = function() {
  return /** @type{!Array<!proto.ag.Submission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Submission, 11));
};


/**
 * @param {!Array<!proto.ag.Submission>} value
 * @return {!proto.ag.Assignment} returns this
*/
proto.ag.Assignment.prototype.setSubmissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ag.Submission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Submission}
 */
proto.ag.Assignment.prototype.addSubmissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ag.Submission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.clearSubmissionsList = function() {
  return this.setSubmissionsList([]);
};


/**
 * repeated GradingBenchmark gradingBenchmarks = 12;
 * @return {!Array<!proto.ag.GradingBenchmark>}
 */
proto.ag.Assignment.prototype.getGradingbenchmarksList = function() {
  return /** @type{!Array<!proto.ag.GradingBenchmark>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.GradingBenchmark, 12));
};


/**
 * @param {!Array<!proto.ag.GradingBenchmark>} value
 * @return {!proto.ag.Assignment} returns this
*/
proto.ag.Assignment.prototype.setGradingbenchmarksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ag.GradingBenchmark=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.GradingBenchmark}
 */
proto.ag.Assignment.prototype.addGradingbenchmarks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ag.GradingBenchmark, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.clearGradingbenchmarksList = function() {
  return this.setGradingbenchmarksList([]);
};


/**
 * optional uint32 containerTimeout = 13;
 * @return {number}
 */
proto.ag.Assignment.prototype.getContainertimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Assignment} returns this
 */
proto.ag.Assignment.prototype.setContainertimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Assignments.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Assignments.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Assignments.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Assignments} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Assignments.toObject = function(includeInstance, msg) {
  var f, obj = {
    assignmentsList: jspb.Message.toObjectList(msg.getAssignmentsList(),
    proto.ag.Assignment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Assignments}
 */
proto.ag.Assignments.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Assignments;
  return proto.ag.Assignments.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Assignments} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Assignments}
 */
proto.ag.Assignments.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Assignment;
      reader.readMessage(value,proto.ag.Assignment.deserializeBinaryFromReader);
      msg.addAssignments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Assignments.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Assignments.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Assignments} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Assignments.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssignmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Assignment.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Assignment assignments = 1;
 * @return {!Array<!proto.ag.Assignment>}
 */
proto.ag.Assignments.prototype.getAssignmentsList = function() {
  return /** @type{!Array<!proto.ag.Assignment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Assignment, 1));
};


/**
 * @param {!Array<!proto.ag.Assignment>} value
 * @return {!proto.ag.Assignments} returns this
*/
proto.ag.Assignments.prototype.setAssignmentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Assignment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Assignment}
 */
proto.ag.Assignments.prototype.addAssignments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Assignment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Assignments} returns this
 */
proto.ag.Assignments.prototype.clearAssignmentsList = function() {
  return this.setAssignmentsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Submission.repeatedFields_ = [10,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Submission.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Submission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Submission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Submission.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    score: jspb.Message.getFieldWithDefault(msg, 5, 0),
    commithash: jspb.Message.getFieldWithDefault(msg, 6, ""),
    released: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    approveddate: jspb.Message.getFieldWithDefault(msg, 9, ""),
    reviewsList: jspb.Message.toObjectList(msg.getReviewsList(),
    proto.ag.Review.toObject, includeInstance),
    buildinfo: (f = msg.getBuildinfo()) && kit_score_score_pb.BuildInfo.toObject(includeInstance, f),
    scoresList: jspb.Message.toObjectList(msg.getScoresList(),
    kit_score_score_pb.Score.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Submission}
 */
proto.ag.Submission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Submission;
  return proto.ag.Submission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Submission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Submission}
 */
proto.ag.Submission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScore(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommithash(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReleased(value);
      break;
    case 8:
      var value = /** @type {!proto.ag.Submission.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setApproveddate(value);
      break;
    case 10:
      var value = new proto.ag.Review;
      reader.readMessage(value,proto.ag.Review.deserializeBinaryFromReader);
      msg.addReviews(value);
      break;
    case 11:
      var value = new kit_score_score_pb.BuildInfo;
      reader.readMessage(value,kit_score_score_pb.BuildInfo.deserializeBinaryFromReader);
      msg.setBuildinfo(value);
      break;
    case 12:
      var value = new kit_score_score_pb.Score;
      reader.readMessage(value,kit_score_score_pb.Score.deserializeBinaryFromReader);
      msg.addScores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Submission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Submission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Submission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Submission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getCommithash();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReleased();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getApproveddate();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getReviewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.ag.Review.serializeBinaryToWriter
    );
  }
  f = message.getBuildinfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      kit_score_score_pb.BuildInfo.serializeBinaryToWriter
    );
  }
  f = message.getScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      kit_score_score_pb.Score.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.Submission.Status = {
  NONE: 0,
  APPROVED: 1,
  REJECTED: 2,
  REVISION: 3
};

/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Submission.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 AssignmentID = 2;
 * @return {number}
 */
proto.ag.Submission.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 userID = 3;
 * @return {number}
 */
proto.ag.Submission.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 groupID = 4;
 * @return {number}
 */
proto.ag.Submission.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 score = 5;
 * @return {number}
 */
proto.ag.Submission.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string commitHash = 6;
 * @return {string}
 */
proto.ag.Submission.prototype.getCommithash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setCommithash = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool released = 7;
 * @return {boolean}
 */
proto.ag.Submission.prototype.getReleased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setReleased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional Status status = 8;
 * @return {!proto.ag.Submission.Status}
 */
proto.ag.Submission.prototype.getStatus = function() {
  return /** @type {!proto.ag.Submission.Status} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.ag.Submission.Status} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string approvedDate = 9;
 * @return {string}
 */
proto.ag.Submission.prototype.getApproveddate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.setApproveddate = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated Review reviews = 10;
 * @return {!Array<!proto.ag.Review>}
 */
proto.ag.Submission.prototype.getReviewsList = function() {
  return /** @type{!Array<!proto.ag.Review>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Review, 10));
};


/**
 * @param {!Array<!proto.ag.Review>} value
 * @return {!proto.ag.Submission} returns this
*/
proto.ag.Submission.prototype.setReviewsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ag.Review=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Review}
 */
proto.ag.Submission.prototype.addReviews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ag.Review, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.clearReviewsList = function() {
  return this.setReviewsList([]);
};


/**
 * optional score.BuildInfo BuildInfo = 11;
 * @return {?proto.score.BuildInfo}
 */
proto.ag.Submission.prototype.getBuildinfo = function() {
  return /** @type{?proto.score.BuildInfo} */ (
    jspb.Message.getWrapperField(this, kit_score_score_pb.BuildInfo, 11));
};


/**
 * @param {?proto.score.BuildInfo|undefined} value
 * @return {!proto.ag.Submission} returns this
*/
proto.ag.Submission.prototype.setBuildinfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.clearBuildinfo = function() {
  return this.setBuildinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.Submission.prototype.hasBuildinfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated score.Score Scores = 12;
 * @return {!Array<!proto.score.Score>}
 */
proto.ag.Submission.prototype.getScoresList = function() {
  return /** @type{!Array<!proto.score.Score>} */ (
    jspb.Message.getRepeatedWrapperField(this, kit_score_score_pb.Score, 12));
};


/**
 * @param {!Array<!proto.score.Score>} value
 * @return {!proto.ag.Submission} returns this
*/
proto.ag.Submission.prototype.setScoresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.score.Score=} opt_value
 * @param {number=} opt_index
 * @return {!proto.score.Score}
 */
proto.ag.Submission.prototype.addScores = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.score.Score, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Submission} returns this
 */
proto.ag.Submission.prototype.clearScoresList = function() {
  return this.setScoresList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Submissions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Submissions.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Submissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Submissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Submissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    submissionsList: jspb.Message.toObjectList(msg.getSubmissionsList(),
    proto.ag.Submission.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Submissions}
 */
proto.ag.Submissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Submissions;
  return proto.ag.Submissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Submissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Submissions}
 */
proto.ag.Submissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Submission;
      reader.readMessage(value,proto.ag.Submission.deserializeBinaryFromReader);
      msg.addSubmissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Submissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Submissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Submissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Submissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmissionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Submission.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Submission submissions = 1;
 * @return {!Array<!proto.ag.Submission>}
 */
proto.ag.Submissions.prototype.getSubmissionsList = function() {
  return /** @type{!Array<!proto.ag.Submission>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Submission, 1));
};


/**
 * @param {!Array<!proto.ag.Submission>} value
 * @return {!proto.ag.Submissions} returns this
*/
proto.ag.Submissions.prototype.setSubmissionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Submission=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Submission}
 */
proto.ag.Submissions.prototype.addSubmissions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Submission, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Submissions} returns this
 */
proto.ag.Submissions.prototype.clearSubmissionsList = function() {
  return this.setSubmissionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.GradingBenchmark.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.GradingBenchmark.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.GradingBenchmark.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.GradingBenchmark} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GradingBenchmark.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reviewid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    heading: jspb.Message.getFieldWithDefault(msg, 4, ""),
    comment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    criteriaList: jspb.Message.toObjectList(msg.getCriteriaList(),
    proto.ag.GradingCriterion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.GradingBenchmark}
 */
proto.ag.GradingBenchmark.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.GradingBenchmark;
  return proto.ag.GradingBenchmark.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.GradingBenchmark} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.GradingBenchmark}
 */
proto.ag.GradingBenchmark.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReviewid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeading(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 6:
      var value = new proto.ag.GradingCriterion;
      reader.readMessage(value,proto.ag.GradingCriterion.deserializeBinaryFromReader);
      msg.addCriteria(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.GradingBenchmark.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.GradingBenchmark.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.GradingBenchmark} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GradingBenchmark.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getReviewid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getHeading();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCriteriaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.ag.GradingCriterion.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.GradingBenchmark.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 AssignmentID = 2;
 * @return {number}
 */
proto.ag.GradingBenchmark.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 ReviewID = 3;
 * @return {number}
 */
proto.ag.GradingBenchmark.prototype.getReviewid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.setReviewid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string heading = 4;
 * @return {string}
 */
proto.ag.GradingBenchmark.prototype.getHeading = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.setHeading = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string comment = 5;
 * @return {string}
 */
proto.ag.GradingBenchmark.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated GradingCriterion criteria = 6;
 * @return {!Array<!proto.ag.GradingCriterion>}
 */
proto.ag.GradingBenchmark.prototype.getCriteriaList = function() {
  return /** @type{!Array<!proto.ag.GradingCriterion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.GradingCriterion, 6));
};


/**
 * @param {!Array<!proto.ag.GradingCriterion>} value
 * @return {!proto.ag.GradingBenchmark} returns this
*/
proto.ag.GradingBenchmark.prototype.setCriteriaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ag.GradingCriterion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.GradingCriterion}
 */
proto.ag.GradingBenchmark.prototype.addCriteria = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ag.GradingCriterion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.GradingBenchmark} returns this
 */
proto.ag.GradingBenchmark.prototype.clearCriteriaList = function() {
  return this.setCriteriaList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Benchmarks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Benchmarks.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Benchmarks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Benchmarks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Benchmarks.toObject = function(includeInstance, msg) {
  var f, obj = {
    benchmarksList: jspb.Message.toObjectList(msg.getBenchmarksList(),
    proto.ag.GradingBenchmark.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Benchmarks}
 */
proto.ag.Benchmarks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Benchmarks;
  return proto.ag.Benchmarks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Benchmarks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Benchmarks}
 */
proto.ag.Benchmarks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.GradingBenchmark;
      reader.readMessage(value,proto.ag.GradingBenchmark.deserializeBinaryFromReader);
      msg.addBenchmarks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Benchmarks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Benchmarks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Benchmarks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Benchmarks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBenchmarksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.GradingBenchmark.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GradingBenchmark benchmarks = 1;
 * @return {!Array<!proto.ag.GradingBenchmark>}
 */
proto.ag.Benchmarks.prototype.getBenchmarksList = function() {
  return /** @type{!Array<!proto.ag.GradingBenchmark>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.GradingBenchmark, 1));
};


/**
 * @param {!Array<!proto.ag.GradingBenchmark>} value
 * @return {!proto.ag.Benchmarks} returns this
*/
proto.ag.Benchmarks.prototype.setBenchmarksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.GradingBenchmark=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.GradingBenchmark}
 */
proto.ag.Benchmarks.prototype.addBenchmarks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.GradingBenchmark, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Benchmarks} returns this
 */
proto.ag.Benchmarks.prototype.clearBenchmarksList = function() {
  return this.setBenchmarksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.GradingCriterion.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.GradingCriterion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.GradingCriterion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GradingCriterion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    benchmarkid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    points: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    grade: jspb.Message.getFieldWithDefault(msg, 5, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.GradingCriterion}
 */
proto.ag.GradingCriterion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.GradingCriterion;
  return proto.ag.GradingCriterion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.GradingCriterion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.GradingCriterion}
 */
proto.ag.GradingCriterion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBenchmarkid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPoints(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {!proto.ag.GradingCriterion.Grade} */ (reader.readEnum());
      msg.setGrade(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.GradingCriterion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.GradingCriterion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.GradingCriterion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GradingCriterion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBenchmarkid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getGrade();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.GradingCriterion.Grade = {
  NONE: 0,
  FAILED: 1,
  PASSED: 2
};

/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.GradingCriterion.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 BenchmarkID = 2;
 * @return {number}
 */
proto.ag.GradingCriterion.prototype.getBenchmarkid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setBenchmarkid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 points = 3;
 * @return {number}
 */
proto.ag.GradingCriterion.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setPoints = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.ag.GradingCriterion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Grade grade = 5;
 * @return {!proto.ag.GradingCriterion.Grade}
 */
proto.ag.GradingCriterion.prototype.getGrade = function() {
  return /** @type {!proto.ag.GradingCriterion.Grade} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ag.GradingCriterion.Grade} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setGrade = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string comment = 6;
 * @return {string}
 */
proto.ag.GradingCriterion.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.GradingCriterion} returns this
 */
proto.ag.GradingCriterion.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Review.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Review.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Review.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Review} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Review.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    submissionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    reviewerid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    feedback: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ready: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    score: jspb.Message.getFieldWithDefault(msg, 6, 0),
    gradingbenchmarksList: jspb.Message.toObjectList(msg.getGradingbenchmarksList(),
    proto.ag.GradingBenchmark.toObject, includeInstance),
    edited: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Review}
 */
proto.ag.Review.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Review;
  return proto.ag.Review.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Review} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Review}
 */
proto.ag.Review.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSubmissionid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReviewerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedback(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReady(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScore(value);
      break;
    case 7:
      var value = new proto.ag.GradingBenchmark;
      reader.readMessage(value,proto.ag.GradingBenchmark.deserializeBinaryFromReader);
      msg.addGradingbenchmarks(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEdited(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Review.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Review.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Review} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Review.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSubmissionid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getReviewerid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFeedback();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReady();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getGradingbenchmarksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.ag.GradingBenchmark.serializeBinaryToWriter
    );
  }
  f = message.getEdited();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Review.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 SubmissionID = 2;
 * @return {number}
 */
proto.ag.Review.prototype.getSubmissionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setSubmissionid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 ReviewerID = 3;
 * @return {number}
 */
proto.ag.Review.prototype.getReviewerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setReviewerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string feedback = 4;
 * @return {string}
 */
proto.ag.Review.prototype.getFeedback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setFeedback = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool ready = 5;
 * @return {boolean}
 */
proto.ag.Review.prototype.getReady = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setReady = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint32 score = 6;
 * @return {number}
 */
proto.ag.Review.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated GradingBenchmark gradingBenchmarks = 7;
 * @return {!Array<!proto.ag.GradingBenchmark>}
 */
proto.ag.Review.prototype.getGradingbenchmarksList = function() {
  return /** @type{!Array<!proto.ag.GradingBenchmark>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.GradingBenchmark, 7));
};


/**
 * @param {!Array<!proto.ag.GradingBenchmark>} value
 * @return {!proto.ag.Review} returns this
*/
proto.ag.Review.prototype.setGradingbenchmarksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ag.GradingBenchmark=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.GradingBenchmark}
 */
proto.ag.Review.prototype.addGradingbenchmarks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ag.GradingBenchmark, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.clearGradingbenchmarksList = function() {
  return this.setGradingbenchmarksList([]);
};


/**
 * optional string edited = 8;
 * @return {string}
 */
proto.ag.Review.prototype.getEdited = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Review} returns this
 */
proto.ag.Review.prototype.setEdited = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Reviewers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Reviewers.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Reviewers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Reviewers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Reviewers.toObject = function(includeInstance, msg) {
  var f, obj = {
    reviewersList: jspb.Message.toObjectList(msg.getReviewersList(),
    proto.ag.User.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Reviewers}
 */
proto.ag.Reviewers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Reviewers;
  return proto.ag.Reviewers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Reviewers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Reviewers}
 */
proto.ag.Reviewers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.User;
      reader.readMessage(value,proto.ag.User.deserializeBinaryFromReader);
      msg.addReviewers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Reviewers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Reviewers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Reviewers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Reviewers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReviewersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.User.serializeBinaryToWriter
    );
  }
};


/**
 * repeated User reviewers = 1;
 * @return {!Array<!proto.ag.User>}
 */
proto.ag.Reviewers.prototype.getReviewersList = function() {
  return /** @type{!Array<!proto.ag.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.User, 1));
};


/**
 * @param {!Array<!proto.ag.User>} value
 * @return {!proto.ag.Reviewers} returns this
*/
proto.ag.Reviewers.prototype.setReviewersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.User}
 */
proto.ag.Reviewers.prototype.addReviewers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Reviewers} returns this
 */
proto.ag.Reviewers.prototype.clearReviewersList = function() {
  return this.setReviewersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.ReviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.ReviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.ReviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.ReviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    review: (f = msg.getReview()) && proto.ag.Review.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.ReviewRequest}
 */
proto.ag.ReviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.ReviewRequest;
  return proto.ag.ReviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.ReviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.ReviewRequest}
 */
proto.ag.ReviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var value = new proto.ag.Review;
      reader.readMessage(value,proto.ag.Review.deserializeBinaryFromReader);
      msg.setReview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.ReviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.ReviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.ReviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.ReviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getReview();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.ag.Review.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.ReviewRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.ReviewRequest} returns this
 */
proto.ag.ReviewRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Review review = 2;
 * @return {?proto.ag.Review}
 */
proto.ag.ReviewRequest.prototype.getReview = function() {
  return /** @type{?proto.ag.Review} */ (
    jspb.Message.getWrapperField(this, proto.ag.Review, 2));
};


/**
 * @param {?proto.ag.Review|undefined} value
 * @return {!proto.ag.ReviewRequest} returns this
*/
proto.ag.ReviewRequest.prototype.setReview = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ag.ReviewRequest} returns this
 */
proto.ag.ReviewRequest.prototype.clearReview = function() {
  return this.setReview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ag.ReviewRequest.prototype.hasReview = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.CourseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.CourseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.CourseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.CourseRequest}
 */
proto.ag.CourseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.CourseRequest;
  return proto.ag.CourseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.CourseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.CourseRequest}
 */
proto.ag.CourseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.CourseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.CourseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.CourseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.CourseRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.CourseRequest} returns this
 */
proto.ag.CourseRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.UserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.UserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.UserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.UserRequest}
 */
proto.ag.UserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.UserRequest;
  return proto.ag.UserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.UserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.UserRequest}
 */
proto.ag.UserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.UserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.UserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.UserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 userID = 1;
 * @return {number}
 */
proto.ag.UserRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UserRequest} returns this
 */
proto.ag.UserRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.GetGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.GetGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.GetGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GetGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.GetGroupRequest}
 */
proto.ag.GetGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.GetGroupRequest;
  return proto.ag.GetGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.GetGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.GetGroupRequest}
 */
proto.ag.GetGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.GetGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.GetGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.GetGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GetGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 groupID = 1;
 * @return {number}
 */
proto.ag.GetGroupRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GetGroupRequest} returns this
 */
proto.ag.GetGroupRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.GroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.GroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.GroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.GroupRequest}
 */
proto.ag.GroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.GroupRequest;
  return proto.ag.GroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.GroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.GroupRequest}
 */
proto.ag.GroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.GroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.GroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.GroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.GroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 userID = 1;
 * @return {number}
 */
proto.ag.GroupRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GroupRequest} returns this
 */
proto.ag.GroupRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupID = 2;
 * @return {number}
 */
proto.ag.GroupRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GroupRequest} returns this
 */
proto.ag.GroupRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 courseID = 3;
 * @return {number}
 */
proto.ag.GroupRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.GroupRequest} returns this
 */
proto.ag.GroupRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Provider.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Provider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Provider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Provider.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Provider}
 */
proto.ag.Provider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Provider;
  return proto.ag.Provider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Provider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Provider}
 */
proto.ag.Provider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Provider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Provider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Provider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Provider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.ag.Provider.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Provider} returns this
 */
proto.ag.Provider.prototype.setProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.OrgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.OrgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.OrgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.OrgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgname: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.OrgRequest}
 */
proto.ag.OrgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.OrgRequest;
  return proto.ag.OrgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.OrgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.OrgRequest}
 */
proto.ag.OrgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.OrgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.OrgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.OrgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.OrgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string orgName = 1;
 * @return {string}
 */
proto.ag.OrgRequest.prototype.getOrgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.OrgRequest} returns this
 */
proto.ag.OrgRequest.prototype.setOrgname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Organization.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Organization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Organization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Organization.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    path: jspb.Message.getFieldWithDefault(msg, 2, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentplan: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Organization}
 */
proto.ag.Organization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Organization;
  return proto.ag.Organization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Organization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Organization}
 */
proto.ag.Organization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentplan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Organization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Organization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Organization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Organization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentplan();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 ID = 1;
 * @return {number}
 */
proto.ag.Organization.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Organization} returns this
 */
proto.ag.Organization.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.ag.Organization.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Organization} returns this
 */
proto.ag.Organization.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string avatar = 3;
 * @return {string}
 */
proto.ag.Organization.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Organization} returns this
 */
proto.ag.Organization.prototype.setAvatar = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string paymentPlan = 4;
 * @return {string}
 */
proto.ag.Organization.prototype.getPaymentplan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Organization} returns this
 */
proto.ag.Organization.prototype.setPaymentplan = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Organizations.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Organizations.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Organizations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Organizations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Organizations.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationsList: jspb.Message.toObjectList(msg.getOrganizationsList(),
    proto.ag.Organization.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Organizations}
 */
proto.ag.Organizations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Organizations;
  return proto.ag.Organizations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Organizations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Organizations}
 */
proto.ag.Organizations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ag.Organization;
      reader.readMessage(value,proto.ag.Organization.deserializeBinaryFromReader);
      msg.addOrganizations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Organizations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Organizations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Organizations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Organizations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ag.Organization.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Organization organizations = 1;
 * @return {!Array<!proto.ag.Organization>}
 */
proto.ag.Organizations.prototype.getOrganizationsList = function() {
  return /** @type{!Array<!proto.ag.Organization>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ag.Organization, 1));
};


/**
 * @param {!Array<!proto.ag.Organization>} value
 * @return {!proto.ag.Organizations} returns this
*/
proto.ag.Organizations.prototype.setOrganizationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ag.Organization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ag.Organization}
 */
proto.ag.Organizations.prototype.addOrganizations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ag.Organization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Organizations} returns this
 */
proto.ag.Organizations.prototype.clearOrganizationsList = function() {
  return this.setOrganizationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.EnrollmentRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.EnrollmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.EnrollmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.EnrollmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ignoregroupmembers: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    withactivity: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.EnrollmentRequest}
 */
proto.ag.EnrollmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.EnrollmentRequest;
  return proto.ag.EnrollmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.EnrollmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.EnrollmentRequest}
 */
proto.ag.EnrollmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoregroupmembers(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithactivity(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.ag.Enrollment.UserStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatuses(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.EnrollmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.EnrollmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.EnrollmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getIgnoregroupmembers();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWithactivity();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.EnrollmentRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool ignoreGroupMembers = 2;
 * @return {boolean}
 */
proto.ag.EnrollmentRequest.prototype.getIgnoregroupmembers = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.setIgnoregroupmembers = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool withActivity = 3;
 * @return {boolean}
 */
proto.ag.EnrollmentRequest.prototype.getWithactivity = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.setWithactivity = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * repeated Enrollment.UserStatus statuses = 4;
 * @return {!Array<!proto.ag.Enrollment.UserStatus>}
 */
proto.ag.EnrollmentRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.ag.Enrollment.UserStatus>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.ag.Enrollment.UserStatus>} value
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.ag.Enrollment.UserStatus} value
 * @param {number=} opt_index
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.EnrollmentRequest} returns this
 */
proto.ag.EnrollmentRequest.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.EnrollmentStatusRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.EnrollmentStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.EnrollmentStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.EnrollmentStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statusesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.EnrollmentStatusRequest}
 */
proto.ag.EnrollmentStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.EnrollmentStatusRequest;
  return proto.ag.EnrollmentStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.EnrollmentStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.EnrollmentStatusRequest}
 */
proto.ag.EnrollmentStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.ag.Enrollment.UserStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatuses(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.EnrollmentStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.EnrollmentStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.EnrollmentStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.EnrollmentStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStatusesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional uint64 userID = 1;
 * @return {number}
 */
proto.ag.EnrollmentStatusRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.EnrollmentStatusRequest} returns this
 */
proto.ag.EnrollmentStatusRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Enrollment.UserStatus statuses = 2;
 * @return {!Array<!proto.ag.Enrollment.UserStatus>}
 */
proto.ag.EnrollmentStatusRequest.prototype.getStatusesList = function() {
  return /** @type {!Array<!proto.ag.Enrollment.UserStatus>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.ag.Enrollment.UserStatus>} value
 * @return {!proto.ag.EnrollmentStatusRequest} returns this
 */
proto.ag.EnrollmentStatusRequest.prototype.setStatusesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.ag.Enrollment.UserStatus} value
 * @param {number=} opt_index
 * @return {!proto.ag.EnrollmentStatusRequest} returns this
 */
proto.ag.EnrollmentStatusRequest.prototype.addStatuses = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.EnrollmentStatusRequest} returns this
 */
proto.ag.EnrollmentStatusRequest.prototype.clearStatusesList = function() {
  return this.setStatusesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.SubmissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.SubmissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.SubmissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.SubmissionRequest}
 */
proto.ag.SubmissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.SubmissionRequest;
  return proto.ag.SubmissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.SubmissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.SubmissionRequest}
 */
proto.ag.SubmissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.SubmissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.SubmissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.SubmissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 userID = 1;
 * @return {number}
 */
proto.ag.SubmissionRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionRequest} returns this
 */
proto.ag.SubmissionRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupID = 2;
 * @return {number}
 */
proto.ag.SubmissionRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionRequest} returns this
 */
proto.ag.SubmissionRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 courseID = 3;
 * @return {number}
 */
proto.ag.SubmissionRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionRequest} returns this
 */
proto.ag.SubmissionRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.UpdateSubmissionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.UpdateSubmissionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.UpdateSubmissionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UpdateSubmissionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    submissionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    score: jspb.Message.getFieldWithDefault(msg, 3, 0),
    released: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.UpdateSubmissionRequest}
 */
proto.ag.UpdateSubmissionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.UpdateSubmissionRequest;
  return proto.ag.UpdateSubmissionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.UpdateSubmissionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.UpdateSubmissionRequest}
 */
proto.ag.UpdateSubmissionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSubmissionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReleased(value);
      break;
    case 5:
      var value = /** @type {!proto.ag.Submission.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.UpdateSubmissionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.UpdateSubmissionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.UpdateSubmissionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UpdateSubmissionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmissionid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getReleased();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional uint64 submissionID = 1;
 * @return {number}
 */
proto.ag.UpdateSubmissionRequest.prototype.getSubmissionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionRequest} returns this
 */
proto.ag.UpdateSubmissionRequest.prototype.setSubmissionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 courseID = 2;
 * @return {number}
 */
proto.ag.UpdateSubmissionRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionRequest} returns this
 */
proto.ag.UpdateSubmissionRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 score = 3;
 * @return {number}
 */
proto.ag.UpdateSubmissionRequest.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionRequest} returns this
 */
proto.ag.UpdateSubmissionRequest.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool released = 4;
 * @return {boolean}
 */
proto.ag.UpdateSubmissionRequest.prototype.getReleased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.UpdateSubmissionRequest} returns this
 */
proto.ag.UpdateSubmissionRequest.prototype.setReleased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Submission.Status status = 5;
 * @return {!proto.ag.Submission.Status}
 */
proto.ag.UpdateSubmissionRequest.prototype.getStatus = function() {
  return /** @type {!proto.ag.Submission.Status} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ag.Submission.Status} value
 * @return {!proto.ag.UpdateSubmissionRequest} returns this
 */
proto.ag.UpdateSubmissionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.UpdateSubmissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.UpdateSubmissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.UpdateSubmissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UpdateSubmissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scorelimit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    release: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    approve: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.UpdateSubmissionsRequest}
 */
proto.ag.UpdateSubmissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.UpdateSubmissionsRequest;
  return proto.ag.UpdateSubmissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.UpdateSubmissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.UpdateSubmissionsRequest}
 */
proto.ag.UpdateSubmissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScorelimit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRelease(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApprove(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.UpdateSubmissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.UpdateSubmissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.UpdateSubmissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.UpdateSubmissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getScorelimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getRelease();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getApprove();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.UpdateSubmissionsRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionsRequest} returns this
 */
proto.ag.UpdateSubmissionsRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 assignmentID = 2;
 * @return {number}
 */
proto.ag.UpdateSubmissionsRequest.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionsRequest} returns this
 */
proto.ag.UpdateSubmissionsRequest.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 scoreLimit = 3;
 * @return {number}
 */
proto.ag.UpdateSubmissionsRequest.prototype.getScorelimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.UpdateSubmissionsRequest} returns this
 */
proto.ag.UpdateSubmissionsRequest.prototype.setScorelimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool release = 4;
 * @return {boolean}
 */
proto.ag.UpdateSubmissionsRequest.prototype.getRelease = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.UpdateSubmissionsRequest} returns this
 */
proto.ag.UpdateSubmissionsRequest.prototype.setRelease = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool approve = 5;
 * @return {boolean}
 */
proto.ag.UpdateSubmissionsRequest.prototype.getApprove = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.UpdateSubmissionsRequest} returns this
 */
proto.ag.UpdateSubmissionsRequest.prototype.setApprove = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.SubmissionReviewersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.SubmissionReviewersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.SubmissionReviewersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionReviewersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    submissionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.SubmissionReviewersRequest}
 */
proto.ag.SubmissionReviewersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.SubmissionReviewersRequest;
  return proto.ag.SubmissionReviewersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.SubmissionReviewersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.SubmissionReviewersRequest}
 */
proto.ag.SubmissionReviewersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSubmissionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.SubmissionReviewersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.SubmissionReviewersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.SubmissionReviewersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionReviewersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmissionid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 submissionID = 1;
 * @return {number}
 */
proto.ag.SubmissionReviewersRequest.prototype.getSubmissionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionReviewersRequest} returns this
 */
proto.ag.SubmissionReviewersRequest.prototype.setSubmissionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 courseID = 2;
 * @return {number}
 */
proto.ag.SubmissionReviewersRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionReviewersRequest} returns this
 */
proto.ag.SubmissionReviewersRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.Providers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Providers.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Providers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Providers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Providers.toObject = function(includeInstance, msg) {
  var f, obj = {
    providersList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Providers}
 */
proto.ag.Providers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Providers;
  return proto.ag.Providers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Providers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Providers}
 */
proto.ag.Providers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addProviders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Providers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Providers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Providers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Providers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvidersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string providers = 1;
 * @return {!Array<string>}
 */
proto.ag.Providers.prototype.getProvidersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ag.Providers} returns this
 */
proto.ag.Providers.prototype.setProvidersList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ag.Providers} returns this
 */
proto.ag.Providers.prototype.addProviders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.Providers} returns this
 */
proto.ag.Providers.prototype.clearProvidersList = function() {
  return this.setProvidersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ag.URLRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.URLRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.URLRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.URLRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.URLRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    repotypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.URLRequest}
 */
proto.ag.URLRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.URLRequest;
  return proto.ag.URLRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.URLRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.URLRequest}
 */
proto.ag.URLRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.ag.Repository.Type>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRepotypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.URLRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.URLRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.URLRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.URLRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getRepotypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.URLRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.URLRequest} returns this
 */
proto.ag.URLRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Repository.Type repoTypes = 2;
 * @return {!Array<!proto.ag.Repository.Type>}
 */
proto.ag.URLRequest.prototype.getRepotypesList = function() {
  return /** @type {!Array<!proto.ag.Repository.Type>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.ag.Repository.Type>} value
 * @return {!proto.ag.URLRequest} returns this
 */
proto.ag.URLRequest.prototype.setRepotypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.ag.Repository.Type} value
 * @param {number=} opt_index
 * @return {!proto.ag.URLRequest} returns this
 */
proto.ag.URLRequest.prototype.addRepotypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ag.URLRequest} returns this
 */
proto.ag.URLRequest.prototype.clearRepotypesList = function() {
  return this.setRepotypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.RepositoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.RepositoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.RepositoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RepositoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    groupid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    courseid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.RepositoryRequest}
 */
proto.ag.RepositoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.RepositoryRequest;
  return proto.ag.RepositoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.RepositoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.RepositoryRequest}
 */
proto.ag.RepositoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.RepositoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.RepositoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.RepositoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RepositoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getGroupid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 userID = 1;
 * @return {number}
 */
proto.ag.RepositoryRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RepositoryRequest} returns this
 */
proto.ag.RepositoryRequest.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 groupID = 2;
 * @return {number}
 */
proto.ag.RepositoryRequest.prototype.getGroupid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RepositoryRequest} returns this
 */
proto.ag.RepositoryRequest.prototype.setGroupid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 courseID = 3;
 * @return {number}
 */
proto.ag.RepositoryRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RepositoryRequest} returns this
 */
proto.ag.RepositoryRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Repositories.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Repositories.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Repositories} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Repositories.toObject = function(includeInstance, msg) {
  var f, obj = {
    urlsMap: (f = msg.getUrlsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Repositories}
 */
proto.ag.Repositories.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Repositories;
  return proto.ag.Repositories.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Repositories} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Repositories}
 */
proto.ag.Repositories.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getUrlsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Repositories.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Repositories.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Repositories} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Repositories.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrlsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<string, string> URLs = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.ag.Repositories.prototype.getUrlsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.ag.Repositories} returns this
 */
proto.ag.Repositories.prototype.clearUrlsMap = function() {
  this.getUrlsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.AuthorizationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.AuthorizationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.AuthorizationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.AuthorizationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isauthorized: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.AuthorizationResponse}
 */
proto.ag.AuthorizationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.AuthorizationResponse;
  return proto.ag.AuthorizationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.AuthorizationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.AuthorizationResponse}
 */
proto.ag.AuthorizationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsauthorized(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.AuthorizationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.AuthorizationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.AuthorizationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.AuthorizationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsauthorized();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsAuthorized = 1;
 * @return {boolean}
 */
proto.ag.AuthorizationResponse.prototype.getIsauthorized = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.AuthorizationResponse} returns this
 */
proto.ag.AuthorizationResponse.prototype.setIsauthorized = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Status.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Status.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Status.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Status}
 */
proto.ag.Status.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Status;
  return proto.ag.Status.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Status}
 */
proto.ag.Status.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Status.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Status.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Status.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 Code = 1;
 * @return {number}
 */
proto.ag.Status.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.Status} returns this
 */
proto.ag.Status.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Error = 2;
 * @return {string}
 */
proto.ag.Status.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.Status} returns this
 */
proto.ag.Status.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.SubmissionsForCourseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.SubmissionsForCourseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.SubmissionsForCourseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionsForCourseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    withbuildinfo: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.SubmissionsForCourseRequest}
 */
proto.ag.SubmissionsForCourseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.SubmissionsForCourseRequest;
  return proto.ag.SubmissionsForCourseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.SubmissionsForCourseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.SubmissionsForCourseRequest}
 */
proto.ag.SubmissionsForCourseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var value = /** @type {!proto.ag.SubmissionsForCourseRequest.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithbuildinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.SubmissionsForCourseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.SubmissionsForCourseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.SubmissionsForCourseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.SubmissionsForCourseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWithbuildinfo();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ag.SubmissionsForCourseRequest.Type = {
  ALL: 0,
  INDIVIDUAL: 1,
  GROUP: 2
};

/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.SubmissionsForCourseRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.SubmissionsForCourseRequest} returns this
 */
proto.ag.SubmissionsForCourseRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.ag.SubmissionsForCourseRequest.Type}
 */
proto.ag.SubmissionsForCourseRequest.prototype.getType = function() {
  return /** @type {!proto.ag.SubmissionsForCourseRequest.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.ag.SubmissionsForCourseRequest.Type} value
 * @return {!proto.ag.SubmissionsForCourseRequest} returns this
 */
proto.ag.SubmissionsForCourseRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool withBuildInfo = 3;
 * @return {boolean}
 */
proto.ag.SubmissionsForCourseRequest.prototype.getWithbuildinfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ag.SubmissionsForCourseRequest} returns this
 */
proto.ag.SubmissionsForCourseRequest.prototype.setWithbuildinfo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.RebuildRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.RebuildRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.RebuildRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RebuildRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    submissionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.RebuildRequest}
 */
proto.ag.RebuildRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.RebuildRequest;
  return proto.ag.RebuildRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.RebuildRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.RebuildRequest}
 */
proto.ag.RebuildRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSubmissionid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.RebuildRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.RebuildRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.RebuildRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.RebuildRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubmissionid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 submissionID = 1;
 * @return {number}
 */
proto.ag.RebuildRequest.prototype.getSubmissionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RebuildRequest} returns this
 */
proto.ag.RebuildRequest.prototype.setSubmissionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 assignmentID = 2;
 * @return {number}
 */
proto.ag.RebuildRequest.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.RebuildRequest} returns this
 */
proto.ag.RebuildRequest.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.CourseUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.CourseUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.CourseUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    coursecode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    courseyear: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userlogin: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.CourseUserRequest}
 */
proto.ag.CourseUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.CourseUserRequest;
  return proto.ag.CourseUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.CourseUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.CourseUserRequest}
 */
proto.ag.CourseUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoursecode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCourseyear(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserlogin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.CourseUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.CourseUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.CourseUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.CourseUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoursecode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCourseyear();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getUserlogin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string courseCode = 1;
 * @return {string}
 */
proto.ag.CourseUserRequest.prototype.getCoursecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.CourseUserRequest} returns this
 */
proto.ag.CourseUserRequest.prototype.setCoursecode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 courseYear = 2;
 * @return {number}
 */
proto.ag.CourseUserRequest.prototype.getCourseyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.CourseUserRequest} returns this
 */
proto.ag.CourseUserRequest.prototype.setCourseyear = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string userLogin = 3;
 * @return {string}
 */
proto.ag.CourseUserRequest.prototype.getUserlogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ag.CourseUserRequest} returns this
 */
proto.ag.CourseUserRequest.prototype.setUserlogin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.AssignmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.AssignmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.AssignmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.AssignmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    courseid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assignmentid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.AssignmentRequest}
 */
proto.ag.AssignmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.AssignmentRequest;
  return proto.ag.AssignmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.AssignmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.AssignmentRequest}
 */
proto.ag.AssignmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCourseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAssignmentid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.AssignmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.AssignmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.AssignmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.AssignmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCourseid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssignmentid();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 courseID = 1;
 * @return {number}
 */
proto.ag.AssignmentRequest.prototype.getCourseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.AssignmentRequest} returns this
 */
proto.ag.AssignmentRequest.prototype.setCourseid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 assignmentID = 2;
 * @return {number}
 */
proto.ag.AssignmentRequest.prototype.getAssignmentid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ag.AssignmentRequest} returns this
 */
proto.ag.AssignmentRequest.prototype.setAssignmentid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ag.Void.prototype.toObject = function(opt_includeInstance) {
  return proto.ag.Void.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ag.Void} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Void.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ag.Void}
 */
proto.ag.Void.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ag.Void;
  return proto.ag.Void.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ag.Void} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ag.Void}
 */
proto.ag.Void.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ag.Void.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ag.Void.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ag.Void} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ag.Void.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.ag);
