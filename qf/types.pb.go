// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: qf/types.proto

package qf

import (
	_ "github.com/alta/protopatch/patch/gopb"
	score "github.com/quickfeed/quickfeed/kit/score"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Group_GroupStatus int32

const (
	Group_PENDING  Group_GroupStatus = 0
	Group_APPROVED Group_GroupStatus = 1
)

// Enum value maps for Group_GroupStatus.
var (
	Group_GroupStatus_name = map[int32]string{
		0: "PENDING",
		1: "APPROVED",
	}
	Group_GroupStatus_value = map[string]int32{
		"PENDING":  0,
		"APPROVED": 1,
	}
)

func (x Group_GroupStatus) Enum() *Group_GroupStatus {
	p := new(Group_GroupStatus)
	*p = x
	return p
}

func (x Group_GroupStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Group_GroupStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[0].Descriptor()
}

func (Group_GroupStatus) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[0]
}

func (x Group_GroupStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Group_GroupStatus.Descriptor instead.
func (Group_GroupStatus) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{2, 0}
}

type Repository_Type int32

const (
	Repository_NONE        Repository_Type = 0
	Repository_INFO        Repository_Type = 1
	Repository_ASSIGNMENTS Repository_Type = 2
	Repository_TESTS       Repository_Type = 3
	Repository_USER        Repository_Type = 4
	Repository_GROUP       Repository_Type = 5
)

// Enum value maps for Repository_Type.
var (
	Repository_Type_name = map[int32]string{
		0: "NONE",
		1: "INFO",
		2: "ASSIGNMENTS",
		3: "TESTS",
		4: "USER",
		5: "GROUP",
	}
	Repository_Type_value = map[string]int32{
		"NONE":        0,
		"INFO":        1,
		"ASSIGNMENTS": 2,
		"TESTS":       3,
		"USER":        4,
		"GROUP":       5,
	}
)

func (x Repository_Type) Enum() *Repository_Type {
	p := new(Repository_Type)
	*p = x
	return p
}

func (x Repository_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Repository_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[1].Descriptor()
}

func (Repository_Type) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[1]
}

func (x Repository_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Repository_Type.Descriptor instead.
func (Repository_Type) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{6, 0}
}

type Enrollment_UserStatus int32

const (
	Enrollment_NONE    Enrollment_UserStatus = 0
	Enrollment_PENDING Enrollment_UserStatus = 1
	Enrollment_STUDENT Enrollment_UserStatus = 2
	Enrollment_TEACHER Enrollment_UserStatus = 3
)

// Enum value maps for Enrollment_UserStatus.
var (
	Enrollment_UserStatus_name = map[int32]string{
		0: "NONE",
		1: "PENDING",
		2: "STUDENT",
		3: "TEACHER",
	}
	Enrollment_UserStatus_value = map[string]int32{
		"NONE":    0,
		"PENDING": 1,
		"STUDENT": 2,
		"TEACHER": 3,
	}
)

func (x Enrollment_UserStatus) Enum() *Enrollment_UserStatus {
	p := new(Enrollment_UserStatus)
	*p = x
	return p
}

func (x Enrollment_UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enrollment_UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[2].Descriptor()
}

func (Enrollment_UserStatus) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[2]
}

func (x Enrollment_UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enrollment_UserStatus.Descriptor instead.
func (Enrollment_UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{7, 0}
}

type Enrollment_DisplayState int32

const (
	Enrollment_UNSET    Enrollment_DisplayState = 0
	Enrollment_HIDDEN   Enrollment_DisplayState = 1
	Enrollment_VISIBLE  Enrollment_DisplayState = 2
	Enrollment_FAVORITE Enrollment_DisplayState = 3
)

// Enum value maps for Enrollment_DisplayState.
var (
	Enrollment_DisplayState_name = map[int32]string{
		0: "UNSET",
		1: "HIDDEN",
		2: "VISIBLE",
		3: "FAVORITE",
	}
	Enrollment_DisplayState_value = map[string]int32{
		"UNSET":    0,
		"HIDDEN":   1,
		"VISIBLE":  2,
		"FAVORITE": 3,
	}
)

func (x Enrollment_DisplayState) Enum() *Enrollment_DisplayState {
	p := new(Enrollment_DisplayState)
	*p = x
	return p
}

func (x Enrollment_DisplayState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enrollment_DisplayState) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[3].Descriptor()
}

func (Enrollment_DisplayState) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[3]
}

func (x Enrollment_DisplayState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enrollment_DisplayState.Descriptor instead.
func (Enrollment_DisplayState) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{7, 1}
}

type PullRequest_Stage int32

const (
	PullRequest_NONE     PullRequest_Stage = 0
	PullRequest_DRAFT    PullRequest_Stage = 1
	PullRequest_REVIEW   PullRequest_Stage = 2
	PullRequest_APPROVED PullRequest_Stage = 3
)

// Enum value maps for PullRequest_Stage.
var (
	PullRequest_Stage_name = map[int32]string{
		0: "NONE",
		1: "DRAFT",
		2: "REVIEW",
		3: "APPROVED",
	}
	PullRequest_Stage_value = map[string]int32{
		"NONE":     0,
		"DRAFT":    1,
		"REVIEW":   2,
		"APPROVED": 3,
	}
)

func (x PullRequest_Stage) Enum() *PullRequest_Stage {
	p := new(PullRequest_Stage)
	*p = x
	return p
}

func (x PullRequest_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PullRequest_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[4].Descriptor()
}

func (PullRequest_Stage) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[4]
}

func (x PullRequest_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PullRequest_Stage.Descriptor instead.
func (PullRequest_Stage) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{13, 0}
}

type Submission_Status int32

const (
	Submission_NONE     Submission_Status = 0
	Submission_APPROVED Submission_Status = 1
	Submission_REJECTED Submission_Status = 2
	Submission_REVISION Submission_Status = 3
)

// Enum value maps for Submission_Status.
var (
	Submission_Status_name = map[int32]string{
		0: "NONE",
		1: "APPROVED",
		2: "REJECTED",
		3: "REVISION",
	}
	Submission_Status_value = map[string]int32{
		"NONE":     0,
		"APPROVED": 1,
		"REJECTED": 2,
		"REVISION": 3,
	}
)

func (x Submission_Status) Enum() *Submission_Status {
	p := new(Submission_Status)
	*p = x
	return p
}

func (x Submission_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Submission_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[5].Descriptor()
}

func (Submission_Status) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[5]
}

func (x Submission_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Submission_Status.Descriptor instead.
func (Submission_Status) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{15, 0}
}

type GradingCriterion_Grade int32

const (
	GradingCriterion_NONE   GradingCriterion_Grade = 0
	GradingCriterion_FAILED GradingCriterion_Grade = 1
	GradingCriterion_PASSED GradingCriterion_Grade = 2
)

// Enum value maps for GradingCriterion_Grade.
var (
	GradingCriterion_Grade_name = map[int32]string{
		0: "NONE",
		1: "FAILED",
		2: "PASSED",
	}
	GradingCriterion_Grade_value = map[string]int32{
		"NONE":   0,
		"FAILED": 1,
		"PASSED": 2,
	}
)

func (x GradingCriterion_Grade) Enum() *GradingCriterion_Grade {
	p := new(GradingCriterion_Grade)
	*p = x
	return p
}

func (x GradingCriterion_Grade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GradingCriterion_Grade) Descriptor() protoreflect.EnumDescriptor {
	return file_qf_types_proto_enumTypes[6].Descriptor()
}

func (GradingCriterion_Grade) Type() protoreflect.EnumType {
	return &file_qf_types_proto_enumTypes[6]
}

func (x GradingCriterion_Grade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GradingCriterion_Grade.Descriptor instead.
func (GradingCriterion_Grade) EnumDescriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{20, 0}
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IsAdmin       bool                   `protobuf:"varint,2,opt,name=IsAdmin,proto3" json:"IsAdmin,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	StudentID     string                 `protobuf:"bytes,4,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	AvatarURL     string                 `protobuf:"bytes,6,opt,name=AvatarURL,proto3" json:"AvatarURL,omitempty"`
	Login         string                 `protobuf:"bytes,7,opt,name=Login,proto3" json:"Login,omitempty"`
	UpdateToken   bool                   `protobuf:"varint,8,opt,name=UpdateToken,proto3" json:"UpdateToken,omitempty"`   // Filter; True if user's JWT token needs to be updated.
	ScmRemoteID   uint64                 `protobuf:"varint,9,opt,name=ScmRemoteID,proto3" json:"ScmRemoteID,omitempty"`   // Filter; The user's ID on the remote provider.
	RefreshToken  string                 `protobuf:"bytes,10,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"` // Filter; The user's refresh token that may be exchanged for an access token.
	Enrollments   []*Enrollment          `protobuf:"bytes,11,rep,name=Enrollments,proto3" json:"Enrollments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_qf_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetUpdateToken() bool {
	if x != nil {
		return x.UpdateToken
	}
	return false
}

func (x *User) GetScmRemoteID() uint64 {
	if x != nil {
		return x.ScmRemoteID
	}
	return 0
}

func (x *User) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *User) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

type Users struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Users) Reset() {
	*x = Users{}
	mi := &file_qf_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{1}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" gorm:"uniqueIndex:group"`
	CourseID      uint64                 `protobuf:"varint,3,opt,name=courseID,proto3" json:"courseID,omitempty" gorm:"uniqueIndex:group"`
	Status        Group_GroupStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=qf.Group_GroupStatus" json:"status,omitempty"`
	Users         []*User                `protobuf:"bytes,6,rep,name=users,proto3" json:"users,omitempty" gorm:"many2many:group_users;"`
	Enrollments   []*Enrollment          `protobuf:"bytes,7,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_qf_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{2}
}

func (x *Group) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetCourseID() uint64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Group) GetStatus() Group_GroupStatus {
	if x != nil {
		return x.Status
	}
	return Group_PENDING
}

func (x *Group) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Group) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

type Groups struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*Group               `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Groups) Reset() {
	*x = Groups{}
	mi := &file_qf_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Groups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Groups) ProtoMessage() {}

func (x *Groups) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Groups.ProtoReflect.Descriptor instead.
func (*Groups) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{3}
}

func (x *Groups) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Course struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ID                  uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CourseCreatorID     uint64                 `protobuf:"varint,2,opt,name=courseCreatorID,proto3" json:"courseCreatorID,omitempty"`
	Name                string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code                string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty" gorm:"uniqueIndex:course"`
	Year                uint32                 `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty" gorm:"uniqueIndex:course"`
	Tag                 string                 `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	ScmOrganizationID   uint64                 `protobuf:"varint,8,opt,name=ScmOrganizationID,proto3" json:"ScmOrganizationID,omitempty"`
	ScmOrganizationName string                 `protobuf:"bytes,9,opt,name=ScmOrganizationName,proto3" json:"ScmOrganizationName,omitempty"` // The organization's SCM name, e.g., dat520-2020.
	SlipDays            uint32                 `protobuf:"varint,10,opt,name=slipDays,proto3" json:"slipDays,omitempty"`
	DockerfileDigest    string                 `protobuf:"bytes,11,opt,name=DockerfileDigest,proto3" json:"DockerfileDigest,omitempty"` // Digest of the dockerfile used to build the course's docker image.
	Enrolled            Enrollment_UserStatus  `protobuf:"varint,12,opt,name=enrolled,proto3,enum=qf.Enrollment_UserStatus" json:"enrolled,omitempty" gorm:"-"`
	Enrollments         []*Enrollment          `protobuf:"bytes,13,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	Assignments         []*Assignment          `protobuf:"bytes,14,rep,name=assignments,proto3" json:"assignments,omitempty"`
	Groups              []*Group               `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Course) Reset() {
	*x = Course{}
	mi := &file_qf_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{4}
}

func (x *Course) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Course) GetCourseCreatorID() uint64 {
	if x != nil {
		return x.CourseCreatorID
	}
	return 0
}

func (x *Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Course) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Course) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Course) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Course) GetScmOrganizationID() uint64 {
	if x != nil {
		return x.ScmOrganizationID
	}
	return 0
}

func (x *Course) GetScmOrganizationName() string {
	if x != nil {
		return x.ScmOrganizationName
	}
	return ""
}

func (x *Course) GetSlipDays() uint32 {
	if x != nil {
		return x.SlipDays
	}
	return 0
}

func (x *Course) GetDockerfileDigest() string {
	if x != nil {
		return x.DockerfileDigest
	}
	return ""
}

func (x *Course) GetEnrolled() Enrollment_UserStatus {
	if x != nil {
		return x.Enrolled
	}
	return Enrollment_NONE
}

func (x *Course) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

func (x *Course) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *Course) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Courses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Courses       []*Course              `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Courses) Reset() {
	*x = Courses{}
	mi := &file_qf_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Courses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Courses) ProtoMessage() {}

func (x *Courses) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Courses.ProtoReflect.Descriptor instead.
func (*Courses) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{5}
}

func (x *Courses) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type Repository struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ID                uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ScmOrganizationID uint64                 `protobuf:"varint,2,opt,name=ScmOrganizationID,proto3" json:"ScmOrganizationID,omitempty" gorm:"uniqueIndex:repository"`
	ScmRepositoryID   uint64                 `protobuf:"varint,3,opt,name=ScmRepositoryID,proto3" json:"ScmRepositoryID,omitempty"` // ID of a github repository
	UserID            uint64                 `protobuf:"varint,4,opt,name=userID,proto3" json:"userID,omitempty" gorm:"uniqueIndex:repository"`
	GroupID           uint64                 `protobuf:"varint,5,opt,name=groupID,proto3" json:"groupID,omitempty" gorm:"uniqueIndex:repository"`
	HTMLURL           string                 `protobuf:"bytes,6,opt,name=HTMLURL,proto3" json:"HTMLURL,omitempty"`
	RepoType          Repository_Type        `protobuf:"varint,7,opt,name=repoType,proto3,enum=qf.Repository_Type" json:"repoType,omitempty" gorm:"uniqueIndex:repository"`
	Issues            []*Issue               `protobuf:"bytes,8,rep,name=issues,proto3" json:"issues,omitempty"` // Issues associated with this repository
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Repository) Reset() {
	*x = Repository{}
	mi := &file_qf_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{6}
}

func (x *Repository) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Repository) GetScmOrganizationID() uint64 {
	if x != nil {
		return x.ScmOrganizationID
	}
	return 0
}

func (x *Repository) GetScmRepositoryID() uint64 {
	if x != nil {
		return x.ScmRepositoryID
	}
	return 0
}

func (x *Repository) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Repository) GetGroupID() uint64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *Repository) GetHTMLURL() string {
	if x != nil {
		return x.HTMLURL
	}
	return ""
}

func (x *Repository) GetRepoType() Repository_Type {
	if x != nil {
		return x.RepoType
	}
	return Repository_NONE
}

func (x *Repository) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type Enrollment struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	ID                uint64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CourseID          uint64                  `protobuf:"varint,2,opt,name=courseID,proto3" json:"courseID,omitempty" gorm:"uniqueIndex:enrollment"`
	UserID            uint64                  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty" gorm:"uniqueIndex:enrollment"`
	GroupID           uint64                  `protobuf:"varint,4,opt,name=groupID,proto3" json:"groupID,omitempty"`
	User              *User                   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Course            *Course                 `protobuf:"bytes,6,opt,name=course,proto3" json:"course,omitempty"`
	Group             *Group                  `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	Status            Enrollment_UserStatus   `protobuf:"varint,8,opt,name=status,proto3,enum=qf.Enrollment_UserStatus" json:"status,omitempty"`
	State             Enrollment_DisplayState `protobuf:"varint,9,opt,name=state,proto3,enum=qf.Enrollment_DisplayState" json:"state,omitempty"`
	SlipDaysRemaining uint32                  `protobuf:"varint,10,opt,name=slipDaysRemaining,proto3" json:"slipDaysRemaining,omitempty" gorm:"-"`
	LastActivityDate  *timestamppb.Timestamp  `protobuf:"bytes,11,opt,name=lastActivityDate,proto3" json:"lastActivityDate,omitempty" gorm:"serializer:timestamp;type:datetime"`
	TotalApproved     uint64                  `protobuf:"varint,12,opt,name=totalApproved,proto3" json:"totalApproved,omitempty"`
	UsedSlipDays      []*UsedSlipDays         `protobuf:"bytes,13,rep,name=usedSlipDays,proto3" json:"usedSlipDays,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Enrollment) Reset() {
	*x = Enrollment{}
	mi := &file_qf_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Enrollment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enrollment) ProtoMessage() {}

func (x *Enrollment) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enrollment.ProtoReflect.Descriptor instead.
func (*Enrollment) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{7}
}

func (x *Enrollment) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Enrollment) GetCourseID() uint64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Enrollment) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Enrollment) GetGroupID() uint64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *Enrollment) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Enrollment) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *Enrollment) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Enrollment) GetStatus() Enrollment_UserStatus {
	if x != nil {
		return x.Status
	}
	return Enrollment_NONE
}

func (x *Enrollment) GetState() Enrollment_DisplayState {
	if x != nil {
		return x.State
	}
	return Enrollment_UNSET
}

func (x *Enrollment) GetSlipDaysRemaining() uint32 {
	if x != nil {
		return x.SlipDaysRemaining
	}
	return 0
}

func (x *Enrollment) GetLastActivityDate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivityDate
	}
	return nil
}

func (x *Enrollment) GetTotalApproved() uint64 {
	if x != nil {
		return x.TotalApproved
	}
	return 0
}

func (x *Enrollment) GetUsedSlipDays() []*UsedSlipDays {
	if x != nil {
		return x.UsedSlipDays
	}
	return nil
}

type UsedSlipDays struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	EnrollmentID  uint64                 `protobuf:"varint,2,opt,name=enrollmentID,proto3" json:"enrollmentID,omitempty"`
	AssignmentID  uint64                 `protobuf:"varint,3,opt,name=assignmentID,proto3" json:"assignmentID,omitempty"`
	UsedDays      uint32                 `protobuf:"varint,4,opt,name=usedDays,proto3" json:"usedDays,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsedSlipDays) Reset() {
	*x = UsedSlipDays{}
	mi := &file_qf_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsedSlipDays) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsedSlipDays) ProtoMessage() {}

func (x *UsedSlipDays) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsedSlipDays.ProtoReflect.Descriptor instead.
func (*UsedSlipDays) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{8}
}

func (x *UsedSlipDays) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UsedSlipDays) GetEnrollmentID() uint64 {
	if x != nil {
		return x.EnrollmentID
	}
	return 0
}

func (x *UsedSlipDays) GetAssignmentID() uint64 {
	if x != nil {
		return x.AssignmentID
	}
	return 0
}

func (x *UsedSlipDays) GetUsedDays() uint32 {
	if x != nil {
		return x.UsedDays
	}
	return 0
}

type Enrollments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enrollments   []*Enrollment          `protobuf:"bytes,1,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Enrollments) Reset() {
	*x = Enrollments{}
	mi := &file_qf_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Enrollments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enrollments) ProtoMessage() {}

func (x *Enrollments) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enrollments.ProtoReflect.Descriptor instead.
func (*Enrollments) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{9}
}

func (x *Enrollments) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

type Assignment struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ID                uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CourseID          uint64                 `protobuf:"varint,2,opt,name=CourseID,proto3" json:"CourseID,omitempty"` // foreign key
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Deadline          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty" gorm:"serializer:timestamp;type:datetime"`
	AutoApprove       bool                   `protobuf:"varint,5,opt,name=autoApprove,proto3" json:"autoApprove,omitempty"`
	Order             uint32                 `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	IsGroupLab        bool                   `protobuf:"varint,7,opt,name=isGroupLab,proto3" json:"isGroupLab,omitempty"`
	ScoreLimit        uint32                 `protobuf:"varint,8,opt,name=scoreLimit,proto3" json:"scoreLimit,omitempty"`               // minimal score limit for auto approval
	Reviewers         uint32                 `protobuf:"varint,9,opt,name=reviewers,proto3" json:"reviewers,omitempty"`                 // number of reviewers that will review submissions for this assignment
	ContainerTimeout  uint32                 `protobuf:"varint,10,opt,name=containerTimeout,proto3" json:"containerTimeout,omitempty"`  // container timeout for this assignment
	Submissions       []*Submission          `protobuf:"bytes,11,rep,name=submissions,proto3" json:"submissions,omitempty"`             // submissions produced for this assignment
	Tasks             []*Task                `protobuf:"bytes,12,rep,name=tasks,proto3" json:"tasks,omitempty"`                         // tasks associated with this assignment
	GradingBenchmarks []*GradingBenchmark    `protobuf:"bytes,13,rep,name=gradingBenchmarks,proto3" json:"gradingBenchmarks,omitempty"` // grading benchmarks for this assignment
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	mi := &file_qf_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{10}
}

func (x *Assignment) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Assignment) GetCourseID() uint64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Assignment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Assignment) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *Assignment) GetAutoApprove() bool {
	if x != nil {
		return x.AutoApprove
	}
	return false
}

func (x *Assignment) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Assignment) GetIsGroupLab() bool {
	if x != nil {
		return x.IsGroupLab
	}
	return false
}

func (x *Assignment) GetScoreLimit() uint32 {
	if x != nil {
		return x.ScoreLimit
	}
	return 0
}

func (x *Assignment) GetReviewers() uint32 {
	if x != nil {
		return x.Reviewers
	}
	return 0
}

func (x *Assignment) GetContainerTimeout() uint32 {
	if x != nil {
		return x.ContainerTimeout
	}
	return 0
}

func (x *Assignment) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *Assignment) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Assignment) GetGradingBenchmarks() []*GradingBenchmark {
	if x != nil {
		return x.GradingBenchmarks
	}
	return nil
}

type Task struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ID              uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AssignmentID    uint64                 `protobuf:"varint,2,opt,name=assignmentID,proto3" json:"assignmentID,omitempty"` // foreign key
	AssignmentOrder uint32                 `protobuf:"varint,3,opt,name=assignmentOrder,proto3" json:"assignmentOrder,omitempty"`
	Title           string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Body            string                 `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Name            string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Issues          []*Issue               `protobuf:"bytes,7,rep,name=issues,proto3" json:"issues,omitempty"` // Issues that use this task as a benchmark
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_qf_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{11}
}

func (x *Task) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Task) GetAssignmentID() uint64 {
	if x != nil {
		return x.AssignmentID
	}
	return 0
}

func (x *Task) GetAssignmentOrder() uint32 {
	if x != nil {
		return x.AssignmentOrder
	}
	return 0
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetIssues() []*Issue {
	if x != nil {
		return x.Issues
	}
	return nil
}

type Issue struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ID             uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	RepositoryID   uint64                 `protobuf:"varint,2,opt,name=repositoryID,proto3" json:"repositoryID,omitempty"`     // Represents the internal ID of a repository
	TaskID         uint64                 `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`                 // Task that this issue draws its content from
	ScmIssueNumber uint64                 `protobuf:"varint,4,opt,name=ScmIssueNumber,proto3" json:"ScmIssueNumber,omitempty"` // Issue number on scm. Needed for associating db issue with scm issue
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Issue) Reset() {
	*x = Issue{}
	mi := &file_qf_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{12}
}

func (x *Issue) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Issue) GetRepositoryID() uint64 {
	if x != nil {
		return x.RepositoryID
	}
	return 0
}

func (x *Issue) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Issue) GetScmIssueNumber() uint64 {
	if x != nil {
		return x.ScmIssueNumber
	}
	return 0
}

type PullRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ID              uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ScmRepositoryID uint64                 `protobuf:"varint,2,opt,name=ScmRepositoryID,proto3" json:"ScmRepositoryID,omitempty"` // Represents the scm repository ID
	TaskID          uint64                 `protobuf:"varint,3,opt,name=taskID,proto3" json:"taskID,omitempty"`                   // Foreign key
	IssueID         uint64                 `protobuf:"varint,4,opt,name=issueID,proto3" json:"issueID,omitempty"`                 // Foreign key
	UserID          uint64                 `protobuf:"varint,5,opt,name=userID,proto3" json:"userID,omitempty"`                   // The user who owns this PR
	ScmCommentID    uint64                 `protobuf:"varint,6,opt,name=ScmCommentID,proto3" json:"ScmCommentID,omitempty"`       // Scm ID of the comment used for automatic feedback
	SourceBranch    string                 `protobuf:"bytes,7,opt,name=sourceBranch,proto3" json:"sourceBranch,omitempty"`        // The source branch for this pull request
	Number          uint64                 `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`                   // Pull request number
	Stage           PullRequest_Stage      `protobuf:"varint,9,opt,name=stage,proto3,enum=qf.PullRequest_Stage" json:"stage,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PullRequest) Reset() {
	*x = PullRequest{}
	mi := &file_qf_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullRequest) ProtoMessage() {}

func (x *PullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullRequest.ProtoReflect.Descriptor instead.
func (*PullRequest) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{13}
}

func (x *PullRequest) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PullRequest) GetScmRepositoryID() uint64 {
	if x != nil {
		return x.ScmRepositoryID
	}
	return 0
}

func (x *PullRequest) GetTaskID() uint64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *PullRequest) GetIssueID() uint64 {
	if x != nil {
		return x.IssueID
	}
	return 0
}

func (x *PullRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PullRequest) GetScmCommentID() uint64 {
	if x != nil {
		return x.ScmCommentID
	}
	return 0
}

func (x *PullRequest) GetSourceBranch() string {
	if x != nil {
		return x.SourceBranch
	}
	return ""
}

func (x *PullRequest) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *PullRequest) GetStage() PullRequest_Stage {
	if x != nil {
		return x.Stage
	}
	return PullRequest_NONE
}

type Assignments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assignments   []*Assignment          `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Assignments) Reset() {
	*x = Assignments{}
	mi := &file_qf_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignments) ProtoMessage() {}

func (x *Assignments) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignments.ProtoReflect.Descriptor instead.
func (*Assignments) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{14}
}

func (x *Assignments) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	AssignmentID  uint64                 `protobuf:"varint,2,opt,name=AssignmentID,proto3" json:"AssignmentID,omitempty"` // foreign key
	UserID        uint64                 `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID       uint64                 `protobuf:"varint,4,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Score         uint32                 `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	CommitHash    string                 `protobuf:"bytes,6,opt,name=commitHash,proto3" json:"commitHash,omitempty"`
	Released      bool                   `protobuf:"varint,7,opt,name=released,proto3" json:"released,omitempty"` // true => feedback is visible to the student or group members
	Grades        []*Grade               `protobuf:"bytes,8,rep,name=Grades,proto3" json:"Grades,omitempty"`
	ApprovedDate  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=approvedDate,proto3" json:"approvedDate,omitempty" gorm:"serializer:timestamp;type:datetime"`
	Reviews       []*Review              `protobuf:"bytes,10,rep,name=reviews,proto3" json:"reviews,omitempty"`     // reviews produced for this submission
	BuildInfo     *score.BuildInfo       `protobuf:"bytes,11,opt,name=BuildInfo,proto3" json:"BuildInfo,omitempty"` // build info for tests
	Scores        []*score.Score         `protobuf:"bytes,12,rep,name=Scores,proto3" json:"Scores,omitempty"`       // list of scores for different tests
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_qf_types_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{15}
}

func (x *Submission) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Submission) GetAssignmentID() uint64 {
	if x != nil {
		return x.AssignmentID
	}
	return 0
}

func (x *Submission) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Submission) GetGroupID() uint64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *Submission) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Submission) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *Submission) GetReleased() bool {
	if x != nil {
		return x.Released
	}
	return false
}

func (x *Submission) GetGrades() []*Grade {
	if x != nil {
		return x.Grades
	}
	return nil
}

func (x *Submission) GetApprovedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedDate
	}
	return nil
}

func (x *Submission) GetReviews() []*Review {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *Submission) GetBuildInfo() *score.BuildInfo {
	if x != nil {
		return x.BuildInfo
	}
	return nil
}

func (x *Submission) GetScores() []*score.Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

type Submissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submissions   []*Submission          `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Submissions) Reset() {
	*x = Submissions{}
	mi := &file_qf_types_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submissions) ProtoMessage() {}

func (x *Submissions) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submissions.ProtoReflect.Descriptor instead.
func (*Submissions) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{16}
}

func (x *Submissions) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type Grade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionID  uint64                 `protobuf:"varint,1,opt,name=SubmissionID,proto3" json:"SubmissionID,omitempty" gorm:"uniqueIndex:grade"`
	UserID        uint64                 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty" gorm:"uniqueIndex:grade"`
	Status        Submission_Status      `protobuf:"varint,3,opt,name=Status,proto3,enum=qf.Submission_Status" json:"Status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Grade) Reset() {
	*x = Grade{}
	mi := &file_qf_types_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Grade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grade) ProtoMessage() {}

func (x *Grade) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grade.ProtoReflect.Descriptor instead.
func (*Grade) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{17}
}

func (x *Grade) GetSubmissionID() uint64 {
	if x != nil {
		return x.SubmissionID
	}
	return 0
}

func (x *Grade) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Grade) GetStatus() Submission_Status {
	if x != nil {
		return x.Status
	}
	return Submission_NONE
}

type GradingBenchmark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CourseID      uint64                 `protobuf:"varint,2,opt,name=CourseID,proto3" json:"CourseID,omitempty"`         // foreign key
	AssignmentID  uint64                 `protobuf:"varint,3,opt,name=AssignmentID,proto3" json:"AssignmentID,omitempty"` // foreign key
	ReviewID      uint64                 `protobuf:"varint,4,opt,name=ReviewID,proto3" json:"ReviewID,omitempty"`         // foreign key
	Heading       string                 `protobuf:"bytes,5,opt,name=heading,proto3" json:"heading,omitempty"`
	Comment       string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Criteria      []*GradingCriterion    `protobuf:"bytes,7,rep,name=criteria,proto3" json:"criteria,omitempty" gorm:"foreignKey:BenchmarkID"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GradingBenchmark) Reset() {
	*x = GradingBenchmark{}
	mi := &file_qf_types_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GradingBenchmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradingBenchmark) ProtoMessage() {}

func (x *GradingBenchmark) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradingBenchmark.ProtoReflect.Descriptor instead.
func (*GradingBenchmark) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{18}
}

func (x *GradingBenchmark) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GradingBenchmark) GetCourseID() uint64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *GradingBenchmark) GetAssignmentID() uint64 {
	if x != nil {
		return x.AssignmentID
	}
	return 0
}

func (x *GradingBenchmark) GetReviewID() uint64 {
	if x != nil {
		return x.ReviewID
	}
	return 0
}

func (x *GradingBenchmark) GetHeading() string {
	if x != nil {
		return x.Heading
	}
	return ""
}

func (x *GradingBenchmark) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GradingBenchmark) GetCriteria() []*GradingCriterion {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type Benchmarks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Benchmarks    []*GradingBenchmark    `protobuf:"bytes,1,rep,name=benchmarks,proto3" json:"benchmarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Benchmarks) Reset() {
	*x = Benchmarks{}
	mi := &file_qf_types_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Benchmarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Benchmarks) ProtoMessage() {}

func (x *Benchmarks) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Benchmarks.ProtoReflect.Descriptor instead.
func (*Benchmarks) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{19}
}

func (x *Benchmarks) GetBenchmarks() []*GradingBenchmark {
	if x != nil {
		return x.Benchmarks
	}
	return nil
}

type GradingCriterion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BenchmarkID   uint64                 `protobuf:"varint,2,opt,name=BenchmarkID,proto3" json:"BenchmarkID,omitempty"` // foreign key
	CourseID      uint64                 `protobuf:"varint,3,opt,name=CourseID,proto3" json:"CourseID,omitempty"`       // foreign key
	Points        uint64                 `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Grade         GradingCriterion_Grade `protobuf:"varint,6,opt,name=grade,proto3,enum=qf.GradingCriterion_Grade" json:"grade,omitempty"`
	Comment       string                 `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GradingCriterion) Reset() {
	*x = GradingCriterion{}
	mi := &file_qf_types_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GradingCriterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradingCriterion) ProtoMessage() {}

func (x *GradingCriterion) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradingCriterion.ProtoReflect.Descriptor instead.
func (*GradingCriterion) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{20}
}

func (x *GradingCriterion) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GradingCriterion) GetBenchmarkID() uint64 {
	if x != nil {
		return x.BenchmarkID
	}
	return 0
}

func (x *GradingCriterion) GetCourseID() uint64 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *GradingCriterion) GetPoints() uint64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *GradingCriterion) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GradingCriterion) GetGrade() GradingCriterion_Grade {
	if x != nil {
		return x.Grade
	}
	return GradingCriterion_NONE
}

func (x *GradingCriterion) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type Review struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ID                uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SubmissionID      uint64                 `protobuf:"varint,2,opt,name=SubmissionID,proto3" json:"SubmissionID,omitempty"` // foreign key
	ReviewerID        uint64                 `protobuf:"varint,3,opt,name=ReviewerID,proto3" json:"ReviewerID,omitempty"`     // UserID of the reviewer
	Feedback          string                 `protobuf:"bytes,4,opt,name=feedback,proto3" json:"feedback,omitempty"`
	Ready             bool                   `protobuf:"varint,5,opt,name=ready,proto3" json:"ready,omitempty"`
	Score             uint32                 `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	GradingBenchmarks []*GradingBenchmark    `protobuf:"bytes,7,rep,name=gradingBenchmarks,proto3" json:"gradingBenchmarks,omitempty" gorm:"foreignKey:ReviewID"`
	Edited            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=edited,proto3" json:"edited,omitempty" gorm:"serializer:timestamp;type:datetime"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_qf_types_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_qf_types_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_qf_types_proto_rawDescGZIP(), []int{21}
}

func (x *Review) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Review) GetSubmissionID() uint64 {
	if x != nil {
		return x.SubmissionID
	}
	return 0
}

func (x *Review) GetReviewerID() uint64 {
	if x != nil {
		return x.ReviewerID
	}
	return 0
}

func (x *Review) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

func (x *Review) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *Review) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Review) GetGradingBenchmarks() []*GradingBenchmark {
	if x != nil {
		return x.GradingBenchmarks
	}
	return nil
}

func (x *Review) GetEdited() *timestamppb.Timestamp {
	if x != nil {
		return x.Edited
	}
	return nil
}

var File_qf_types_proto protoreflect.FileDescriptor

const file_qf_types_proto_rawDesc = "" +
	"\n" +
	"\x0eqf/types.proto\x12\x02qf\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x15kit/score/score.proto\x1a\x0epatch/go.proto\"\xc6\x02\n" +
	"\x04User\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\x18\n" +
	"\aIsAdmin\x18\x02 \x01(\bR\aIsAdmin\x12\x12\n" +
	"\x04Name\x18\x03 \x01(\tR\x04Name\x12\x1c\n" +
	"\tStudentID\x18\x04 \x01(\tR\tStudentID\x12\x14\n" +
	"\x05Email\x18\x05 \x01(\tR\x05Email\x12\x1c\n" +
	"\tAvatarURL\x18\x06 \x01(\tR\tAvatarURL\x12\x14\n" +
	"\x05Login\x18\a \x01(\tR\x05Login\x12 \n" +
	"\vUpdateToken\x18\b \x01(\bR\vUpdateToken\x12 \n" +
	"\vScmRemoteID\x18\t \x01(\x04R\vScmRemoteID\x12\"\n" +
	"\fRefreshToken\x18\n" +
	" \x01(\tR\fRefreshToken\x120\n" +
	"\vEnrollments\x18\v \x03(\v2\x0e.qf.EnrollmentR\vEnrollments\"'\n" +
	"\x05Users\x12\x1e\n" +
	"\x05users\x18\x01 \x03(\v2\b.qf.UserR\x05users\"\xda\x02\n" +
	"\x05Group\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x123\n" +
	"\x04name\x18\x02 \x01(\tB\x1fʵ\x03\x1b\xa2\x01\x18gorm:\"uniqueIndex:group\"R\x04name\x12;\n" +
	"\bcourseID\x18\x03 \x01(\x04B\x1fʵ\x03\x1b\xa2\x01\x18gorm:\"uniqueIndex:group\"R\bcourseID\x12-\n" +
	"\x06status\x18\x05 \x01(\x0e2\x15.qf.Group.GroupStatusR\x06status\x12D\n" +
	"\x05users\x18\x06 \x03(\v2\b.qf.UserB$ʵ\x03 \xa2\x01\x1dgorm:\"many2many:group_users;\"R\x05users\x120\n" +
	"\venrollments\x18\a \x03(\v2\x0e.qf.EnrollmentR\venrollments\"(\n" +
	"\vGroupStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\f\n" +
	"\bAPPROVED\x10\x01\"+\n" +
	"\x06Groups\x12!\n" +
	"\x06groups\x18\x01 \x03(\v2\t.qf.GroupR\x06groups\"\xcb\x04\n" +
	"\x06Course\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12(\n" +
	"\x0fcourseCreatorID\x18\x02 \x01(\x04R\x0fcourseCreatorID\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x124\n" +
	"\x04code\x18\x04 \x01(\tB ʵ\x03\x1c\xa2\x01\x19gorm:\"uniqueIndex:course\"R\x04code\x124\n" +
	"\x04year\x18\x05 \x01(\rB ʵ\x03\x1c\xa2\x01\x19gorm:\"uniqueIndex:course\"R\x04year\x12\x10\n" +
	"\x03tag\x18\x06 \x01(\tR\x03tag\x12,\n" +
	"\x11ScmOrganizationID\x18\b \x01(\x04R\x11ScmOrganizationID\x120\n" +
	"\x13ScmOrganizationName\x18\t \x01(\tR\x13ScmOrganizationName\x12\x1a\n" +
	"\bslipDays\x18\n" +
	" \x01(\rR\bslipDays\x12*\n" +
	"\x10DockerfileDigest\x18\v \x01(\tR\x10DockerfileDigest\x12F\n" +
	"\benrolled\x18\f \x01(\x0e2\x19.qf.Enrollment.UserStatusB\x0fʵ\x03\v\xa2\x01\bgorm:\"-\"R\benrolled\x120\n" +
	"\venrollments\x18\r \x03(\v2\x0e.qf.EnrollmentR\venrollments\x120\n" +
	"\vassignments\x18\x0e \x03(\v2\x0e.qf.AssignmentR\vassignments\x12!\n" +
	"\x06groups\x18\x0f \x03(\v2\t.qf.GroupR\x06groups\"/\n" +
	"\aCourses\x12$\n" +
	"\acourses\x18\x01 \x03(\v2\n" +
	".qf.CourseR\acourses\"\xf9\x03\n" +
	"\n" +
	"Repository\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12R\n" +
	"\x11ScmOrganizationID\x18\x02 \x01(\x04B$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:repository\"R\x11ScmOrganizationID\x12(\n" +
	"\x0fScmRepositoryID\x18\x03 \x01(\x04R\x0fScmRepositoryID\x12<\n" +
	"\x06userID\x18\x04 \x01(\x04B$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:repository\"R\x06userID\x12>\n" +
	"\agroupID\x18\x05 \x01(\x04B$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:repository\"R\agroupID\x12\x18\n" +
	"\aHTMLURL\x18\x06 \x01(\tR\aHTMLURL\x12U\n" +
	"\brepoType\x18\a \x01(\x0e2\x13.qf.Repository.TypeB$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:repository\"R\brepoType\x12!\n" +
	"\x06issues\x18\b \x03(\v2\t.qf.IssueR\x06issues\"K\n" +
	"\x04Type\x12\b\n" +
	"\x04NONE\x10\x00\x12\b\n" +
	"\x04INFO\x10\x01\x12\x0f\n" +
	"\vASSIGNMENTS\x10\x02\x12\t\n" +
	"\x05TESTS\x10\x03\x12\b\n" +
	"\x04USER\x10\x04\x12\t\n" +
	"\x05GROUP\x10\x05\"\x95\x06\n" +
	"\n" +
	"Enrollment\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12@\n" +
	"\bcourseID\x18\x02 \x01(\x04B$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:enrollment\"R\bcourseID\x12<\n" +
	"\x06userID\x18\x03 \x01(\x04B$ʵ\x03 \xa2\x01\x1dgorm:\"uniqueIndex:enrollment\"R\x06userID\x12\x18\n" +
	"\agroupID\x18\x04 \x01(\x04R\agroupID\x12\x1c\n" +
	"\x04user\x18\x05 \x01(\v2\b.qf.UserR\x04user\x12\"\n" +
	"\x06course\x18\x06 \x01(\v2\n" +
	".qf.CourseR\x06course\x12\x1f\n" +
	"\x05group\x18\a \x01(\v2\t.qf.GroupR\x05group\x121\n" +
	"\x06status\x18\b \x01(\x0e2\x19.qf.Enrollment.UserStatusR\x06status\x121\n" +
	"\x05state\x18\t \x01(\x0e2\x1b.qf.Enrollment.DisplayStateR\x05state\x12=\n" +
	"\x11slipDaysRemaining\x18\n" +
	" \x01(\rB\x0fʵ\x03\v\xa2\x01\bgorm:\"-\"R\x11slipDaysRemaining\x12x\n" +
	"\x10lastActivityDate\x18\v \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\x10lastActivityDate\x12$\n" +
	"\rtotalApproved\x18\f \x01(\x04R\rtotalApproved\x124\n" +
	"\fusedSlipDays\x18\r \x03(\v2\x10.qf.UsedSlipDaysR\fusedSlipDays\"=\n" +
	"\n" +
	"UserStatus\x12\b\n" +
	"\x04NONE\x10\x00\x12\v\n" +
	"\aPENDING\x10\x01\x12\v\n" +
	"\aSTUDENT\x10\x02\x12\v\n" +
	"\aTEACHER\x10\x03\"@\n" +
	"\fDisplayState\x12\t\n" +
	"\x05UNSET\x10\x00\x12\n" +
	"\n" +
	"\x06HIDDEN\x10\x01\x12\v\n" +
	"\aVISIBLE\x10\x02\x12\f\n" +
	"\bFAVORITE\x10\x03\"\x82\x01\n" +
	"\fUsedSlipDays\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\"\n" +
	"\fenrollmentID\x18\x02 \x01(\x04R\fenrollmentID\x12\"\n" +
	"\fassignmentID\x18\x03 \x01(\x04R\fassignmentID\x12\x1a\n" +
	"\busedDays\x18\x04 \x01(\rR\busedDays\"?\n" +
	"\vEnrollments\x120\n" +
	"\venrollments\x18\x01 \x03(\v2\x0e.qf.EnrollmentR\venrollments\"\x8e\x04\n" +
	"\n" +
	"Assignment\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\x1a\n" +
	"\bCourseID\x18\x02 \x01(\x04R\bCourseID\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12h\n" +
	"\bdeadline\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\bdeadline\x12 \n" +
	"\vautoApprove\x18\x05 \x01(\bR\vautoApprove\x12\x14\n" +
	"\x05order\x18\x06 \x01(\rR\x05order\x12\x1e\n" +
	"\n" +
	"isGroupLab\x18\a \x01(\bR\n" +
	"isGroupLab\x12\x1e\n" +
	"\n" +
	"scoreLimit\x18\b \x01(\rR\n" +
	"scoreLimit\x12\x1c\n" +
	"\treviewers\x18\t \x01(\rR\treviewers\x12*\n" +
	"\x10containerTimeout\x18\n" +
	" \x01(\rR\x10containerTimeout\x120\n" +
	"\vsubmissions\x18\v \x03(\v2\x0e.qf.SubmissionR\vsubmissions\x12\x1e\n" +
	"\x05tasks\x18\f \x03(\v2\b.qf.TaskR\x05tasks\x12B\n" +
	"\x11gradingBenchmarks\x18\r \x03(\v2\x14.qf.GradingBenchmarkR\x11gradingBenchmarks\"\xc5\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\"\n" +
	"\fassignmentID\x18\x02 \x01(\x04R\fassignmentID\x12(\n" +
	"\x0fassignmentOrder\x18\x03 \x01(\rR\x0fassignmentOrder\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x12\n" +
	"\x04body\x18\x05 \x01(\tR\x04body\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12!\n" +
	"\x06issues\x18\a \x03(\v2\t.qf.IssueR\x06issues\"{\n" +
	"\x05Issue\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\"\n" +
	"\frepositoryID\x18\x02 \x01(\x04R\frepositoryID\x12\x16\n" +
	"\x06taskID\x18\x03 \x01(\x04R\x06taskID\x12&\n" +
	"\x0eScmIssueNumber\x18\x04 \x01(\x04R\x0eScmIssueNumber\"\xd6\x02\n" +
	"\vPullRequest\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12(\n" +
	"\x0fScmRepositoryID\x18\x02 \x01(\x04R\x0fScmRepositoryID\x12\x16\n" +
	"\x06taskID\x18\x03 \x01(\x04R\x06taskID\x12\x18\n" +
	"\aissueID\x18\x04 \x01(\x04R\aissueID\x12\x16\n" +
	"\x06userID\x18\x05 \x01(\x04R\x06userID\x12\"\n" +
	"\fScmCommentID\x18\x06 \x01(\x04R\fScmCommentID\x12\"\n" +
	"\fsourceBranch\x18\a \x01(\tR\fsourceBranch\x12\x16\n" +
	"\x06number\x18\b \x01(\x04R\x06number\x12+\n" +
	"\x05stage\x18\t \x01(\x0e2\x15.qf.PullRequest.StageR\x05stage\"6\n" +
	"\x05Stage\x12\b\n" +
	"\x04NONE\x10\x00\x12\t\n" +
	"\x05DRAFT\x10\x01\x12\n" +
	"\n" +
	"\x06REVIEW\x10\x02\x12\f\n" +
	"\bAPPROVED\x10\x03\"?\n" +
	"\vAssignments\x120\n" +
	"\vassignments\x18\x01 \x03(\v2\x0e.qf.AssignmentR\vassignments\"\x93\x04\n" +
	"\n" +
	"Submission\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\"\n" +
	"\fAssignmentID\x18\x02 \x01(\x04R\fAssignmentID\x12\x16\n" +
	"\x06userID\x18\x03 \x01(\x04R\x06userID\x12\x18\n" +
	"\agroupID\x18\x04 \x01(\x04R\agroupID\x12\x14\n" +
	"\x05score\x18\x05 \x01(\rR\x05score\x12\x1e\n" +
	"\n" +
	"commitHash\x18\x06 \x01(\tR\n" +
	"commitHash\x12\x1a\n" +
	"\breleased\x18\a \x01(\bR\breleased\x12!\n" +
	"\x06Grades\x18\b \x03(\v2\t.qf.GradeR\x06Grades\x12p\n" +
	"\fapprovedDate\x18\t \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\fapprovedDate\x12$\n" +
	"\areviews\x18\n" +
	" \x03(\v2\n" +
	".qf.ReviewR\areviews\x12.\n" +
	"\tBuildInfo\x18\v \x01(\v2\x10.score.BuildInfoR\tBuildInfo\x12$\n" +
	"\x06Scores\x18\f \x03(\v2\f.score.ScoreR\x06Scores\"<\n" +
	"\x06Status\x12\b\n" +
	"\x04NONE\x10\x00\x12\f\n" +
	"\bAPPROVED\x10\x01\x12\f\n" +
	"\bREJECTED\x10\x02\x12\f\n" +
	"\bREVISION\x10\x03\"?\n" +
	"\vSubmissions\x120\n" +
	"\vsubmissions\x18\x01 \x03(\v2\x0e.qf.SubmissionR\vsubmissions\"\xb4\x01\n" +
	"\x05Grade\x12C\n" +
	"\fSubmissionID\x18\x01 \x01(\x04B\x1fʵ\x03\x1b\xa2\x01\x18gorm:\"uniqueIndex:grade\"R\fSubmissionID\x127\n" +
	"\x06UserID\x18\x02 \x01(\x04B\x1fʵ\x03\x1b\xa2\x01\x18gorm:\"uniqueIndex:grade\"R\x06UserID\x12-\n" +
	"\x06Status\x18\x03 \x01(\x0e2\x15.qf.Submission.StatusR\x06Status\"\x8a\x02\n" +
	"\x10GradingBenchmark\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\x1a\n" +
	"\bCourseID\x18\x02 \x01(\x04R\bCourseID\x12\"\n" +
	"\fAssignmentID\x18\x03 \x01(\x04R\fAssignmentID\x12\x1a\n" +
	"\bReviewID\x18\x04 \x01(\x04R\bReviewID\x12\x18\n" +
	"\aheading\x18\x05 \x01(\tR\aheading\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\x12V\n" +
	"\bcriteria\x18\a \x03(\v2\x14.qf.GradingCriterionB$ʵ\x03 \xa2\x01\x1dgorm:\"foreignKey:BenchmarkID\"R\bcriteria\"B\n" +
	"\n" +
	"Benchmarks\x124\n" +
	"\n" +
	"benchmarks\x18\x01 \x03(\v2\x14.qf.GradingBenchmarkR\n" +
	"benchmarks\"\x91\x02\n" +
	"\x10GradingCriterion\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12 \n" +
	"\vBenchmarkID\x18\x02 \x01(\x04R\vBenchmarkID\x12\x1a\n" +
	"\bCourseID\x18\x03 \x01(\x04R\bCourseID\x12\x16\n" +
	"\x06points\x18\x04 \x01(\x04R\x06points\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x120\n" +
	"\x05grade\x18\x06 \x01(\x0e2\x1a.qf.GradingCriterion.GradeR\x05grade\x12\x18\n" +
	"\acomment\x18\a \x01(\tR\acomment\")\n" +
	"\x05Grade\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06FAILED\x10\x01\x12\n" +
	"\n" +
	"\x06PASSED\x10\x02\"\xf1\x02\n" +
	"\x06Review\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12\"\n" +
	"\fSubmissionID\x18\x02 \x01(\x04R\fSubmissionID\x12\x1e\n" +
	"\n" +
	"ReviewerID\x18\x03 \x01(\x04R\n" +
	"ReviewerID\x12\x1a\n" +
	"\bfeedback\x18\x04 \x01(\tR\bfeedback\x12\x14\n" +
	"\x05ready\x18\x05 \x01(\bR\x05ready\x12\x14\n" +
	"\x05score\x18\x06 \x01(\rR\x05score\x12e\n" +
	"\x11gradingBenchmarks\x18\a \x03(\v2\x14.qf.GradingBenchmarkB!ʵ\x03\x1d\xa2\x01\x1agorm:\"foreignKey:ReviewID\"R\x11gradingBenchmarks\x12d\n" +
	"\x06edited\x18\b \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\x06editedB&Z!github.com/quickfeed/quickfeed/qf\xba\x02\x00b\x06proto3"

var (
	file_qf_types_proto_rawDescOnce sync.Once
	file_qf_types_proto_rawDescData []byte
)

func file_qf_types_proto_rawDescGZIP() []byte {
	file_qf_types_proto_rawDescOnce.Do(func() {
		file_qf_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qf_types_proto_rawDesc), len(file_qf_types_proto_rawDesc)))
	})
	return file_qf_types_proto_rawDescData
}

var file_qf_types_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_qf_types_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_qf_types_proto_goTypes = []any{
	(Group_GroupStatus)(0),        // 0: qf.Group.GroupStatus
	(Repository_Type)(0),          // 1: qf.Repository.Type
	(Enrollment_UserStatus)(0),    // 2: qf.Enrollment.UserStatus
	(Enrollment_DisplayState)(0),  // 3: qf.Enrollment.DisplayState
	(PullRequest_Stage)(0),        // 4: qf.PullRequest.Stage
	(Submission_Status)(0),        // 5: qf.Submission.Status
	(GradingCriterion_Grade)(0),   // 6: qf.GradingCriterion.Grade
	(*User)(nil),                  // 7: qf.User
	(*Users)(nil),                 // 8: qf.Users
	(*Group)(nil),                 // 9: qf.Group
	(*Groups)(nil),                // 10: qf.Groups
	(*Course)(nil),                // 11: qf.Course
	(*Courses)(nil),               // 12: qf.Courses
	(*Repository)(nil),            // 13: qf.Repository
	(*Enrollment)(nil),            // 14: qf.Enrollment
	(*UsedSlipDays)(nil),          // 15: qf.UsedSlipDays
	(*Enrollments)(nil),           // 16: qf.Enrollments
	(*Assignment)(nil),            // 17: qf.Assignment
	(*Task)(nil),                  // 18: qf.Task
	(*Issue)(nil),                 // 19: qf.Issue
	(*PullRequest)(nil),           // 20: qf.PullRequest
	(*Assignments)(nil),           // 21: qf.Assignments
	(*Submission)(nil),            // 22: qf.Submission
	(*Submissions)(nil),           // 23: qf.Submissions
	(*Grade)(nil),                 // 24: qf.Grade
	(*GradingBenchmark)(nil),      // 25: qf.GradingBenchmark
	(*Benchmarks)(nil),            // 26: qf.Benchmarks
	(*GradingCriterion)(nil),      // 27: qf.GradingCriterion
	(*Review)(nil),                // 28: qf.Review
	(*timestamppb.Timestamp)(nil), // 29: google.protobuf.Timestamp
	(*score.BuildInfo)(nil),       // 30: score.BuildInfo
	(*score.Score)(nil),           // 31: score.Score
}
var file_qf_types_proto_depIdxs = []int32{
	14, // 0: qf.User.Enrollments:type_name -> qf.Enrollment
	7,  // 1: qf.Users.users:type_name -> qf.User
	0,  // 2: qf.Group.status:type_name -> qf.Group.GroupStatus
	7,  // 3: qf.Group.users:type_name -> qf.User
	14, // 4: qf.Group.enrollments:type_name -> qf.Enrollment
	9,  // 5: qf.Groups.groups:type_name -> qf.Group
	2,  // 6: qf.Course.enrolled:type_name -> qf.Enrollment.UserStatus
	14, // 7: qf.Course.enrollments:type_name -> qf.Enrollment
	17, // 8: qf.Course.assignments:type_name -> qf.Assignment
	9,  // 9: qf.Course.groups:type_name -> qf.Group
	11, // 10: qf.Courses.courses:type_name -> qf.Course
	1,  // 11: qf.Repository.repoType:type_name -> qf.Repository.Type
	19, // 12: qf.Repository.issues:type_name -> qf.Issue
	7,  // 13: qf.Enrollment.user:type_name -> qf.User
	11, // 14: qf.Enrollment.course:type_name -> qf.Course
	9,  // 15: qf.Enrollment.group:type_name -> qf.Group
	2,  // 16: qf.Enrollment.status:type_name -> qf.Enrollment.UserStatus
	3,  // 17: qf.Enrollment.state:type_name -> qf.Enrollment.DisplayState
	29, // 18: qf.Enrollment.lastActivityDate:type_name -> google.protobuf.Timestamp
	15, // 19: qf.Enrollment.usedSlipDays:type_name -> qf.UsedSlipDays
	14, // 20: qf.Enrollments.enrollments:type_name -> qf.Enrollment
	29, // 21: qf.Assignment.deadline:type_name -> google.protobuf.Timestamp
	22, // 22: qf.Assignment.submissions:type_name -> qf.Submission
	18, // 23: qf.Assignment.tasks:type_name -> qf.Task
	25, // 24: qf.Assignment.gradingBenchmarks:type_name -> qf.GradingBenchmark
	19, // 25: qf.Task.issues:type_name -> qf.Issue
	4,  // 26: qf.PullRequest.stage:type_name -> qf.PullRequest.Stage
	17, // 27: qf.Assignments.assignments:type_name -> qf.Assignment
	24, // 28: qf.Submission.Grades:type_name -> qf.Grade
	29, // 29: qf.Submission.approvedDate:type_name -> google.protobuf.Timestamp
	28, // 30: qf.Submission.reviews:type_name -> qf.Review
	30, // 31: qf.Submission.BuildInfo:type_name -> score.BuildInfo
	31, // 32: qf.Submission.Scores:type_name -> score.Score
	22, // 33: qf.Submissions.submissions:type_name -> qf.Submission
	5,  // 34: qf.Grade.Status:type_name -> qf.Submission.Status
	27, // 35: qf.GradingBenchmark.criteria:type_name -> qf.GradingCriterion
	25, // 36: qf.Benchmarks.benchmarks:type_name -> qf.GradingBenchmark
	6,  // 37: qf.GradingCriterion.grade:type_name -> qf.GradingCriterion.Grade
	25, // 38: qf.Review.gradingBenchmarks:type_name -> qf.GradingBenchmark
	29, // 39: qf.Review.edited:type_name -> google.protobuf.Timestamp
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_qf_types_proto_init() }
func file_qf_types_proto_init() {
	if File_qf_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qf_types_proto_rawDesc), len(file_qf_types_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qf_types_proto_goTypes,
		DependencyIndexes: file_qf_types_proto_depIdxs,
		EnumInfos:         file_qf_types_proto_enumTypes,
		MessageInfos:      file_qf_types_proto_msgTypes,
	}.Build()
	File_qf_types_proto = out.File
	file_qf_types_proto_goTypes = nil
	file_qf_types_proto_depIdxs = nil
}
