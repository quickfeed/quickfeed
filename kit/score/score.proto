syntax = "proto3";
package score;
option go_package = "github.com/quickfeed/quickfeed/kit/score";

import "google/protobuf/timestamp.proto";
import "patch/go.proto";

// To define a field that must use a custom serializer because of a type not directly supported by GORM, use:
//  [(go.field) = {tags: 'gorm:"serializer:<custom_serializer>"'}]
//
// To define a field that must be stored in the database as a specific type, use:
// [(go.field) = {tags: 'gorm:"type:<type>"'}]
//
// The tag [(go.field) = { tags: 'gorm:"serializer:timestamp;type:datetime"' }] instructs gorm to use
// the custom serializer for timestamp because timestamppb.Timestamp is not supported.
// The serializer converts timestamp fields to time.Time which will be saved in the database as "datetime".

// Score give the score for a single test named TestName.
message Score {
    uint64 ID           = 1;
    uint64 SubmissionID = 2 [(go.field) = { tags: 'gorm:"foreignKey:ID"' }];
    string Secret       = 3 [(go.field) = { tags: 'gorm:"-"' }];  // the unique identifier for a scoring session

    string TestName    = 4;  // name of the test
    string TaskName    = 5;  // name of task this score belongs to
    int32 Score        = 6;  // the score obtained
    int32 MaxScore     = 7;  // max score possible to get on this specific test
    int32 Weight       = 8;  // the weight of this test; used to compute final grade
    string TestDetails = 9;  // if populated, the frontend may display these details
}

// BuildInfo holds build data for an assignment's test execution.
message BuildInfo {
    uint64 ID           = 1;
    uint64 SubmissionID = 2 [(go.field) = { tags: 'gorm:"foreignKey:ID"' }];
    string BuildLog     = 3;
    int64 ExecTime      = 4;

    google.protobuf.Timestamp BuildDate      = 5 [(go.field) = { tags: 'gorm:"serializer:timestamp;type:datetime"' }];
    google.protobuf.Timestamp SubmissionDate = 6 [(go.field) = { tags: 'gorm:"serializer:timestamp;type:datetime"' }];
}
