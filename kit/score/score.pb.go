// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kit/score/score.proto

package score

import (
	_ "github.com/alta/protopatch/patch/gopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Score give the score for a single test named TestName.
type Score struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SubmissionID  uint64                 `protobuf:"varint,2,opt,name=SubmissionID,proto3" json:"SubmissionID,omitempty" gorm:"foreignKey:ID"`
	Secret        string                 `protobuf:"bytes,3,opt,name=Secret,proto3" json:"Secret,omitempty" gorm:"-"`  // the unique identifier for a scoring session
	TestName      string                 `protobuf:"bytes,4,opt,name=TestName,proto3" json:"TestName,omitempty"`       // name of the test
	TaskName      string                 `protobuf:"bytes,5,opt,name=TaskName,proto3" json:"TaskName,omitempty"`       // name of task this score belongs to
	Score         int32                  `protobuf:"varint,6,opt,name=Score,proto3" json:"Score,omitempty"`            // the score obtained
	MaxScore      int32                  `protobuf:"varint,7,opt,name=MaxScore,proto3" json:"MaxScore,omitempty"`      // max score possible to get on this specific test
	Weight        int32                  `protobuf:"varint,8,opt,name=Weight,proto3" json:"Weight,omitempty"`          // the weight of this test; used to compute final grade
	TestDetails   string                 `protobuf:"bytes,9,opt,name=TestDetails,proto3" json:"TestDetails,omitempty"` // if populated, the frontend may display these details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Score) Reset() {
	*x = Score{}
	mi := &file_kit_score_score_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_kit_score_score_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_kit_score_score_proto_rawDescGZIP(), []int{0}
}

func (x *Score) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Score) GetSubmissionID() uint64 {
	if x != nil {
		return x.SubmissionID
	}
	return 0
}

func (x *Score) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *Score) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *Score) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *Score) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Score) GetMaxScore() int32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *Score) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Score) GetTestDetails() string {
	if x != nil {
		return x.TestDetails
	}
	return ""
}

// BuildInfo holds build data for an assignment's test execution.
type BuildInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ID             uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SubmissionID   uint64                 `protobuf:"varint,2,opt,name=SubmissionID,proto3" json:"SubmissionID,omitempty" gorm:"foreignKey:ID"`
	BuildLog       string                 `protobuf:"bytes,3,opt,name=BuildLog,proto3" json:"BuildLog,omitempty"`
	ExecTime       int64                  `protobuf:"varint,4,opt,name=ExecTime,proto3" json:"ExecTime,omitempty"`
	BuildDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=BuildDate,proto3" json:"BuildDate,omitempty" gorm:"serializer:timestamp;type:datetime"`
	SubmissionDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=SubmissionDate,proto3" json:"SubmissionDate,omitempty" gorm:"serializer:timestamp;type:datetime"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	mi := &file_kit_score_score_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kit_score_score_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_kit_score_score_proto_rawDescGZIP(), []int{1}
}

func (x *BuildInfo) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BuildInfo) GetSubmissionID() uint64 {
	if x != nil {
		return x.SubmissionID
	}
	return 0
}

func (x *BuildInfo) GetBuildLog() string {
	if x != nil {
		return x.BuildLog
	}
	return ""
}

func (x *BuildInfo) GetExecTime() int64 {
	if x != nil {
		return x.ExecTime
	}
	return 0
}

func (x *BuildInfo) GetBuildDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildDate
	}
	return nil
}

func (x *BuildInfo) GetSubmissionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmissionDate
	}
	return nil
}

var File_kit_score_score_proto protoreflect.FileDescriptor

const file_kit_score_score_proto_rawDesc = "" +
	"\n" +
	"\x15kit/score/score.proto\x12\x05score\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x0epatch/go.proto\"\xa5\x02\n" +
	"\x05Score\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12?\n" +
	"\fSubmissionID\x18\x02 \x01(\x04B\x1bʵ\x03\x17\xa2\x01\x14gorm:\"foreignKey:ID\"R\fSubmissionID\x12'\n" +
	"\x06Secret\x18\x03 \x01(\tB\x0fʵ\x03\v\xa2\x01\bgorm:\"-\"R\x06Secret\x12\x1a\n" +
	"\bTestName\x18\x04 \x01(\tR\bTestName\x12\x1a\n" +
	"\bTaskName\x18\x05 \x01(\tR\bTaskName\x12\x14\n" +
	"\x05Score\x18\x06 \x01(\x05R\x05Score\x12\x1a\n" +
	"\bMaxScore\x18\a \x01(\x05R\bMaxScore\x12\x16\n" +
	"\x06Weight\x18\b \x01(\x05R\x06Weight\x12 \n" +
	"\vTestDetails\x18\t \x01(\tR\vTestDetails\"\xf6\x02\n" +
	"\tBuildInfo\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12?\n" +
	"\fSubmissionID\x18\x02 \x01(\x04B\x1bʵ\x03\x17\xa2\x01\x14gorm:\"foreignKey:ID\"R\fSubmissionID\x12\x1a\n" +
	"\bBuildLog\x18\x03 \x01(\tR\bBuildLog\x12\x1a\n" +
	"\bExecTime\x18\x04 \x01(\x03R\bExecTime\x12j\n" +
	"\tBuildDate\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\tBuildDate\x12t\n" +
	"\x0eSubmissionDate\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB0ʵ\x03,\xa2\x01)gorm:\"serializer:timestamp;type:datetime\"R\x0eSubmissionDateB*Z(github.com/quickfeed/quickfeed/kit/scoreb\x06proto3"

var (
	file_kit_score_score_proto_rawDescOnce sync.Once
	file_kit_score_score_proto_rawDescData []byte
)

func file_kit_score_score_proto_rawDescGZIP() []byte {
	file_kit_score_score_proto_rawDescOnce.Do(func() {
		file_kit_score_score_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kit_score_score_proto_rawDesc), len(file_kit_score_score_proto_rawDesc)))
	})
	return file_kit_score_score_proto_rawDescData
}

var file_kit_score_score_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kit_score_score_proto_goTypes = []any{
	(*Score)(nil),                 // 0: score.Score
	(*BuildInfo)(nil),             // 1: score.BuildInfo
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_kit_score_score_proto_depIdxs = []int32{
	2, // 0: score.BuildInfo.BuildDate:type_name -> google.protobuf.Timestamp
	2, // 1: score.BuildInfo.SubmissionDate:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kit_score_score_proto_init() }
func file_kit_score_score_proto_init() {
	if File_kit_score_score_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kit_score_score_proto_rawDesc), len(file_kit_score_score_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kit_score_score_proto_goTypes,
		DependencyIndexes: file_kit_score_score_proto_depIdxs,
		MessageInfos:      file_kit_score_score_proto_msgTypes,
	}.Build()
	File_kit_score_score_proto = out.File
	file_kit_score_score_proto_goTypes = nil
	file_kit_score_score_proto_depIdxs = nil
}
